<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_fort_8hpp_source" xml:lang="en-US">
<title>fort.hpp</title>
<indexterm><primary>C:/workspace/Computer Vision/OpenCVProjekt/OpenCVTest/fort.hpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*</emphasis>
2 <emphasis role="comment">libfort</emphasis>
3 <emphasis role="comment"></emphasis>
4 <emphasis role="comment">MIT&#32;License</emphasis>
5 <emphasis role="comment"></emphasis>
6 <emphasis role="comment">Copyright&#32;(c)&#32;2017&#32;-&#32;2020&#32;Seleznev&#32;Anton</emphasis>
7 <emphasis role="comment"></emphasis>
8 <emphasis role="comment">Permission&#32;is&#32;hereby&#32;granted,&#32;free&#32;of&#32;charge,&#32;to&#32;any&#32;person&#32;obtaining&#32;a&#32;copy</emphasis>
9 <emphasis role="comment">of&#32;this&#32;software&#32;and&#32;associated&#32;documentation&#32;files&#32;(the&#32;&quot;Software&quot;),&#32;to&#32;deal</emphasis>
10 <emphasis role="comment">in&#32;the&#32;Software&#32;without&#32;restriction,&#32;including&#32;without&#32;limitation&#32;the&#32;rights</emphasis>
11 <emphasis role="comment">to&#32;use,&#32;copy,&#32;modify,&#32;merge,&#32;publish,&#32;distribute,&#32;sublicense,&#32;and/or&#32;sell</emphasis>
12 <emphasis role="comment">copies&#32;of&#32;the&#32;Software,&#32;and&#32;to&#32;permit&#32;persons&#32;to&#32;whom&#32;the&#32;Software&#32;is</emphasis>
13 <emphasis role="comment">furnished&#32;to&#32;do&#32;so,&#32;subject&#32;to&#32;the&#32;following&#32;conditions:</emphasis>
14 <emphasis role="comment"></emphasis>
15 <emphasis role="comment">The&#32;above&#32;copyright&#32;notice&#32;and&#32;this&#32;permission&#32;notice&#32;shall&#32;be&#32;included&#32;in&#32;all</emphasis>
16 <emphasis role="comment">copies&#32;or&#32;substantial&#32;portions&#32;of&#32;the&#32;Software.</emphasis>
17 <emphasis role="comment"></emphasis>
18 <emphasis role="comment">THE&#32;SOFTWARE&#32;IS&#32;PROVIDED&#32;&quot;AS&#32;IS&quot;,&#32;WITHOUT&#32;WARRANTY&#32;OF&#32;ANY&#32;KIND,&#32;EXPRESS&#32;OR</emphasis>
19 <emphasis role="comment">IMPLIED,&#32;INCLUDING&#32;BUT&#32;NOT&#32;LIMITED&#32;TO&#32;THE&#32;WARRANTIES&#32;OF&#32;MERCHANTABILITY,</emphasis>
20 <emphasis role="comment">FITNESS&#32;FOR&#32;A&#32;PARTICULAR&#32;PURPOSE&#32;AND&#32;NONINFRINGEMENT.&#32;IN&#32;NO&#32;EVENT&#32;SHALL&#32;THE</emphasis>
21 <emphasis role="comment">AUTHORS&#32;OR&#32;COPYRIGHT&#32;HOLDERS&#32;BE&#32;LIABLE&#32;FOR&#32;ANY&#32;CLAIM,&#32;DAMAGES&#32;OR&#32;OTHER</emphasis>
22 <emphasis role="comment">LIABILITY,&#32;WHETHER&#32;IN&#32;AN&#32;ACTION&#32;OF&#32;CONTRACT,&#32;TORT&#32;OR&#32;OTHERWISE,&#32;ARISING&#32;FROM,</emphasis>
23 <emphasis role="comment">OUT&#32;OF&#32;OR&#32;IN&#32;CONNECTION&#32;WITH&#32;THE&#32;SOFTWARE&#32;OR&#32;THE&#32;USE&#32;OR&#32;OTHER&#32;DEALINGS&#32;IN&#32;THE</emphasis>
24 <emphasis role="comment">SOFTWARE.</emphasis>
25 <emphasis role="comment">*/</emphasis>
26 
34 <emphasis role="preprocessor">#ifndef&#32;LIBFORT_HPP</emphasis>
35 <emphasis role="preprocessor">#define&#32;LIBFORT_HPP</emphasis>
36 
37 <emphasis role="preprocessor">#include&#32;&lt;iomanip&gt;</emphasis>
38 <emphasis role="preprocessor">#include&#32;&lt;sstream&gt;</emphasis>
39 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
40 <emphasis role="preprocessor">#include&#32;&lt;stdexcept&gt;</emphasis>
41 <emphasis role="preprocessor">#include&#32;&lt;type_traits&gt;</emphasis>
42 
43 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_fort_8h">fort.h</link>&quot;</emphasis>
44 
45 <emphasis role="keyword">namespace&#32;</emphasis><link linkend="_namespacefort">fort</link>
46 {
47 
51 <emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacefort_1a895f73752fc847c22853fd363a575b04">text_align</link>&#32;{
52 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a895f73752fc847c22853fd363a575b04a811882fecd5c7618d7099ebbd39ea254">left</link>&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a3ce6dedcf688e310a3cfbb5cdae9d32ca62837cbc7c859d5d38d608f51806e66d">FT_ALIGNED_LEFT</link>,
53 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a895f73752fc847c22853fd363a575b04aadb115059e28d960fa8badfac5516667">center</link>&#32;=&#32;<link linkend="_fort_8h_1a3ce6dedcf688e310a3cfbb5cdae9d32cac43d09334b02f1300989a8789455183e">FT_ALIGNED_CENTER</link>,
54 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a895f73752fc847c22853fd363a575b04a7c4f29407893c334a6cb7a87bf045c0d">right</link>&#32;&#32;=&#32;<link linkend="_fort_8h_1a3ce6dedcf688e310a3cfbb5cdae9d32ca31bdf997c2db055fe5669e9e174277cc">FT_ALIGNED_RIGHT</link>
55 };
56 
60 <emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacefort_1a28370d69d653e7ae3cb80c61cf2469aa">row_type</link>&#32;{
61 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a28370d69d653e7ae3cb80c61cf2469aaa9efab2399c7c560b34de477b9aa0a465">common</link>&#32;=&#32;<link linkend="_fort_8h_1a06d9536a2e476d68f5055820535d3b34ae50a530e078dd8425784ca02e66d2433">FT_ROW_COMMON</link>,
62 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a6b60404c249df2f612d990c603d49517">header</link>&#32;=&#32;<link linkend="_fort_8h_1a06d9536a2e476d68f5055820535d3b34a2a0a31078eac88202029c3e9bdaa614a">FT_ROW_HEADER</link>
63 };
64 
71 <emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacefort_1a90d7e4b53ec42f4eddd9e63eb02abca4">add_strategy</link>&#32;{
72 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a90d7e4b53ec42f4eddd9e63eb02abca4a9dde360102c103867bd2f45872f1129c">replace</link>&#32;=&#32;<link linkend="_fort_8h_1aeed2958a1823084ca6e71883b075baa5aa620d123a0ac00710153d28a6ab65842">FT_STRATEGY_REPLACE</link>,
73 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a90d7e4b53ec42f4eddd9e63eb02abca4ae0df5f3dfd2650ae5be9993434e2b2c0">insert</link>&#32;&#32;=&#32;<link linkend="_fort_8h_1aeed2958a1823084ca6e71883b075baa5acc1102bce0611e414231a7e41357300f">FT_STRATEGY_INSERT</link>
74 };
75 
79 <emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbba">color</link>&#32;{
80 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaaf00b888e90cd7fe1d5c2f7b44ed4ad9b">default_color</link>&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63face2e85ce681b17d9334eb832a1558445">FT_COLOR_DEFAULT</link>,
81 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaa1ffd9e753c8054cc61456ac7fac1ac89">black</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63fa6e1eb39443ae233746378aa84548f553">FT_COLOR_BLACK</link>,
82 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaabda9643ac6601722a28f238714274da4">red</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63faf31632500abf110557632f09e267472d">FT_COLOR_RED</link>,
83 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaa9f27410725ab8cc8854a2769c7a516b8">green</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63fac27875bf7bc9bb9fec8e7beb79a308a0">FT_COLOR_GREEN</link>,
84 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaad487dd0b55dfcacdd920ccbdaeafa351">yellow</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63fae1942de73f0c49658b208f9c42a136a8">FT_COLOR_YELLOW</link>,
85 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaa48d6215903dff56238e52e8891380c8f">blue</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63fa646c06e02caa66410e13dc212242ef16">FT_COLOR_BLUE</link>,
86 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaa4c2a4a7078da0ac6733464eacfd00f86">magenta</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63fa0f97227c2b13f6c2d88ca06761563a68">FT_COLOR_MAGENTA</link>,
87 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaa6411532ba4971f378391776a9db629d3">cyan</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63fa2e3e4b314fc75407fa5b38cee9fd5a5c">FT_COLOR_CYAN</link>,
88 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaa770e427f6a16eb64e2ece9585ba9d193">light_gray</link>&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63fa10c39c7d62795e90c3188f0b6a476f10">FT_COLOR_LIGHT_GRAY</link>,
89 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaa49dba686026a18435dd23b5e83eb5cfd">dark_gray</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63fa4f7814c857a35ace99e77c721bdea819">FT_COLOR_DARK_GRAY</link>,
90 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaa9fec81ba3d6228b82a5bb8fe57c3da22">light_red</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63faee5e46a4b6fbeb64b6eddca826bdc7ae">FT_COLOR_LIGHT_RED</link>,
91 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaac10bddadd1786a8a12f96ae7db5bafb8">light_green</link>&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63fa37dd75f161f83ea176f74a70a19e763f">FT_COLOR_LIGHT_GREEN</link>,
92 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaa743b7827c281254e45c305696344535b">light_yellow</link>&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63fa84816257c9a5f38a20d0e2ea848a5489">FT_COLOR_LIGHT_YELLOW</link>,
93 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaa61a2783898a9df78bb27edc33f768e6e">light_blue</link>&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63facebf9e4fe6e259bc0892bd1183c73800">FT_COLOR_LIGHT_BLUE</link>,
94 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaaa8cf5b4ddb5e196f692ec56c939b4ea7">light_magenta</link>&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63fac181922016e12de1a32116b2f1eb5a1f">FT_COLOR_LIGHT_MAGENTA</link>,
95 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaa4eece7cf37c9db41ed9e016e471fcf2f">light_cyan</link>&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63fa3b5bdee67bbfca060a31ae3d700cb5c4">FT_COLOR_LIGHT_CYAN</link>,
96 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbbaa49c0d1fd8de9f2b60fad8f940d3b0d45">light_whyte</link>&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1a8a64c62f618f7c34310da2e2ef31f63faebf36fa4c0f9ae7e8aaa651988686e42">FT_COLOR_LIGHT_WHYTE</link>
97 };
98 
102 <emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacefort_1aca558b21bbb52c9c28de9811bec32061">text_style</link>&#32;{
103 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1aca558b21bbb52c9c28de9811bec32061aebb7f4a926eea585ded212ce82818e54">default_style</link>&#32;=&#32;<link linkend="_fort_8h_1abc496f06f2a4c7fb58b1730ce813be0bad81d0dad8f26df01c149638ccbb6b3e2">FT_TSTYLE_DEFAULT</link>,
104 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1aca558b21bbb52c9c28de9811bec32061a69dcab4a73aeec2113f69b61e6263da8">bold</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1abc496f06f2a4c7fb58b1730ce813be0ba04256f30849c7cd2b4822e5030fa07fb">FT_TSTYLE_BOLD</link>,
105 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1aca558b21bbb52c9c28de9811bec32061a563728df0fdd90631ac1e51258e2857d">dim</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1abc496f06f2a4c7fb58b1730ce813be0baf9c6c97ae4ea6c404ae2e57b8dfab101">FT_TSTYLE_DIM</link>,
106 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1aca558b21bbb52c9c28de9811bec32061a030c5b6d1e5715105943ac111d9671bf">italic</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1abc496f06f2a4c7fb58b1730ce813be0ba29c6547c7ae5a297a4547de1b15a3133">FT_TSTYLE_ITALIC</link>,
107 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1aca558b21bbb52c9c28de9811bec32061a53d8b12f5a04c848b57a2d303a1ded53">underlined</link>&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1abc496f06f2a4c7fb58b1730ce813be0ba41f3dc969345e99fda4ef48130184745">FT_TSTYLE_UNDERLINED</link>,
108 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1aca558b21bbb52c9c28de9811bec32061a40652ee9ae143f1c1c830f01a5449ecb">blink</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1abc496f06f2a4c7fb58b1730ce813be0ba36c9e2fd7b64982a8f7229fe965440d4">FT_TSTYLE_BLINK</link>,
109 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1aca558b21bbb52c9c28de9811bec32061a184401f335d6b8661e04dfea47b9dcd5">inverted</link>&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1abc496f06f2a4c7fb58b1730ce813be0ba3a4c44c718da5e229c01ab7d6eb05366">FT_TSTYLE_INVERTED</link>,
110 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1aca558b21bbb52c9c28de9811bec32061a662f707d5491e9bce8238a6c0be92190">hidden</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<link linkend="_fort_8h_1abc496f06f2a4c7fb58b1730ce813be0ba016fa7d5df89fd09ba7ed6daa7021b16">FT_TSTYLE_HIDDEN</link>
111 };
112 
113 
114 <emphasis role="keyword">enum&#32;class</emphasis>&#32;<link linkend="_namespacefort_1aa331578461d0ee79e683d9e209cfc25b">table_type</link>&#32;{
115 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1aa331578461d0ee79e683d9e209cfc25baa956161a69928cd130a889b88082fb6e">character</link>,
116 <emphasis role="preprocessor">#ifdef&#32;FT_HAVE_UTF8</emphasis>
117 &#32;&#32;&#32;&#32;<link linkend="_namespacefort_1aa331578461d0ee79e683d9e209cfc25ba30df7f629fcf6b940bcaef5faf2490bb">utf8</link>
118 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;FT_HAVE_UTF8&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
119 };
120 
127 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfort_1_1table__manipulator">table_manipulator</link>
128 {
129 <emphasis role="keyword">public</emphasis>:
130 &#32;&#32;&#32;&#32;<emphasis role="keyword">explicit</emphasis>&#32;<link linkend="_classfort_1_1table__manipulator_1a06197323995874e96ee1a160b1bb0766">table_manipulator</link>(<emphasis role="keywordtype">int</emphasis>&#32;i)
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;value(i)
132 &#32;&#32;&#32;&#32;{
133 &#32;&#32;&#32;&#32;}
134 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;table_type&#32;TT&gt;
135 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classfort_1_1table">table</link>;
136 <emphasis role="keyword">private</emphasis>:
137 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;value;
138 };
139 
143 <emphasis role="keyword">const</emphasis>&#32;<link linkend="_classfort_1_1table__manipulator">table_manipulator</link>&#32;<link linkend="_namespacefort_1a6b60404c249df2f612d990c603d49517">header</link>(0);
144 
148 <emphasis role="keyword">const</emphasis>&#32;<link linkend="_classfort_1_1table__manipulator">table_manipulator</link>&#32;<link linkend="_namespacefort_1aee4e27c8d266e9b1be499e052fbc6c53">endr</link>(1);
149 
153 <emphasis role="keyword">const</emphasis>&#32;<link linkend="_classfort_1_1table__manipulator">table_manipulator</link>&#32;<link linkend="_namespacefort_1af61eccb3d2f66403d238b94e59dd7e4a">separator</link>(2);
154 
155 <emphasis role="comment">//&#32;Utility&#32;functions&#32;for&#32;internal&#32;library&#32;usage.</emphasis>
156 <emphasis role="keyword">namespace&#32;</emphasis>detail
157 {
158 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
159 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespacefort_1_1detail_1a8f7ed1ee7dc3bc57992582aeb4a97d32">is_stream_manipulator_impl</link>()&#32;noexcept
160 {
161 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;Tdec&#32;=&#32;<emphasis role="keyword">typename</emphasis>&#32;std::decay&lt;T&gt;::type;
162 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Manipulators&#32;for&#32;integral&#32;types</emphasis>
163 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::is_same&lt;Tdec,&#32;<emphasis role="keyword">typename</emphasis>&#32;std::decay&lt;<emphasis role="keyword">decltype</emphasis>(std::dec)&gt;::type&gt;::value
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;std::is_same&lt;Tdec,&#32;<emphasis role="keyword">typename</emphasis>&#32;std::decay&lt;<emphasis role="keyword">decltype</emphasis>(std::hex)&gt;::type&gt;::value
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;std::is_same&lt;Tdec,&#32;<emphasis role="keyword">typename</emphasis>&#32;std::decay&lt;<emphasis role="keyword">decltype</emphasis>(std::oct)&gt;::type&gt;::value
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Floating-point&#32;manipulators</emphasis>
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;std::is_same&lt;Tdec,&#32;<emphasis role="keyword">typename</emphasis>&#32;std::decay&lt;<emphasis role="keyword">decltype</emphasis>(std::fixed)&gt;::type&gt;::value
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;std::is_same&lt;Tdec,&#32;<emphasis role="keyword">typename</emphasis>&#32;std::decay&lt;<emphasis role="keyword">decltype</emphasis>(std::scientific)&gt;::type&gt;::value
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Misc</emphasis>
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;std::is_same&lt;Tdec,&#32;<emphasis role="keyword">typename</emphasis>&#32;std::decay&lt;<emphasis role="keyword">decltype</emphasis>(std::setbase(0))&gt;::type&gt;::value
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;std::is_same&lt;Tdec,&#32;<emphasis role="keyword">typename</emphasis>&#32;std::decay&lt;<emphasis role="keyword">decltype</emphasis>(std::setfill(<emphasis role="charliteral">&apos;\0&apos;</emphasis>))&gt;::type&gt;::value
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;std::is_same&lt;Tdec,&#32;<emphasis role="keyword">typename</emphasis>&#32;std::decay&lt;<emphasis role="keyword">decltype</emphasis>(std::setprecision(0))&gt;::type&gt;::value
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;std::is_same&lt;Tdec,&#32;<emphasis role="keyword">typename</emphasis>&#32;std::decay&lt;<emphasis role="keyword">decltype</emphasis>(std::setw(0))&gt;::type&gt;::value;
174 }
175 }
176 
182 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
183 <emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespacefort_1a27a2b1ed051093b5132048bcb9454465">is_stream_manipulator</link>()&#32;noexcept
184 {
185 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;detail::is_stream_manipulator_impl&lt;T&gt;();
186 }
187 
194 <emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;table&gt;
195 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfort_1_1property__owner">property_owner</link>
196 {
197 <emphasis role="keyword">public</emphasis>:
198 
199 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1property__owner_1ac8b428ead2bd53ad38ca035eaec93d21">property_owner</link>(std::size_t&#32;row_idx,&#32;std::size_t&#32;coll_idx,&#32;<link linkend="_classfort_1_1table">table</link>&#32;*tbl,&#32;<emphasis role="keywordtype">bool</emphasis>&#32;def&#32;=&#32;<emphasis role="keyword">false</emphasis>)
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classfort_1_1property__owner_1a1a008cd03d21db838be6b1718d462f71">ps_row_idx_</link>(row_idx),&#32;<link linkend="_classfort_1_1property__owner_1ab3d52a7587080b99afecd6d362ecbdc9">ps_coll_idx_</link>(coll_idx),
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1property__owner_1a8b0bba2c8cf48c8b727d4c849f90be2b">ps_table_</link>(tbl),&#32;<link linkend="_classfort_1_1property__owner_1ac9a6f69065cc50d9fb1f31160e9ba31b">set_default_properties_</link>(def)&#32;{}
202 
212 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a271ffa111ba27a68715044826298b42b">set_cell_min_width</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;value)
213 &#32;&#32;&#32;&#32;{
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1aaa59596ed65b02b3c698e9aaf8d16bbd">FT_CPROP_MIN_WIDTH</link>,&#32;value);
215 &#32;&#32;&#32;&#32;}
216 
226 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1aa0c34eb1dde00dc3b172ede4699e0cdc">set_cell_text_align</link>(<link linkend="_namespacefort_1a895f73752fc847c22853fd363a575b04">fort::text_align</link>&#32;value)
227 &#32;&#32;&#32;&#32;{
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1ae5586130d3dd258d477e370923d0889e">FT_CPROP_TEXT_ALIGN</link>,&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(value));
229 &#32;&#32;&#32;&#32;}
230 
240 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a1b6a5415016a2a93c25795ed2b99ec44">set_cell_top_padding</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;value)
241 &#32;&#32;&#32;&#32;{
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1a2a5fd97edb51283e0baddcf896555e9d">FT_CPROP_TOP_PADDING</link>,&#32;value);
243 &#32;&#32;&#32;&#32;}
244 
254 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1aab88ac28d70ea5d630aa55d7c97defd5">set_cell_bottom_padding</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;value)
255 &#32;&#32;&#32;&#32;{
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1a47c8f3a9d83e32ac8f3ab5997dc5b542">FT_CPROP_BOTTOM_PADDING</link>,&#32;value);
257 &#32;&#32;&#32;&#32;}
258 
268 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a8ae9305903c8467e8c43065bd6ebbde4">set_cell_left_padding</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;value)
269 &#32;&#32;&#32;&#32;{
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1a536d5cbb92b59dbc2e28891fa5bcd114">FT_CPROP_LEFT_PADDING</link>,&#32;value);
271 &#32;&#32;&#32;&#32;}
272 
282 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a4bb870a7101fad9df8e6d3b78afccd86">set_cell_right_padding</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;value)
283 &#32;&#32;&#32;&#32;{
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1a11cdcb1be7737d1f65f2b6bc4b8b7e86">FT_CPROP_RIGHT_PADDING</link>,&#32;value);
285 &#32;&#32;&#32;&#32;}
286 
296 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a7a36fdadc9095cb969488ca03e28de6d">set_cell_row_type</link>(<link linkend="_namespacefort_1a28370d69d653e7ae3cb80c61cf2469aa">fort::row_type</link>&#32;value)
297 &#32;&#32;&#32;&#32;{
298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1abd5e4b5a6cb494024967f9d22a50c708">FT_CPROP_ROW_TYPE</link>,&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(value));
299 &#32;&#32;&#32;&#32;}
300 
310 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab04fde5f089d89a16c10c4c6fe9ee41c">set_cell_empty_str_height</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;value)
311 &#32;&#32;&#32;&#32;{
312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1aadf8488e2ae0a4e7c2e4ecbc715d2b18">FT_CPROP_EMPTY_STR_HEIGHT</link>,&#32;value);
313 &#32;&#32;&#32;&#32;}
314 
324 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a84c20f3c799287d706c9d8e052fff6ec">set_cell_content_fg_color</link>(<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbba">fort::color</link>&#32;value)
325 &#32;&#32;&#32;&#32;{
326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1ad078aa3c64959b51e29ddbc52dc42edc">FT_CPROP_CONT_FG_COLOR</link>,&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(value));
327 &#32;&#32;&#32;&#32;}
328 
338 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a8780bb5cf0e2918e3d6db3439414f0b6">set_cell_bg_color</link>(<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbba">fort::color</link>&#32;value)
339 &#32;&#32;&#32;&#32;{
340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1a8eec90e0b1b004749b85052422c48671">FT_CPROP_CELL_BG_COLOR</link>,&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(value));
341 &#32;&#32;&#32;&#32;}
342 
352 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a5d83c216797e222d79e47c500bc98571">set_cell_content_bg_color</link>(<link linkend="_namespacefort_1a3cac6d8954776afa43e4d389ff70fbba">fort::color</link>&#32;value)
353 &#32;&#32;&#32;&#32;{
354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1a979f10a47f0977e563ebf79d2144a8b1">FT_CPROP_CONT_BG_COLOR</link>,&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(value));
355 &#32;&#32;&#32;&#32;}
356 
366 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ad762b2bec6d78559b1393e003054e894">set_cell_text_style</link>(<link linkend="_namespacefort_1aca558b21bbb52c9c28de9811bec32061">fort::text_style</link>&#32;value)
367 &#32;&#32;&#32;&#32;{
368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1a82551a6b4f9bdc48c57fec86faa05052">FT_CPROP_CELL_TEXT_STYLE</link>,&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(value));
369 &#32;&#32;&#32;&#32;}
370 
380 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1acec5096b143be35e12284601f27eceb9">set_cell_content_text_style</link>(<link linkend="_namespacefort_1aca558b21bbb52c9c28de9811bec32061">fort::text_style</link>&#32;value)
381 &#32;&#32;&#32;&#32;{
382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(<link linkend="_fort_8h_1aef6afa765c79403917d52a565db47b65">FT_CPROP_CONT_TEXT_STYLE</link>,&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(value));
383 &#32;&#32;&#32;&#32;}
384 
385 <emphasis role="keyword">protected</emphasis>:
386 &#32;&#32;&#32;&#32;std::size_t&#32;<link linkend="_classfort_1_1property__owner_1a1a008cd03d21db838be6b1718d462f71">ps_row_idx_</link>;
387 &#32;&#32;&#32;&#32;std::size_t&#32;<link linkend="_classfort_1_1property__owner_1ab3d52a7587080b99afecd6d362ecbdc9">ps_coll_idx_</link>;
388 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table">table</link>&#32;*<link linkend="_classfort_1_1property__owner_1a8b0bba2c8cf48c8b727d4c849f90be2b">ps_table_</link>;
389 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ac9a6f69065cc50d9fb1f31160e9ba31b">set_default_properties_</link>;
390 
391 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab922c31dddc0acd7940de715e83fc53c">set_property</link>(uint32_t&#32;property,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value)
392 &#32;&#32;&#32;&#32;{
393 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;status;
394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classfort_1_1property__owner_1ac9a6f69065cc50d9fb1f31160e9ba31b">set_default_properties_</link>)&#32;{
395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<link linkend="_fort_8c_1a894497fac87518023122266da59f8da1">ft_set_default_cell_prop</link>(property,&#32;value);
396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;status&#32;=&#32;<link linkend="_fort_8c_1a10dc95b3d810a0ab2bf6c90b7b8c66a4">ft_set_cell_prop</link>(<link linkend="_classfort_1_1property__owner_1a8b0bba2c8cf48c8b727d4c849f90be2b">ps_table_</link>-&gt;table_,&#32;<link linkend="_classfort_1_1property__owner_1a1a008cd03d21db838be6b1718d462f71">ps_row_idx_</link>,&#32;<link linkend="_classfort_1_1property__owner_1ab3d52a7587080b99afecd6d362ecbdc9">ps_coll_idx_</link>,&#32;property,&#32;value);
398 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(status);
400 &#32;&#32;&#32;&#32;}
401 };
402 
403 
411 <emphasis role="keyword">template</emphasis>&#32;&lt;table_type&#32;TT&#32;=&#32;table_type::<emphasis role="keywordtype">char</emphasis>acter&gt;
412 <emphasis role="keyword">class&#32;</emphasis><link linkend="_classfort_1_1table">table</link>:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classfort_1_1property__owner">property_owner</link>&lt;table&lt;TT&gt;&gt;
413 {
417 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1table">table_t</link>&#32;=&#32;<link linkend="_classfort_1_1table">table&lt;TT&gt;</link>;
418 &#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>&#32;=&#32;<link linkend="_classfort_1_1property__owner">property_owner&lt;table_t&gt;</link>;
419 
420 <emphasis role="keyword">public</emphasis>:
421 
425 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1af2a0e281e31bcbb3dfd0a14fd73a8fe6">table</link>()
426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>(<link linkend="_fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d">FT_ANY_ROW</link>,&#32;<link linkend="_fort_8h_1ad5b6b32262309f37874d11369f47c7a5">FT_ANY_COLUMN</link>,&#32;this),
427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;table_(<link linkend="_fort_8c_1a39066bbe359e408ad6d1bb360aa0cf55">ft_create_table</link>())
428 &#32;&#32;&#32;&#32;{
429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(table_&#32;==&#32;NULL)
430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::bad_alloc();
431 &#32;&#32;&#32;&#32;}
432 
436 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1a0f60e38ac553c852d8e20583a3e6e866">~table</link>()
437 &#32;&#32;&#32;&#32;{
438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1ad8cb9ed46da7455f8b6baed42a4a1d31">ft_destroy_table</link>(table_);
439 &#32;&#32;&#32;&#32;}
440 
444 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1a5c8713c19b01542bcdce75835d714b3f">table</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classfort_1_1table">table</link>&#32;&amp;tbl)
445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>(<link linkend="_fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d">FT_ANY_ROW</link>,&#32;<link linkend="_fort_8h_1ad5b6b32262309f37874d11369f47c7a5">FT_ANY_COLUMN</link>,&#32;this),&#32;table_(NULL)
446 &#32;&#32;&#32;&#32;{
447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tbl.table_)&#32;{
448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structft__table">ft_table_t</link>&#32;*table_copy&#32;=&#32;<link linkend="_fort_8c_1a3dc4461b763ca66b2e2699a61ee99df8">ft_copy_table</link>(tbl.table_);
449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(table_copy&#32;==&#32;NULL)
450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<emphasis role="stringliteral">&quot;Error&#32;during&#32;table&#32;copy&quot;</emphasis>);
451 
452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream_.str(std::string());
453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tbl.stream_.tellp()&#32;&gt;=&#32;0)&#32;{
454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream_&#32;&lt;&lt;&#32;tbl.stream_.str();
455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;table_&#32;=&#32;table_copy;
457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
458 &#32;&#32;&#32;&#32;}
459 
463 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1aefbb2a5c2057b5139791962e242f1566">table</link>(<link linkend="_classfort_1_1table">table</link>&#32;&amp;&amp;tbl)
464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>(<link linkend="_fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d">FT_ANY_ROW</link>,&#32;<link linkend="_fort_8h_1ad5b6b32262309f37874d11369f47c7a5">FT_ANY_COLUMN</link>,&#32;this),&#32;table_(tbl.table_)
465 &#32;&#32;&#32;&#32;{
466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tbl.stream_.tellp()&#32;&gt;=&#32;0)&#32;{
467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream_&#32;&lt;&lt;&#32;tbl.stream_.str();
468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tbl.stream_.str(std::string());
469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tbl.table_&#32;=&#32;0;
471 &#32;&#32;&#32;&#32;}
472 
476 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table">table</link>&#32;&amp;<link linkend="_classfort_1_1table_1a639848e904ab94e5acbd0df49225ca41">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classfort_1_1table">table</link>&#32;&amp;tbl)
477 &#32;&#32;&#32;&#32;{
478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&amp;tbl&#32;==&#32;<emphasis role="keyword">this</emphasis>)
479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
480 
481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tbl.table_)&#32;{
482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structft__table">ft_table_t</link>&#32;*table_copy&#32;=&#32;<link linkend="_fort_8c_1a3dc4461b763ca66b2e2699a61ee99df8">ft_copy_table</link>(tbl.table_);
483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(table_copy&#32;==&#32;NULL)
484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<emphasis role="stringliteral">&quot;Error&#32;during&#32;table&#32;copy&quot;</emphasis>);
485 
486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream_.str(std::string());
487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tbl.stream_.tellp()&#32;&gt;=&#32;0)&#32;{
488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream_&#32;&lt;&lt;&#32;tbl.stream_.str();
489 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1ad8cb9ed46da7455f8b6baed42a4a1d31">ft_destroy_table</link>(table_);
491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;table_&#32;=&#32;table_copy;
492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
494 &#32;&#32;&#32;&#32;}
495 
499 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table">table</link>&#32;&amp;<link linkend="_classfort_1_1table_1a8ff094374f3f443a0306d09b50897e38">operator=</link>(<link linkend="_classfort_1_1table">table</link>&#32;&amp;&amp;tbl)
500 &#32;&#32;&#32;&#32;{
501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&amp;tbl&#32;==&#32;<emphasis role="keyword">this</emphasis>)
502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
503 
504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tbl.table_)&#32;{
505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream_.str(std::string());
506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(tbl.stream_.tellp()&#32;&gt;=&#32;0)&#32;{
507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream_&#32;&lt;&lt;&#32;tbl.stream_.str();
508 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tbl.stream_.str(std::string());
509 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1ad8cb9ed46da7455f8b6baed42a4a1d31">ft_destroy_table</link>(table_);
511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;table_&#32;=&#32;tbl.table_;
512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tbl.table_&#32;=&#32;NULL;
513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
515 &#32;&#32;&#32;&#32;}
516 
524 &#32;&#32;&#32;&#32;std::string&#32;<link linkend="_classfort_1_1table_1a069a11134b61aebd9f798b445c281696">to_string</link>()<emphasis role="keyword">&#32;const</emphasis>
525 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str&#32;=&#32;<link linkend="_classfort_1_1table_1a7b194a2c7a08929cc802a723245a3239">c_str</link>();
527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(str&#32;==&#32;NULL)
528 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<emphasis role="stringliteral">&quot;Error&#32;during&#32;table&#32;to&#32;string&#32;conversion&quot;</emphasis>);
529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;str;
530 &#32;&#32;&#32;&#32;}
531 
547 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_classfort_1_1table_1a7b194a2c7a08929cc802a723245a3239">c_str</link>()<emphasis role="keyword">&#32;const</emphasis>
548 <emphasis role="keyword">&#32;&#32;&#32;&#32;</emphasis>{
549 <emphasis role="preprocessor">#ifdef&#32;FT_HAVE_UTF8</emphasis>
550 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(TT&#32;==&#32;<link linkend="_namespacefort_1aa331578461d0ee79e683d9e209cfc25baa956161a69928cd130a889b88082fb6e">table_type::character</link>)
551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;<link linkend="_fort_8c_1aa80a0ba53be3e32a69b9b98478821354">ft_to_string</link>(table_)
552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)<link linkend="_fort_8c_1add704765805a634b690a7697857171cc">ft_to_u8string</link>(table_);
553 <emphasis role="preprocessor">#else</emphasis>
554 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8c_1aa80a0ba53be3e32a69b9b98478821354">ft_to_string</link>(table_);
555 <emphasis role="preprocessor">#endif</emphasis>
556 &#32;&#32;&#32;&#32;}
557 
569 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T&gt;
570 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table">table</link>&#32;&amp;<link linkend="_classfort_1_1table_1a5fa1b2a0af4dd1e7a7d04070dcbb89c1">operator&lt;&lt;</link>(<emphasis role="keyword">const</emphasis>&#32;T&#32;&amp;arg)
571 &#32;&#32;&#32;&#32;{
572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;is_manip&#32;=&#32;fort::is_stream_manipulator&lt;typename&#32;std::decay&lt;T&gt;::type&gt;();
573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream_&#32;&lt;&lt;&#32;arg;
574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(stream_.tellp()&#32;&gt;=&#32;0&#32;&amp;&amp;&#32;!is_manip)&#32;{
575 <emphasis role="preprocessor">#ifdef&#32;FT_HAVE_UTF8</emphasis>
576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(TT&#32;==&#32;<link linkend="_namespacefort_1aa331578461d0ee79e683d9e209cfc25baa956161a69928cd130a889b88082fb6e">table_type::character</link>)&#32;{
577 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1a69052e887e05d6dc3a0891550127619b">ft_nwrite</link>(table_,&#32;1,&#32;stream_.str().c_str());
578 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
579 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1a61aec826074239282309ce1369563f64">ft_u8nwrite</link>(table_,&#32;1,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*)stream_.str().c_str());
580 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
581 <emphasis role="preprocessor">#else</emphasis>
582 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1a69052e887e05d6dc3a0891550127619b">ft_nwrite</link>(table_,&#32;1,&#32;stream_.str().c_str());
583 <emphasis role="preprocessor">#endif</emphasis>
584 
585 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;stream_.str(std::string());
586 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
587 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
588 &#32;&#32;&#32;&#32;}
589 
590 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table">table</link>&#32;&amp;<link linkend="_classfort_1_1table_1aec7b4ad1ececf231a59d8c866a1c4976">operator&lt;&lt;</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classfort_1_1table__manipulator">table_manipulator</link>&#32;&amp;arg)
591 &#32;&#32;&#32;&#32;{
592 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg.value&#32;==&#32;<link linkend="_namespacefort_1a6b60404c249df2f612d990c603d49517">header</link>.value)
593 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1a10dc95b3d810a0ab2bf6c90b7b8c66a4">ft_set_cell_prop</link>(table_,&#32;<link linkend="_fort_8h_1a7b2a188460e60fa72f0182fc3d03c5e6">FT_CUR_ROW</link>,&#32;<link linkend="_fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d">FT_ANY_ROW</link>,&#32;<link linkend="_fort_8h_1abd5e4b5a6cb494024967f9d22a50c708">FT_CPROP_ROW_TYPE</link>,&#32;<link linkend="_fort_8h_1a06d9536a2e476d68f5055820535d3b34a2a0a31078eac88202029c3e9bdaa614a">FT_ROW_HEADER</link>);
594 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg.value&#32;==&#32;<link linkend="_namespacefort_1aee4e27c8d266e9b1be499e052fbc6c53">endr</link>.value)
595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1a35af71857b08488797170d7b2a15054a">ft_ln</link>(table_);
596 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(arg.value&#32;==&#32;<link linkend="_namespacefort_1af61eccb3d2f66403d238b94e59dd7e4a">separator</link>.value)
597 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1a22fc0b6196d1a9a398785e23673eeeb0">ft_add_separator</link>(table_);
598 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
599 &#32;&#32;&#32;&#32;}
600 
612 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str)
613 &#32;&#32;&#32;&#32;{
614 <emphasis role="preprocessor">#ifdef&#32;FT_HAVE_UTF8</emphasis>
615 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(TT&#32;==&#32;<link linkend="_namespacefort_1aa331578461d0ee79e683d9e209cfc25baa956161a69928cd130a889b88082fb6e">table_type::character</link>)&#32;{
616 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8h_1aeb1059360e481caef1d2dcced5d5b646">ft_write</link>(table_,&#32;str));
617 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
618 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8h_1a890cf057608c39d3bba387388ed07040">ft_u8write</link>(table_,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">void</emphasis>&#32;*)str));
619 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
620 <emphasis role="preprocessor">#else</emphasis>
621 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8h_1aeb1059360e481caef1d2dcced5d5b646">ft_write</link>(table_,&#32;str));
622 <emphasis role="preprocessor">#endif</emphasis>
623 &#32;&#32;&#32;&#32;}
624 
637 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a23ac58f177ed0717e77d96ca5acec52f">write_ln</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str)
638 &#32;&#32;&#32;&#32;{
639 <emphasis role="preprocessor">#ifdef&#32;FT_HAVE_UTF8</emphasis>
640 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(TT&#32;==&#32;<link linkend="_namespacefort_1aa331578461d0ee79e683d9e209cfc25baa956161a69928cd130a889b88082fb6e">table_type::character</link>)&#32;{
641 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8h_1a4ebdb2eea82c8b8c3b80f0c7b7bf1536">ft_write_ln</link>(table_,&#32;str));
642 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
643 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8h_1af5c83d4e33e0a8804d59310cafd97350">ft_u8write_ln</link>(table_,&#32;str));
644 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
645 <emphasis role="preprocessor">#else</emphasis>
646 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8h_1a4ebdb2eea82c8b8c3b80f0c7b7bf1536">ft_write_ln</link>(table_,&#32;str));
647 <emphasis role="preprocessor">#endif</emphasis>
648 &#32;&#32;&#32;&#32;}
649 
661 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1aa5bef06063a598ac7985bd7df715803c">write</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;str)
662 &#32;&#32;&#32;&#32;{
663 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(str.c_str());
664 &#32;&#32;&#32;&#32;}
665 
678 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a921c35a1c1aa723c1a96500bdbf04d62">write_ln</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;str)
679 &#32;&#32;&#32;&#32;{
680 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1a23ac58f177ed0717e77d96ca5acec52f">write_ln</link>(str.c_str());
681 &#32;&#32;&#32;&#32;}
682 
683 <emphasis role="preprocessor">#ifdef&#32;__cpp_variadic_templates</emphasis>
698 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;<emphasis role="keyword">typename</emphasis>&#32;...Ts&gt;
699 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(<emphasis role="keyword">const</emphasis>&#32;T&#32;&amp;str,&#32;<emphasis role="keyword">const</emphasis>&#32;Ts&#32;&amp;...strings)
700 &#32;&#32;&#32;&#32;{
701 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(str)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(strings...);
702 &#32;&#32;&#32;&#32;}
703 
719 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T,&#32;<emphasis role="keyword">typename</emphasis>&#32;...Ts&gt;
720 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a23ac58f177ed0717e77d96ca5acec52f">write_ln</link>(<emphasis role="keyword">const</emphasis>&#32;T&#32;&amp;str,&#32;<emphasis role="keyword">const</emphasis>&#32;Ts&#32;&amp;...strings)
721 &#32;&#32;&#32;&#32;{
722 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(str)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1a23ac58f177ed0717e77d96ca5acec52f">write_ln</link>(strings...);
723 &#32;&#32;&#32;&#32;}
724 <emphasis role="preprocessor">#else&#32;</emphasis><emphasis role="comment">/*&#32;__cpp_variadic_templates&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
725 
726 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1&gt;
727 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1ad2dc2246f44855fd778646a405ff8a69">write</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1)
728 &#32;&#32;&#32;&#32;{
729 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_1);
730 &#32;&#32;&#32;&#32;}
731 
732 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_2&gt;
733 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a7067e94257b88a30cf54bf1c14034b2c">write</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1,&#32;<emphasis role="keyword">const</emphasis>&#32;T_2&#32;&amp;arg_2)
734 &#32;&#32;&#32;&#32;{
735 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_1,&#32;arg_2);
736 &#32;&#32;&#32;&#32;}
737 
738 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_2,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_3&gt;
739 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a5818f33a183db28a45eade06fbec2ee3">write</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1,&#32;<emphasis role="keyword">const</emphasis>&#32;T_2&#32;&amp;arg_2,&#32;<emphasis role="keyword">const</emphasis>&#32;T_3&#32;&amp;arg_3)
740 &#32;&#32;&#32;&#32;{
741 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_1,&#32;arg_2,&#32;arg_3);
742 &#32;&#32;&#32;&#32;}
743 
744 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_2,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_3,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_4&gt;
745 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a7b2d27ceca94b7b7204ea0559098be5f">write</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1,&#32;<emphasis role="keyword">const</emphasis>&#32;T_2&#32;&amp;arg_2,&#32;<emphasis role="keyword">const</emphasis>&#32;T_3&#32;&amp;arg_3,&#32;<emphasis role="keyword">const</emphasis>&#32;T_4&#32;&amp;arg_4)
746 &#32;&#32;&#32;&#32;{
747 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_1,&#32;arg_2,&#32;arg_3,&#32;arg_4);
748 &#32;&#32;&#32;&#32;}
749 
750 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_2,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_3,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_4,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_5&gt;
751 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1ae5072030609664813fc07080405dcb91">write</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1,&#32;<emphasis role="keyword">const</emphasis>&#32;T_2&#32;&amp;arg_2,&#32;<emphasis role="keyword">const</emphasis>&#32;T_3&#32;&amp;arg_3,&#32;<emphasis role="keyword">const</emphasis>&#32;T_4&#32;&amp;arg_4,&#32;<emphasis role="keyword">const</emphasis>&#32;T_5&#32;&amp;arg_5)
752 &#32;&#32;&#32;&#32;{
753 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_1,&#32;arg_2,&#32;arg_3,&#32;arg_4,&#32;arg_5);
754 &#32;&#32;&#32;&#32;}
755 
756 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_2,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_3,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_4,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_5,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_6&gt;
757 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a85e2de34b45c30ca49148ca0e07aefee">write</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1,&#32;<emphasis role="keyword">const</emphasis>&#32;T_2&#32;&amp;arg_2,&#32;<emphasis role="keyword">const</emphasis>&#32;T_3&#32;&amp;arg_3,&#32;<emphasis role="keyword">const</emphasis>&#32;T_4&#32;&amp;arg_4,&#32;<emphasis role="keyword">const</emphasis>&#32;T_5&#32;&amp;arg_5,&#32;<emphasis role="keyword">const</emphasis>&#32;T_6&#32;&amp;arg_6)
758 &#32;&#32;&#32;&#32;{
759 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_1,&#32;arg_2,&#32;arg_3,&#32;arg_4,&#32;arg_5,&#32;arg_6);
760 &#32;&#32;&#32;&#32;}
761 
762 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_2,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_3,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_4,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_5,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_6,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_7&gt;
763 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1ad0feccbba8738c5e9a87f643d3cf8d7b">write</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1,&#32;<emphasis role="keyword">const</emphasis>&#32;T_2&#32;&amp;arg_2,&#32;<emphasis role="keyword">const</emphasis>&#32;T_3&#32;&amp;arg_3,&#32;<emphasis role="keyword">const</emphasis>&#32;T_4&#32;&amp;arg_4,&#32;<emphasis role="keyword">const</emphasis>&#32;T_5&#32;&amp;arg_5,&#32;<emphasis role="keyword">const</emphasis>&#32;T_6&#32;&amp;arg_6,&#32;<emphasis role="keyword">const</emphasis>&#32;T_7&#32;&amp;arg_7)
764 &#32;&#32;&#32;&#32;{
765 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_1,&#32;arg_2,&#32;arg_3,&#32;arg_4,&#32;arg_5,&#32;arg_6,&#32;arg_7);
766 &#32;&#32;&#32;&#32;}
767 
768 
769 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1&gt;
770 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a63f18bf8abf9cfdacd4953e2146a5fd2">write_ln</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1)
771 &#32;&#32;&#32;&#32;{
772 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1a23ac58f177ed0717e77d96ca5acec52f">write_ln</link>(arg_1);
773 &#32;&#32;&#32;&#32;}
774 
775 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_2&gt;
776 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a38002cf12f835e893edf3262bf00f322">write_ln</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1,&#32;<emphasis role="keyword">const</emphasis>&#32;T_2&#32;&amp;arg_2)
777 &#32;&#32;&#32;&#32;{
778 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1a23ac58f177ed0717e77d96ca5acec52f">write_ln</link>(arg_1,&#32;arg_2);
779 &#32;&#32;&#32;&#32;}
780 
781 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_2,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_3&gt;
782 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a81e4d98a2f2151b0bcd0e7fe0f6aea34">write_ln</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1,&#32;<emphasis role="keyword">const</emphasis>&#32;T_2&#32;&amp;arg_2,&#32;<emphasis role="keyword">const</emphasis>&#32;T_3&#32;&amp;arg_3)
783 &#32;&#32;&#32;&#32;{
784 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1a23ac58f177ed0717e77d96ca5acec52f">write_ln</link>(arg_1,&#32;arg_2,&#32;arg_3);
785 &#32;&#32;&#32;&#32;}
786 
787 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_2,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_3,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_4&gt;
788 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a63ff04dc77d667a51ab64efbf040df9b">write_ln</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1,&#32;<emphasis role="keyword">const</emphasis>&#32;T_2&#32;&amp;arg_2,&#32;<emphasis role="keyword">const</emphasis>&#32;T_3&#32;&amp;arg_3,&#32;<emphasis role="keyword">const</emphasis>&#32;T_4&#32;&amp;arg_4)
789 &#32;&#32;&#32;&#32;{
790 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1a23ac58f177ed0717e77d96ca5acec52f">write_ln</link>(arg_1,&#32;arg_2,&#32;arg_3,&#32;arg_4);
791 &#32;&#32;&#32;&#32;}
792 
793 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_2,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_3,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_4,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_5&gt;
794 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a19fdbc0703507c9f35826b2382852bcb">write_ln</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1,&#32;<emphasis role="keyword">const</emphasis>&#32;T_2&#32;&amp;arg_2,&#32;<emphasis role="keyword">const</emphasis>&#32;T_3&#32;&amp;arg_3,&#32;<emphasis role="keyword">const</emphasis>&#32;T_4&#32;&amp;arg_4,&#32;<emphasis role="keyword">const</emphasis>&#32;T_5&#32;&amp;arg_5)
795 &#32;&#32;&#32;&#32;{
796 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1a23ac58f177ed0717e77d96ca5acec52f">write_ln</link>(arg_1,&#32;arg_2,&#32;arg_3,&#32;arg_4,&#32;arg_5);
797 &#32;&#32;&#32;&#32;}
798 
799 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_2,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_3,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_4,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_5,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_6&gt;
800 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a4b7be9381f7e1034847d9a485fa36f51">write_ln</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1,&#32;<emphasis role="keyword">const</emphasis>&#32;T_2&#32;&amp;arg_2,&#32;<emphasis role="keyword">const</emphasis>&#32;T_3&#32;&amp;arg_3,&#32;<emphasis role="keyword">const</emphasis>&#32;T_4&#32;&amp;arg_4,&#32;<emphasis role="keyword">const</emphasis>&#32;T_5&#32;&amp;arg_5,&#32;<emphasis role="keyword">const</emphasis>&#32;T_6&#32;&amp;arg_6)
801 &#32;&#32;&#32;&#32;{
802 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1a23ac58f177ed0717e77d96ca5acec52f">write_ln</link>(arg_1,&#32;arg_2,&#32;arg_3,&#32;arg_4,&#32;arg_5,&#32;arg_6);
803 &#32;&#32;&#32;&#32;}
804 
805 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;T_0,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_1,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_2,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_3,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_4,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_5,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_6,&#32;<emphasis role="keyword">typename</emphasis>&#32;T_7&gt;
806 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1afbacbbc3bfd9883157c86e794c4f85af">write_ln</link>(<emphasis role="keyword">const</emphasis>&#32;T_0&#32;&amp;arg_0,&#32;<emphasis role="keyword">const</emphasis>&#32;T_1&#32;&amp;arg_1,&#32;<emphasis role="keyword">const</emphasis>&#32;T_2&#32;&amp;arg_2,&#32;<emphasis role="keyword">const</emphasis>&#32;T_3&#32;&amp;arg_3,&#32;<emphasis role="keyword">const</emphasis>&#32;T_4&#32;&amp;arg_4,&#32;<emphasis role="keyword">const</emphasis>&#32;T_5&#32;&amp;arg_5,&#32;<emphasis role="keyword">const</emphasis>&#32;T_6&#32;&amp;arg_6,&#32;<emphasis role="keyword">const</emphasis>&#32;T_7&#32;&amp;arg_7)
807 &#32;&#32;&#32;&#32;{
808 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(arg_0)&#32;&amp;&amp;&#32;<link linkend="_classfort_1_1table_1a23ac58f177ed0717e77d96ca5acec52f">write_ln</link>(arg_1,&#32;arg_2,&#32;arg_3,&#32;arg_4,&#32;arg_5,&#32;arg_6,&#32;arg_7);
809 &#32;&#32;&#32;&#32;}
810 
811 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">/*&#32;__cpp_variadic_templates&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
812 
824 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;InputIt&gt;
825 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1ad26028ecd1d540008f248b782f35898b">range_write</link>(InputIt&#32;first,&#32;InputIt&#32;last)
826 &#32;&#32;&#32;&#32;{
827 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(first&#32;!=&#32;last)&#32;{
828 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<emphasis role="keyword">this</emphasis>&#32;&lt;&lt;&#32;*first;
829 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++first;
830 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
831 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
832 &#32;&#32;&#32;&#32;}
833 
846 &#32;&#32;&#32;&#32;<emphasis role="keyword">template</emphasis>&#32;&lt;<emphasis role="keyword">typename</emphasis>&#32;InputIt&gt;
847 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1ac798525be3e650e456343301010b0799">range_write_ln</link>(InputIt&#32;first,&#32;InputIt&#32;last)
848 &#32;&#32;&#32;&#32;{
849 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(first&#32;!=&#32;last)&#32;{
850 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<emphasis role="keyword">this</emphasis>&#32;&lt;&lt;&#32;*first;
851 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++first;
852 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
853 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1a35af71857b08488797170d7b2a15054a">ft_ln</link>(table_);
854 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">true</emphasis>;
855 &#32;&#32;&#32;&#32;}
856 
866 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a040c119d6b7965602cdec6bf06e9d197">set_border_style</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_structft__border__style">ft_border_style</link>&#32;*style)
867 &#32;&#32;&#32;&#32;{
868 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8c_1aaa966b7da0ee2e2d2a93dc6a5e1ef81b">ft_set_border_style</link>(table_,&#32;style));
869 &#32;&#32;&#32;&#32;}
870 
881 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classfort_1_1table_1afe4030b7e70ea73ca60d1ed6626b80ec">set_cur_cell</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;row_i,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;col_i)
882 &#32;&#32;&#32;&#32;{
883 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1a6dffc742cbce46e492cd3298de467b16">ft_set_cur_cell</link>(table_,&#32;row_i,&#32;col_i);
884 &#32;&#32;&#32;&#32;}
885 
886 
896 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a571357e6d86c3021a04f071aaab13e9a">set_left_margin</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;value)
897 &#32;&#32;&#32;&#32;{
898 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8c_1ac7ff4899d39f21d4cf8948c73bbb1595">ft_set_tbl_prop</link>(table_,&#32;<link linkend="_fort_8h_1a6556cdb107bc9e5ef97c0e80c8c4492d">FT_TPROP_LEFT_MARGIN</link>,&#32;value));
899 &#32;&#32;&#32;&#32;}
900 
910 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1aa5eaa7e5cc6178cd33fbd71b886def6f">set_top_margin</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;value)
911 &#32;&#32;&#32;&#32;{
912 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8c_1ac7ff4899d39f21d4cf8948c73bbb1595">ft_set_tbl_prop</link>(table_,&#32;<link linkend="_fort_8h_1a72f9e4b2eb759e81b4bd15798b4af42a">FT_TPROP_TOP_MARGIN</link>,&#32;value));
913 &#32;&#32;&#32;&#32;}
914 
924 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1ae6ed7466401235113daa84079c7d9040">set_right_margin</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;value)
925 &#32;&#32;&#32;&#32;{
926 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8c_1ac7ff4899d39f21d4cf8948c73bbb1595">ft_set_tbl_prop</link>(table_,&#32;<link linkend="_fort_8h_1a19471b7f5a81ddac7980d4a615b9c020">FT_TPROP_RIGHT_MARGIN</link>,&#32;value));
927 &#32;&#32;&#32;&#32;}
928 
938 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a0d3651e9e4d47fd3594cc1a8638f5f1d">set_bottom_margin</link>(<emphasis role="keywordtype">unsigned</emphasis>&#32;value)
939 &#32;&#32;&#32;&#32;{
940 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8c_1ac7ff4899d39f21d4cf8948c73bbb1595">ft_set_tbl_prop</link>(table_,&#32;<link linkend="_fort_8h_1ac12c48db088c87088e471656a72de7ad">FT_TPROP_BOTTOM_MARGIN</link>,&#32;value));
941 &#32;&#32;&#32;&#32;}
942 
952 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1a097c227305b6497609363f6744ae9f0b">set_adding_strategy</link>(<link linkend="_namespacefort_1a90d7e4b53ec42f4eddd9e63eb02abca4">fort::add_strategy</link>&#32;value)
953 &#32;&#32;&#32;&#32;{
954 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8c_1ac7ff4899d39f21d4cf8948c73bbb1595">ft_set_tbl_prop</link>(table_,
955 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8h_1a1de2ce152f17fb058c7d397e97a9837d">FT_TPROP_ADDING_STRATEGY</link>,
956 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keywordtype">int</emphasis><emphasis role="keyword">&gt;</emphasis>(value)));
957 &#32;&#32;&#32;&#32;}
958 <emphasis role="keyword">private</emphasis>:
959 &#32;&#32;&#32;&#32;<link linkend="_structft__table">ft_table_t</link>&#32;*table_;
960 &#32;&#32;&#32;&#32;<emphasis role="keyword">mutable</emphasis>&#32;std::stringstream&#32;stream_;
961 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classfort_1_1property__owner">property_owner</link>&lt;<link linkend="_classfort_1_1table">table</link>&gt;;
962 
963 
964 <emphasis role="keyword">public</emphasis>:
965 
966 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;Iterators&#32;*/</emphasis>
967 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;todo:&#32;implement&#32;chains&#32;like&#32;table[0][0]&#32;=&#32;table&#32;[0][1]&#32;=&#32;&quot;somethings&quot;&#32;*/</emphasis>
968 
972 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classfort_1_1table_1_1table__cell">table_cell</link>:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>
973 &#32;&#32;&#32;&#32;{
974 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab3d52a7587080b99afecd6d362ecbdc9">property_owner_t::ps_coll_idx_</link>;
975 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a1a008cd03d21db838be6b1718d462f71">property_owner_t::ps_row_idx_</link>;
976 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a8b0bba2c8cf48c8b727d4c849f90be2b">property_owner_t::ps_table_</link>;
977 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ac9a6f69065cc50d9fb1f31160e9ba31b">property_owner_t::set_default_properties_</link>;
978 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
979 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1_1table__cell_1a73afbfe77b4f3a6feef0c87e7e21b30a">table_cell</link>(std::size_t&#32;row_idx,&#32;std::size_t&#32;coll_idx,&#32;<link linkend="_classfort_1_1table">table</link>&#32;&amp;tbl)
980 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>(row_idx,&#32;coll_idx,&#32;&amp;tbl)&#32;{}
981 
982 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1_1table__cell">table_cell</link>&#32;&amp;<link linkend="_classfort_1_1table_1_1table__cell_1a7392c46b1ecbe73a7eee5effd345f7b0">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*str)
983 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
984 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1a6dffc742cbce46e492cd3298de467b16">ft_set_cur_cell</link>(ps_table_-&gt;table_,&#32;ps_row_idx_,&#32;ps_coll_idx_);
985 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps_table_-&gt;<link linkend="_classfort_1_1table_1ab6b0b3f3a39b255d5dd95ce14f9d472b">write</link>(str);
986 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;*<emphasis role="keyword">this</emphasis>;
987 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
988 
989 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1_1table__cell">table_cell</link>&#32;&amp;<link linkend="_classfort_1_1table_1_1table__cell_1a629bf4abe5922060585b21391e835711">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;std::string&#32;&amp;str)
990 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
991 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1_1table__cell_1a7392c46b1ecbe73a7eee5effd345f7b0">operator=</link>(str.c_str());
992 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
993 
1003 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classfort_1_1table_1_1table__cell_1a07c02d2621cc30fb27ee55ffd3fc8dd9">set_cell_span</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;hor_span)
1004 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1005 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(set_default_properties_)
1006 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">false</emphasis>;
1007 
1008 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8c_1ae958a4787cc8fee9abb452bbced096f8">ft_set_cell_span</link>(ps_table_-&gt;table_,&#32;ps_row_idx_,&#32;ps_coll_idx_,&#32;hor_span));
1009 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1010 &#32;&#32;&#32;&#32;};
1011 
1015 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classfort_1_1table_1_1table__row">table_row</link>:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>
1016 &#32;&#32;&#32;&#32;{
1017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a1a008cd03d21db838be6b1718d462f71">property_owner_t::ps_row_idx_</link>;
1018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a8b0bba2c8cf48c8b727d4c849f90be2b">property_owner_t::ps_table_</link>;
1019 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
1020 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1_1table__row_1a69aecbe118da3fccfc1992647b0e7a81">table_row</link>(std::size_t&#32;row_idx,&#32;<link linkend="_classfort_1_1table">table</link>&#32;&amp;tbl)
1021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>(row_idx,&#32;<link linkend="_fort_8h_1ad5b6b32262309f37874d11369f47c7a5">FT_ANY_COLUMN</link>,&#32;&amp;tbl)&#32;{}
1022 
1023 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classfort_1_1table_1_1table__cell">table_cell</link>
1024 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;operator[](std::size_t&#32;coll_idx)
1025 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1026 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1_1table__cell">table_cell</link>(ps_row_idx_,&#32;coll_idx,&#32;*ps_table_);
1027 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1028 
1029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classfort_1_1table_1_1table__row_1a546992d1780126d0ebe970c78f6271bb">erase</link>()
1030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fort_8h_1acca4660b494725c897b9fd09ec0be057">FT_IS_ERROR</link>(<link linkend="_fort_8c_1a53eb304387cf4e99f0198f780bc75dc8">ft_erase_range</link>(ps_table_-&gt;table_,
1032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1property__owner_1a1a008cd03d21db838be6b1718d462f71">property_owner_t::ps_row_idx_</link>,&#32;0,
1033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1property__owner_1a1a008cd03d21db838be6b1718d462f71">property_owner_t::ps_row_idx_</link>,&#32;<link linkend="_fort_8h_1ac34ce9c2708abc0d5fd49d36f1b99387">FT_MAX_COL_INDEX</link>)))&#32;{
1034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<emphasis role="stringliteral">&quot;Failed&#32;to&#32;erase&#32;row&quot;</emphasis>);
1035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1037 &#32;&#32;&#32;&#32;};
1038 
1042 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classfort_1_1table_1_1table__column">table_column</link>:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>
1043 &#32;&#32;&#32;&#32;{
1044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab3d52a7587080b99afecd6d362ecbdc9">property_owner_t::ps_coll_idx_</link>;
1045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a8b0bba2c8cf48c8b727d4c849f90be2b">property_owner_t::ps_table_</link>;
1046 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
1047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1_1table__column_1a8afca7aeb28eed51e2b7963c08c11a11">table_column</link>(std::size_t&#32;col_idx,&#32;<link linkend="_classfort_1_1table">table</link>&#32;&amp;tbl)
1048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>(<link linkend="_fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d">FT_ANY_ROW</link>,&#32;col_idx,&#32;&amp;tbl)&#32;{}
1049 
1050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classfort_1_1table_1_1table__column_1a3e917816d1f897da7258f7e752150fac">erase</link>()
1051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fort_8h_1acca4660b494725c897b9fd09ec0be057">FT_IS_ERROR</link>(<link linkend="_fort_8c_1a53eb304387cf4e99f0198f780bc75dc8">ft_erase_range</link>(ps_table_-&gt;table_,
1053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;ps_coll_idx_,
1054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8h_1a6176acd755883465f939d260da253005">FT_MAX_ROW_INDEX</link>,&#32;ps_coll_idx_)))&#32;{
1055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<emphasis role="stringliteral">&quot;Failed&#32;to&#32;erase&#32;column&quot;</emphasis>);
1056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1058 &#32;&#32;&#32;&#32;};
1059 
1067 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classfort_1_1table_1_1cell__range">cell_range</link>:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>
1068 &#32;&#32;&#32;&#32;{
1069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1ab3d52a7587080b99afecd6d362ecbdc9">property_owner_t::ps_coll_idx_</link>;
1070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a1a008cd03d21db838be6b1718d462f71">property_owner_t::ps_row_idx_</link>;
1071 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1property__owner_1a8b0bba2c8cf48c8b727d4c849f90be2b">property_owner_t::ps_table_</link>;
1072 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
1073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1_1cell__range_1a3df994956c04b3f0e7bfc8cec38d938d">cell_range</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;top_left_row,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;top_left_col,
1074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bottom_right_row,&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;bottom_right_col,
1075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table">table</link>&#32;&amp;tbl)
1076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>(top_left_row,&#32;top_left_col,&#32;&amp;tbl),
1077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bottom_right_row_(bottom_right_row),
1078 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bottom_right_col_(bottom_right_col)
1079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{}
1080 
1081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classfort_1_1table_1_1cell__range_1aeca1a5aebde6f2a48c9b14e090bb1c0b">erase</link>()
1082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
1083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_fort_8h_1acca4660b494725c897b9fd09ec0be057">FT_IS_ERROR</link>(<link linkend="_fort_8c_1a53eb304387cf4e99f0198f780bc75dc8">ft_erase_range</link>(ps_table_-&gt;table_,
1084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ps_row_idx_,&#32;ps_coll_idx_,
1085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bottom_right_row_,&#32;bottom_right_col_)))&#32;{
1086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">throw</emphasis>&#32;std::runtime_error(<emphasis role="stringliteral">&quot;Failed&#32;to&#32;erase&#32;column&quot;</emphasis>);
1087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
1089 
1090 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
1091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::size_t&#32;bottom_right_row_;
1092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::size_t&#32;bottom_right_col_;
1093 &#32;&#32;&#32;&#32;};
1094 
1095 
1096 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis><link linkend="_classfort_1_1table_1_1default__properties">default_properties</link>:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>
1097 &#32;&#32;&#32;&#32;{
1098 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
1099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1_1default__properties_1a22fe51060e7376588a768f0bc786a89a">default_properties</link>(<link linkend="_classfort_1_1table">table</link>&#32;*tbl)
1100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classfort_1_1property__owner">property_owner_t</link>(<link linkend="_fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d">FT_ANY_ROW</link>,&#32;<link linkend="_fort_8h_1ad5b6b32262309f37874d11369f47c7a5">FT_ANY_COLUMN</link>,&#32;tbl,&#32;true)&#32;{}
1101 &#32;&#32;&#32;&#32;};
1102 
1103 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>table_row
1104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;operator[](std::size_t&#32;row_idx)
1105 &#32;&#32;&#32;&#32;{
1106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1_1table__row_1a69aecbe118da3fccfc1992647b0e7a81">table_row</link>(row_idx,&#32;*<emphasis role="keyword">this</emphasis>);
1107 &#32;&#32;&#32;&#32;}
1108 
1109 
1120 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>table_cell
1121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1aed19cddfec34812a4bcbcbc1f919c5f7">cell</link>(std::size_t&#32;row_idx,&#32;std::size_t&#32;col_idx)
1122 &#32;&#32;&#32;&#32;{
1123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(*<emphasis role="keyword">this</emphasis>)[row_idx][col_idx];
1124 &#32;&#32;&#32;&#32;}
1125 
1132 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>
1133 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1a2ab00305a1e754e87efed759cafce945">cur_col</link>()&#32;const&#32;noexcept
1134 &#32;&#32;&#32;&#32;{
1135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8c_1a4f3f1b331ee3637e3c8345ecb1b4ebd6">ft_cur_col</link>(table_);
1136 &#32;&#32;&#32;&#32;}
1137 
1144 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>
1145 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1ac74ecd92b580d2f350ade38aa7cdd8bc">cur_row</link>()&#32;const&#32;noexcept
1146 &#32;&#32;&#32;&#32;{
1147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8c_1a71a30e02111b90af7babd37d13f3e4ee">ft_cur_row</link>(table_);
1148 &#32;&#32;&#32;&#32;}
1149 
1157 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>
1158 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1a47558c6b2bc4d7ac0990f6e43938f075">is_empty</link>()&#32;const&#32;noexcept
1159 &#32;&#32;&#32;&#32;{
1160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8c_1a6791222986d387c26d905691c30e095b">ft_is_empty</link>(table_);
1161 &#32;&#32;&#32;&#32;}
1162 
1169 &#32;&#32;&#32;&#32;std::size_t
1170 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1aa507b478c722bd977c4c346f1cd0381e">row_count</link>()&#32;const&#32;noexcept
1171 &#32;&#32;&#32;&#32;{
1172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8c_1aa7e5d0d485d6c519198a5fe9eb706eba">ft_row_count</link>(table_);
1173 &#32;&#32;&#32;&#32;}
1174 
1181 &#32;&#32;&#32;&#32;std::size_t
1182 &#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1a6a3a14a7a359dde608c81cb3beb6cece">col_count</link>()&#32;const&#32;noexcept
1183 &#32;&#32;&#32;&#32;{
1184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8c_1acb57251e9e5499b7b983509be936c1d8">ft_col_count</link>(table_);
1185 &#32;&#32;&#32;&#32;}
1186 
1193 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>table_cell
1194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1a94c1bc6489c67eb4724e92f3b9ee21b0">cur_cell</link>()
1195 &#32;&#32;&#32;&#32;{
1196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1aed19cddfec34812a4bcbcbc1f919c5f7">cell</link>(<link linkend="_classfort_1_1table_1ac74ecd92b580d2f350ade38aa7cdd8bc">cur_row</link>(),&#32;<link linkend="_classfort_1_1table_1a2ab00305a1e754e87efed759cafce945">cur_col</link>());
1197 &#32;&#32;&#32;&#32;}
1198 
1207 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>table_row
1208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1a3d99b789d9d175768890a60ae32c404f">row</link>(std::size_t&#32;row_idx)
1209 &#32;&#32;&#32;&#32;{
1210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1_1table__row_1a69aecbe118da3fccfc1992647b0e7a81">table_row</link>(row_idx,&#32;*<emphasis role="keyword">this</emphasis>);
1211 &#32;&#32;&#32;&#32;}
1212 
1221 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>table_column
1222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1af2b6a6bb01c4769e504f053ee0edb20e">column</link>(std::size_t&#32;col_idx)
1223 &#32;&#32;&#32;&#32;{
1224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1_1table__column_1a8afca7aeb28eed51e2b7963c08c11a11">table_column</link>(col_idx,&#32;*<emphasis role="keyword">this</emphasis>);
1225 &#32;&#32;&#32;&#32;}
1226 
1235 &#32;&#32;&#32;&#32;<emphasis role="keyword">class&#32;</emphasis>cell_range
1236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1ad18fcdc28a35e28766c53d76747fc2fd">range</link>(std::size_t&#32;top_left_row,&#32;std::size_t&#32;top_left_col,
1237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::size_t&#32;bottom_right_row,&#32;std::size_t&#32;bottom_right_col)
1238 &#32;&#32;&#32;&#32;{
1239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1_1cell__range_1a3df994956c04b3f0e7bfc8cec38d938d">cell_range</link>(top_left_row,&#32;top_left_col,
1240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bottom_right_row,&#32;bottom_right_col,
1241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<emphasis role="keyword">this</emphasis>);
1242 &#32;&#32;&#32;&#32;}
1243 
1244 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">class&#32;</emphasis>default_properties
1245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classfort_1_1table_1a1424d05a0271d78d441c61f85c1a349f">default_props</link>()
1246 &#32;&#32;&#32;&#32;{
1247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classfort_1_1table_1_1default__properties_1a22fe51060e7376588a768f0bc786a89a">default_properties</link>(NULL);
1248 &#32;&#32;&#32;&#32;}
1249 };
1250 
1258 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1table">char_table</link>&#32;=&#32;<link linkend="_classfort_1_1table">table&lt;table_type::character&gt;</link>;
1259 
1260 <emphasis role="preprocessor">#ifdef&#32;FT_HAVE_UTF8</emphasis>
1264 <emphasis role="keyword">using</emphasis>&#32;<link linkend="_classfort_1_1table">utf8_table</link>&#32;=&#32;<link linkend="_classfort_1_1table">table&lt;table_type::utf8&gt;</link>;
1265 <emphasis role="preprocessor">#endif</emphasis>
1266 
1276 <emphasis role="keyword">inline</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_namespacefort_1ad609b3a839d0c845e58d315085f8fade">set_default_border_style</link>(<emphasis role="keyword">struct</emphasis>&#32;<link linkend="_structft__border__style">ft_border_style</link>&#32;*style)
1277 {
1278 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482">FT_IS_SUCCESS</link>(<link linkend="_fort_8c_1addb2484d7bc2a271be60cf743ae8eaeb">ft_set_default_border_style</link>(style));
1279 }
1280 
1281 
1282 }&#32;<emphasis role="comment">//&#32;namespace&#32;fort</emphasis>
1283 
1284 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;LIBFORT_HPP</emphasis>
</programlisting></section>
