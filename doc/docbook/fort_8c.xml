<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_fort_8c" xml:lang="en-US">
<title>C:/workspace/Computer Vision/OpenCVProjekt/OpenCVTest/fort.c File Reference</title>
<indexterm><primary>C:/workspace/Computer Vision/OpenCVProjekt/OpenCVTest/fort.c</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;stddef.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;assert.h&gt;
#include &lt;stdio.h&gt;
#include &quot;fort.h&quot;
#include &lt;wchar.h&gt;
#include &lt;stdint.h&gt;
#include &lt;limits.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;ctype.h&gt;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structf__string__view">f_string_view</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structf__separator">f_separator</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structf__context">f_context</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structf__conv__context">f_conv_context</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structf__string__buffer">f_string_buffer</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structf__cell__props">f_cell_props</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__entire__table__properties">fort_entire_table_properties</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structf__table__properties">f_table_properties</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structft__table">ft_table</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structf__cell">f_cell</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structf__row">f_row</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structf__vector">f_vector</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structinterval">interval</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_fort_8c_1a77ac3a2ee8d69df58f2d239db35dd0e8">FT_AMALGAMED_SOURCE</link>   /* Macros to make internal libfort functions static */</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a782d0c6b09259c09d312e4c80d6cabf2">FORT_IMPL_H</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link>   static</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a3abeff93bbe13043e19c4bd8b6dd30df">FORT_DEFAULT_COL_SEPARATOR</link>   &apos;|&apos;</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1ac22fb60cd88090750f4536ce213d7076">FORT_COL_SEPARATOR_LENGTH</link>   1</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a55b6b4dcb81ff007fa598b3d373ad704">FORT_UNUSED</link>   __attribute__((unused))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a62d5e3834ceef771f05d50e71ed45c95">F_MALLOC</link>   <link linkend="_fort_8c_1a792989ae317c7b690425af8179d88466">fort_malloc</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1add196043a1d5633940925baaba3bae1d">F_FREE</link>   <link linkend="_fort_8c_1a2a6d016d7f881874b0a6212d08514f5b">fort_free</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a292448526dc3d314e5573c19c45b8fa2">F_CALLOC</link>   <link linkend="_fort_8c_1ab2604d3e25cf16a7e668feb1fc0e7b37">fort_calloc</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a51798cbeb535b232ea9905516cfcdb4c">F_REALLOC</link>   <link linkend="_fort_8c_1aac796d096112928799fe930648dc0da4">fort_realloc</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a6b396d87fd0d7c48631754638ecf17f2">F_STRDUP</link>   <link linkend="_fort_8c_1ac8f846ccc1871712ed5d17b25dfbff5c">fort_strdup</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a62f4a36b4f123d858a97f079fda2834f">F_WCSDUP</link>   <link linkend="_fort_8c_1afbb101e4e75dbefa32076dc1f8a07762">fort_wcsdup</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a273fee17f4143f522a4cb3c67a05aa1a">F_UTF8DUP</link>   <link linkend="_fort_8c_1a157235d1e84617035dd6a2b6891d1190">utf8dup</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1aa17e5e6fd8cb7909a873af4fc842541c">F_CREATE</link>(type)   ((type *)<link linkend="_fort_8c_1a292448526dc3d314e5573c19c45b8fa2">F_CALLOC</link>(sizeof(type), 1))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f">MAX</link>(a,  b)   ((a) &gt; (b) ? (a) : (b))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a3acffbd305ee72dcd4593c0d8af64a4f">MIN</link>(a,  b)   ((a) &lt; (b) ? (a) : (b))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a0474dfa1c9848f892832d4babf0e3cd8">FT_NEWLINE</link>   &quot;\n&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748">FT_SPACE</link>   &quot; &quot;</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1aae64a8d6a29845f7f4aa2f1bc3e095dd">DEFAULT_STR_BUF_SIZE</link>   1024</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1ae79893aa9b2a96292bb66404e00eddf1">DEFAULT_VECTOR_CAPACITY</link>   10</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a9ba61413675b31346681731eaa8d9040">FT_STR_2_CAT_</link>(arg1,  arg2)       arg1##arg2</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1ab9b04e78482e306f63fff64eb3d4e19e">FT_STR_2_CAT</link>(arg1,  arg2)       <link linkend="_fort_8c_1a9ba61413675b31346681731eaa8d9040">FT_STR_2_CAT_</link>(arg1, arg2)</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a43f37b1674d09a7d903cd745f13692af">UNIQUE_NAME_</link>(prefix)       <link linkend="_fort_8c_1ab9b04e78482e306f63fff64eb3d4e19e">FT_STR_2_CAT</link>(prefix,__COUNTER__)</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a8ca2d33aab5f2ed9b84085b0122dd175">UNIQUE_NAME</link>(prefix)       <link linkend="_fort_8c_1a43f37b1674d09a7d903cd745f13692af">UNIQUE_NAME_</link>(prefix)</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a13b182782de774d46e704f91a526e4f6">PRINT_DEBUG_INFO</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a784abddef87cd2430529e032c3d8213e">FT_CHECK</link>(statement)</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1">CHCK_RSLT_ADD_TO_WRITTEN</link>(statement)</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</link>(statement)</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1aab06de152ddaae54d61db939ee942b20">CHECK_NOT_NEGATIVE</link>(x)       do { if ((x) &lt; 0) goto fort_fail; } while (0)</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a0e56521e7ab51dee5a9705e070406265">VECTOR_H</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a55a8000149f7d5b04b4b07cc44c4dc79">INVALID_VEC_INDEX</link>   ((size_t) -1)</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2">VECTOR_AT</link>(vector,  pos,  data_type)       *(data_type *)<link linkend="_fort_8c_1abb033777a1a8c0b490f14541bc0332fa">vector_at</link>((vector), (pos))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a9d43ef6423e42a608c3e28e9fef6d053">VECTOR_AT_C</link>(vector,  pos,  const_data_type)       *(const_data_type *)<link linkend="_fort_8c_1a91644aa66c95f718abb2f0ad731c604b">vector_at_c</link>((vector), (pos))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a35d88a67057477f326a6c3d4bfa69902">WCWIDTH_H</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1afcf11092c559c10a0fbab216b54e6aee">SHEREDOM_UTF8_H_INCLUDED</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link>   inline</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6">utf8_null</link>   0</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a8c50b95728a093bfac504b2dde6415e7">STRING_BUFFER_H</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1ae2c58bc6eb17515036e8c0037e9922a7">PROPERTIES_H</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a89b695ac3096c15aeaa67152e30c003d">PROP_IS_SET</link>(ft_props,  property)   ((ft_props) &amp; (property))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a292665f9426d532a04d9db2f47f8cc1f">PROP_SET</link>(ft_props,  property)   ((ft_props) |=(property))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a5c2b099178ba4f1e6df87d1ff8f05bb1">PROP_UNSET</link>(ft_props,  property)   ((ft_props) &amp;= ~((uint32_t)(property)))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2">TEXT_STYLE_TAG_MAX_SIZE</link>   (64 * 2)</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a36e1292dd9af86d5b74a92b4a1bad9ba">CELL_H</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1aff5bd921faea144bda420627350e0b5c">ROW_H</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1ab2a7e3ca6ca07a330a9fe4d74d714b66">TABLE_H</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1ab55660b1711634f2daf0089672257c2d">TOTAL_WRITTEN</link>   (written + invisible_written)</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a80fb826a684cf3f0d306b22aa100ddac">RIGHT</link>   (padding_right + extra_right)</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a31acf3be2a5038d72e7e9f08311e4f8a">WRITE_CELL_STYLE_TAG</link>   <link linkend="_fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</link>(<link linkend="_fort_8c_1a3e1f24169bad7166d9c73022ce44461f">print_n_strings</link>(cntx, 1, cell_style_tag))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1af9efa523650f6451fd7a1ed157f1511f">WRITE_RESET_CELL_STYLE_TAG</link>   <link linkend="_fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</link>(<link linkend="_fort_8c_1a3e1f24169bad7166d9c73022ce44461f">print_n_strings</link>(cntx, 1, reset_cell_style_tag))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a572a6ca19b88baf9e4d32d270f04b6a8">WRITE_CONTENT_STYLE_TAG</link>   <link linkend="_fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</link>(<link linkend="_fort_8c_1a3e1f24169bad7166d9c73022ce44461f">print_n_strings</link>(cntx, 1, content_style_tag))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a4dd3781a70086c75737fd2c6aafdc299">WRITE_RESET_CONTENT_STYLE_TAG</link>   <link linkend="_fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</link>(<link linkend="_fort_8c_1a3e1f24169bad7166d9c73022ce44461f">print_n_strings</link>(cntx, 1, reset_content_style_tag))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a1c5df369af358a17b90f4b5022121a4c">FT_PRINTF</link>   ft_printf_impl</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a50fa22fc7abbe64934bf11438e7c25e6">FT_PRINTF_LN</link>   ft_printf_ln_impl</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1ab179ba6d458ef3bf6a3b23232a4ae582">BUILT_IN_STYLES_SZ</link>   (sizeof(built_in_styles) / sizeof(built_in_styles[0]))</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01">BOR_CHARS</link>   properties-&gt;border_style.border_chars</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a87b95d888583f9c786462fd44b9b3ab5">H_BOR_CHARS</link>   properties-&gt;border_style.header_border_chars</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a71c4b4e49c32a083b3e41812e5acb5aa">SEP_CHARS</link>   properties-&gt;border_style.separator_chars</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a372768dcf109902d738ffaedff0faeac">WCS_SIZE</link>   64</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1ae70aa0f62e3542d3ed398ec21f6cbacb">FT_RESET_COLOR</link>   &quot;\033[0m&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a1dfc09e89d646bcb4852592debb5c8e5">UNIVERSAL_RESET_TAG</link>   &quot;\033[0m&quot;</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a25b25babc27e11fbe4cfae21995881e6">BASIC_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a84323253628c81be9d93a0d6fadc891c">BASIC2_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a58a32c54547e08b469930b07ec56d9d4">SIMPLE_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1ad95c8d93533ada8f96019637c188f641">PLAIN_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a40f9b235882059f09a69c951205869fe">DOT_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1ad19626848a66b2a7f33ae0e16db45b7f">EMPTY_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a34458dc60b60037c1df5622184763bd1">EMPTY2_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1ac551f30a3d753dbce194e2d5c50a7950">SOLID_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1adb4ab5efdfbfd2cfb08cfdb595c4f90a">SOLID_ROUND_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1ad112a91d6823b6b59b1791ceb6445a93">NICE_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a6c3842c70b6f4100cd5973e7a288c2d4">DOUBLE_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a2977b3d23b0acedf98ddb75cfa3714c2">DOUBLE2_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a818cdb05e2e0ee60b8693016efdcebff">BOLD_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1aa6f6720b767dd4451f95654b138af84c">BOLD2_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a9307749f2660d6c9ac81a0f3ae89a0de">FRAME_STYLE</link></para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a1acd15654d584ab951286e96248e5c9c">STRCHR</link>   strchr</para>
</listitem>
            <listitem><para>#define <link linkend="_fort_8c_1a1acd15654d584ab951286e96248e5c9c">STRCHR</link>   wcschr</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_structf__string__view">f_string_view</link> <link linkend="_fort_8c_1a5e5d59807caf98214d772b0952b8439c">f_string_view_t</link></para>
</listitem>
            <listitem><para>typedef int <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structf__table__properties">f_table_properties</link> <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structf__vector">f_vector</link> <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structf__cell">f_cell</link> <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structf__string__buffer">f_string_buffer</link> <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structf__row">f_row</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structf__separator">f_separator</link> <link linkend="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13">f_separator_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structf__context">f_context</link> <link linkend="_fort_8c_1a411e98c8a879520a2ccf789f62d10e85">f_context_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structf__conv__context">f_conv_context</link> <link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link></para>
</listitem>
            <listitem><para>typedef int32_t <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structf__cell__props">f_cell_props</link> <link linkend="_fort_8c_1a1dd5de14b38f8ea6034cd4574d2c5122">f_cell_props_t</link></para>
</listitem>
            <listitem><para>typedef <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> <link linkend="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104">f_cell_prop_container_t</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structfort__entire__table__properties">fort_entire_table_properties</link> <link linkend="_fort_8c_1a171a2ab1349903dadd4fde07a45a6ee3">fort_entire_table_properties_t</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_fort_8c_1a637b893c0bf4371273b9746c62b58879">f_get_policy</link> { <link linkend="_fort_8c_1a637b893c0bf4371273b9746c62b58879ae156f80eb433e523b7dc5d66da39f77a">CREATE_ON_NULL</link>
, <link linkend="_fort_8c_1a637b893c0bf4371273b9746c62b58879a6314d3c3f6e06cf754889e1774caecfc">DONT_CREATE_ON_NULL</link>
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85">f_bool</link> { <link linkend="_fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85a7d1c5eb5c19fe2c534aa6fb6605927e4">F_FALSE</link> = 0
, <link linkend="_fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85a42654a58e5b0bffec1ba32aef39af469">F_TRUE</link> = 1
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4">f_cell_type</link> { <link linkend="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ad051cc4f661b418b4adfd1e7ffcd67dc">COMMON_CELL</link>
, <link linkend="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab322ed6278dd2cdc3389001b26a2c1de">GROUP_MASTER_CELL</link>
, <link linkend="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab23f446b03b09980fb5bcb456f168d86">GROUP_SLAVE_CELL</link>
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_fort_8c_1af04f170451a6d8600ba71c318b2b6027">f_geometry_type</link> { <link linkend="_fort_8c_1af04f170451a6d8600ba71c318b2b6027a649c4250d469605327eeddcfb36bf296">VISIBLE_GEOMETRY</link>
, <link linkend="_fort_8c_1af04f170451a6d8600ba71c318b2b6027ae4419d33092d617c9f99d6ac234e7a33">INTERN_REPR_GEOMETRY</link>
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_fort_8c_1aac6eaac439cc49e9382b6c239aa310aa">f_string_type</link> { <link linkend="_fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033">CHAR_BUF</link>
, <link linkend="_fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810">W_CHAR_BUF</link>
, <link linkend="_fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882">UTF8_BUF</link>
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_fort_8c_1a114ae9015942e72d33913dbca07d18f5">f_hor_separator_pos</link> { <link linkend="_fort_8c_1a114ae9015942e72d33913dbca07d18f5a20da53267127001ec3320abe91fa783e">TOP_SEPARATOR</link>
, <link linkend="_fort_8c_1a114ae9015942e72d33913dbca07d18f5a23c6c5d09adaa5a3c4176c0b67263769">INSIDE_SEPARATOR</link>
, <link linkend="_fort_8c_1a114ae9015942e72d33913dbca07d18f5a84ba29422768fd8057cd7d8f3239e59c">BOTTOM_SEPARATOR</link>
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29">f_border_item_pos</link> { 
<link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a1ec0255840e5ab81cff847681a715b08">TL_bip</link> = 0
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a17451858f18bd17d08f1b9c9677f6fe4">TT_bip</link> = 1
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a649b973e5f4975036c8271fc94243b3b">TV_bip</link> = 2
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a22d4696994865fe8121ec409e148bfac">TR_bip</link> = 3
, 
<link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a889a1c24be63ae17b128192d9dec2d3a">LL_bip</link> = 4
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29aad183d45427b545df2fd25ed9ecccc8c">IV_bip</link> = 5
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a062e9c55d54121d574a4b8f244c2d964">RR_bip</link> = 6
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a39a100939802cb577416e58d02938056">LH_bip</link> = 7
, 
<link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a11e0bf08571e805873e7e8c2772e1445">IH_bip</link> = 8
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a1496ce55ebf0dc1c90c6f8abd60ea272">II_bip</link> = 9
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a8284e2f20ee28045694355f5c74bc1a5">RH_bip</link> = 10
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29ab1ee2d1f7d29465d2d1f9c6a4c2037b6">BL_bip</link> = 11
, 
<link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29ae48f39d06e91b11b022fda6d6d373472">BB_bip</link> = 12
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29ac101b442110364e7401b8b2d61730517">BV_bip</link> = 13
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a675b8ffdf47d8160e8ab3f5493b97677">BR_bip</link> = 14
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a6e524723eac5b695737b627d74ac77fb">LI_bip</link> = 15
, 
<link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a9c128d27d24141f9c2df703a42521835">TI_bip</link> = 16
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a0841d0344e52968b3d6dd1bfee6f98d2">RI_bip</link> = 17
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a46945f957ff717cbf501e5a59d0f8e1d">BI_bip</link> = 18
, <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a56d2b99637c35906282c659f4edb5652">BORDER_ITEM_POS_SIZE</link>
 }</para>
</listitem>
            <listitem><para>enum <link linkend="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35">f_separator_item_pos</link> { 
<link linkend="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35af5bdf3707d8c0c144baceb9b432b080b">LH_sip</link> = 0
, <link linkend="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35a6edb298364e9b2705453e4fd3d764894">IH_sip</link> = 1
, <link linkend="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35ae795b75c17ff1dc6b1d7a94e0db120e6">II_sip</link> = 2
, <link linkend="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35a9ef36a4ef68f74f53f7153992ac80c2e">RH_sip</link> = 3
, 
<link linkend="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35a4dd526ac15d2f95dda29b58a7969250c">TI_sip</link> = 4
, <link linkend="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35af5c00304dc6ed19e75613b993f3b8510">BI_sip</link> = 5
, <link linkend="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35a1011b2e48e304397b1f174798923779c">SEPARATOR_ITEM_POS_SIZE</link>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1ae131c0f0e6d8da7a4708c7175bf1df10">set_memory_funcs</link> (void *(*f_malloc)(size_t size), void(*f_free)(void *ptr))</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> char * <link linkend="_fort_8c_1ac8f846ccc1871712ed5d17b25dfbff5c">fort_strdup</link> (const char *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1a5140ca8ce544c7fe7fd8580b46eb7919">number_of_columns_in_format_string</link> (const <link linkend="_fort_8c_1a5e5d59807caf98214d772b0952b8439c">f_string_view_t</link> *fmt)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1a99b4b352713722a3c4bd74f977dcddfb">number_of_columns_in_format_buffer</link> (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *fmt)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> wchar_t * <link linkend="_fort_8c_1afbb101e4e75dbefa32076dc1f8a07762">fort_wcsdup</link> (const wchar_t *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1a3e1f24169bad7166d9c73022ce44461f">print_n_strings</link> (<link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> *cntx, size_t n, const char *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1adc410898e7cdde87f19083209df4bb02">ft_nprint</link> (<link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> *cntx, const char *str, size_t strlen)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1af86c27e4ebf239a915a36b6972d1d607">ft_nwprint</link> (<link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> *cntx, const wchar_t *str, size_t strlen)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1a3e59820002f722488daba674c799bb97">ft_nu8print</link> (<link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> *cntx, const void *beg, const void *end)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * <link linkend="_fort_8c_1a06be2f0a19611886237dcde275f8d678">create_vector</link> (size_t item_size, size_t capacity)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76">destroy_vector</link> (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> *)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b">vector_size</link> (const <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> *)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1a81f0b5b62d8a431c44be2bac0f6f8465">vector_capacity</link> (const <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> *)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1a48a4c572a9523b30ea430a9aefde654d">vector_push</link> (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> *, const void *item)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1a5ca29d2ab42c28eff3a8fc5fae7b9829">vector_insert</link> (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> *, const void *item, size_t pos)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * <link linkend="_fort_8c_1acb4f5f3823ce6b50e51c8223c5fb9c2a">vector_split</link> (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> *, size_t pos)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const void * <link linkend="_fort_8c_1a91644aa66c95f718abb2f0ad731c604b">vector_at_c</link> (const <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> *vector, size_t index)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void * <link linkend="_fort_8c_1abb033777a1a8c0b490f14541bc0332fa">vector_at</link> (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> *, size_t index)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a844f2a888602cd950e5a2d7c332c3b07">vector_swap</link> (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> *cur_vec, <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> *mv_vec, size_t pos)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1aeed5528bb1a8124b530766b5cdd607f4">vector_clear</link> (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> *)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1ae1d70435626d59e4d41971e22fa90fec">vector_erase</link> (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> *, size_t index)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1a8c6234fb096b466971193e24d3f9c85b">mk_wcswidth</link> (const wchar_t *pwcs, size_t n)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> int <link linkend="_fort_8c_1a7349d4800cf8b7db916cdbe2fdacdb0b">utf8casecmp</link> (const void *src1, const void *src2)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1a26b01cd15111c67880a523b603002188">utf8cat</link> (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> dst, const void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> src)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1a26d8cb716ec6b80b8e1ecc0d242de961">utf8chr</link> (const void *src, <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> chr)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> int <link linkend="_fort_8c_1a260642d22e26c99dbbaf65e98eadc88a">utf8cmp</link> (const void *src1, const void *src2)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1a7659546b0f93f4e58ecea8ccc303851f">utf8cpy</link> (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> dst, const void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> src)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> size_t <link linkend="_fort_8c_1aaa64987dd6510395216898ed8117f290">utf8cspn</link> (const void *src, const void *reject)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1a157235d1e84617035dd6a2b6891d1190">utf8dup</link> (const void *src)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> size_t <link linkend="_fort_8c_1acf9a71744695b4e13bd8fe284f6493f5">utf8len</link> (const void *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> size_t <link linkend="_fort_8c_1ac93b14073da51fe7722162b16b117d34">utf8width</link> (const void *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> int <link linkend="_fort_8c_1a72273b72cf22e087384fade5accece3e">utf8cwidth</link> (<link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> c)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> int <link linkend="_fort_8c_1a76ca27590e83a0d94f85e5a58d3dbfac">utf8ncasecmp</link> (const void *src1, const void *src2, size_t n)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1a11ed5b03517ab8ce1f811995695068c1">utf8ncat</link> (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> dst, const void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> src, size_t n)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> int <link linkend="_fort_8c_1aee64c8755c33e9b410d3d911095b8573">utf8ncmp</link> (const void *src1, const void *src2, size_t n)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1aabf0105a5dbba289e35565281e3e4e4a">utf8ncpy</link> (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> dst, const void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> src, size_t n)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1a141320e9eb2d70f541c09ef36e1230bf">utf8ndup</link> (const void *src, size_t n)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1ac0044439ba5de366174a070337d46b00">utf8pbrk</link> (const void *str, const void *accept)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1a8d291c79b99c32f07241854c6f8ce61d">utf8rchr</link> (const void *src, int chr)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> size_t <link linkend="_fort_8c_1a1ef3ed7cdde8e5b378fad2edc26366d9">utf8size</link> (const void *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> size_t <link linkend="_fort_8c_1a2751e31b4afa3d09d21b2d3dada3b8fa">utf8spn</link> (const void *src, const void *accept)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1a90a2d154aa14ee7e5ee755d094328cae">utf8str</link> (const void *haystack, const void *needle)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1a00197aa7445ef50af8eb7de80904cc55">utf8casestr</link> (const void *haystack, const void *needle)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a43095c668493542f53935a041bf4f30b">utf8_pure</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1aedad8b40a6836b75f6268a6a66b53f76">utf8valid</link> (const void *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e">utf8codepoint</link> (const void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> str, <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> out_codepoint)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> size_t <link linkend="_fort_8c_1a5485ff272fc1530f21b35d32f9ab7a88">utf8codepointsize</link> (<link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> chr)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void * <link linkend="_fort_8c_1a7faf7f12202a186786dea223abbd2486">utf8catcodepoint</link> (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> str, <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> chr, size_t n)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> int <link linkend="_fort_8c_1aa3502e1c380c7a4b0f7a02ffc2c3c358">utf8islower</link> (<link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> chr)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> int <link linkend="_fort_8c_1a0b1efc85ea0182178c2e61603c21ef6c">utf8isupper</link> (<link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> chr)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void <link linkend="_fort_8c_1af7329f330e93a5944837500cd4eb70ac">utf8lwr</link> (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e">utf8_nonnull</link> <link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> void <link linkend="_fort_8c_1ae033fd7896504dcd1b9dfc6d6cf97584">utf8upr</link> (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> <link linkend="_fort_8c_1a2204af282a8d53880eceeb503d043319">utf8lwrcodepoint</link> (<link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> cp)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05">utf8_weak</link> <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> <link linkend="_fort_8c_1afc7b7f0e41515bc7d694f22ec6fccd92">utf8uprcodepoint</link> (<link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> cp)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a1568eafa1ce27f57d1a239ee8d3804f9">utf8coll</link> (const void *src1, const void *src2)</para>
</listitem>
            <listitem><para>void * <link linkend="_fort_8c_1a3d2efa24ea68275533011b2bd862d8f2">utf8fry</link> (const void *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * <link linkend="_fort_8c_1ac940e33b846028d55c174b9f7a2164f5">create_string_buffer</link> (size_t number_of_chars, enum <link linkend="_fort_8c_1aac6eaac439cc49e9382b6c239aa310aa">f_string_type</link> type)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1aa2c482e66f3237521dbdfbab4211f434">destroy_string_buffer</link> (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * <link linkend="_fort_8c_1a414a5ce9226b67140bda7955ff1b21e5">copy_string_buffer</link> (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a97de898073d1711de1d55369dfc067c7">realloc_string_buffer_without_copy</link> (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a97269d36ab50d310bd99d9949d14489e">fill_buffer_from_string</link> (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer, const char *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a8fc30ad88cfc706d2a96e04f1cd159e9">fill_buffer_from_wstring</link> (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer, const wchar_t *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a026f474e0d6b4c90c792a8833dde496c">fill_buffer_from_u8string</link> (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer, const void *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1adee94920422c7175c9dedd31fb9e5364">buffer_text_visible_width</link> (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1a85ef6eb340328e5a1d6f4140b2dc8a6b">buffer_text_visible_height</link> (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1acc99fa5ecb3035540808fb06ad4fa4e8">string_buffer_cod_width_capacity</link> (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1a66f99ddf13fdabb67f73a0a763307afb">string_buffer_raw_capacity</link> (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1a398a13f3db5a43bca6fecdc119f38a88">string_buffer_width_capacity</link> (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void * <link linkend="_fort_8c_1af8c64e48cffecc6fb8e5220a8feff523">buffer_get_data</link> (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1a3d109493b9707163dc60dbe7f413f95a">buffer_check_align</link> (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1a0140429a7259d97aaa5711a8b89c5860">buffer_printf</link> (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer, size_t buffer_row, <link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> *cntx, size_t cod_width, const char *content_style_tag, const char *reset_content_style_tag)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1a0e13f6f3d616f84fa0bd43e23d604034">buffer_set_u8strwid_func</link> (int(*u8strwid)(const void *beg, const void *end, size_t *width))</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1a5eb660e527d2b076b21d88c35bef4089">get_style_tag_for_cell</link> (const <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> *props, size_t row, size_t col, char *style_tag, size_t sz)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1a14b841bae5c7188b971109613ab2b12a">get_reset_style_tag_for_cell</link> (const <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> *props, size_t row, size_t col, char *style_tag, size_t sz)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1ae1ca1606073ac2c174844a4633c8159d">get_style_tag_for_content</link> (const <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> *props, size_t row, size_t col, char *style_tag, size_t sz)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1ab4db6996f6df6e03e566bdbdfba76da0">get_reset_style_tag_for_content</link> (const <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> *props, size_t row, size_t col, char *style_tag, size_t sz)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104">f_cell_prop_container_t</link> * <link linkend="_fort_8c_1ab75c8f1799cd2f51d264bfc38e85971c">create_cell_prop_container</link> (void)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1a2266ed2c80b2571032776541bfa14174">destroy_cell_prop_container</link> (<link linkend="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104">f_cell_prop_container_t</link> *cont)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const <link linkend="_fort_8c_1a1dd5de14b38f8ea6034cd4574d2c5122">f_cell_props_t</link> * <link linkend="_fort_8c_1a2ce14d6f2ae9343c8d2e4eb6d4fc0775">cget_cell_prop</link> (const <link linkend="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104">f_cell_prop_container_t</link> *cont, size_t row, size_t col)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a1dd5de14b38f8ea6034cd4574d2c5122">f_cell_props_t</link> * <link linkend="_fort_8c_1a9cf22afc8e3f8fbc1038722b1e918f76">get_cell_prop_and_create_if_not_exists</link> (<link linkend="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104">f_cell_prop_container_t</link> *cont, size_t row, size_t col)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a59462cfbe20a08d695d7fdea80a53c94">set_cell_property</link> (<link linkend="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104">f_cell_prop_container_t</link> *cont, size_t row, size_t col, uint32_t property, int value)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1a5b037958854d02c1fe2678a9be3295f6">get_cell_property_hierarchically</link> (const <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> *properties, size_t row, size_t column, uint32_t property)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a74f59c42e342ef32cba6dda001961f5d">set_default_cell_property</link> (uint32_t property, int value)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a1cde977c8162b3902a3eece0b649e451">set_entire_table_property</link> (<link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> *table_properties, uint32_t property, int value)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a6552ebc09611ccba176d04a5702458a1">set_default_entire_table_property</link> (uint32_t property, int value)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1a218b12058c9822ff0ad91544aedd2a13">max_border_elem_strlen</link> (struct <link linkend="_structf__table__properties">f_table_properties</link> *)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> * <link linkend="_fort_8c_1acd24714fffb2ff7c987d049e7485b7ff">create_table_properties</link> (void)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1a375c0af4b424ea5ae6bada04698665d5">destroy_table_properties</link> (<link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> *properties)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> * <link linkend="_fort_8c_1a60b1666a1271172355ced7927d5f5eff">copy_table_properties</link> (const <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> *property)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * <link linkend="_fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e">create_cell</link> (void)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1a941e7d7921fd2ca180894fe481af986b">destroy_cell</link> (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> *cell)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * <link linkend="_fort_8c_1a236a2db76f5d456475a97dc2726ca7b3">copy_cell</link> (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> *cell)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1a1934466a7efe261ddf2824204050b85b">cell_vis_width</link> (const <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> *cell, const <link linkend="_fort_8c_1a411e98c8a879520a2ccf789f62d10e85">f_context_t</link> *context)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1a9c241d6f1cadd55e3b1ce1f5928b9556">cell_invis_codes_width</link> (const <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> *cell, const <link linkend="_fort_8c_1a411e98c8a879520a2ccf789f62d10e85">f_context_t</link> *context)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1a4b4f366d1272078225219727401cde90">hint_height_cell</link> (const <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> *cell, const <link linkend="_fort_8c_1a411e98c8a879520a2ccf789f62d10e85">f_context_t</link> *context)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1aa406a5dc43875274fb9eaa3c941ce753">set_cell_type</link> (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> *cell, enum <link linkend="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4">f_cell_type</link> type)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> enum <link linkend="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4">f_cell_type</link> <link linkend="_fort_8c_1a5c97b97ec34e15affaed2187d36c94c4">get_cell_type</link> (const <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> *cell)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1a9f85d4d29e5835229f6127609a265c02">cell_printf</link> (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> *cell, size_t row, <link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> *cntx, size_t cod_width)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a3bde4232e71f4b585df25c0253128137">fill_cell_from_string</link> (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> *cell, const char *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1ae884baeeef1f6d0aa11118c89df4ae25">fill_cell_from_wstring</link> (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> *cell, const wchar_t *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1ae2f26d50cef40dd4f5bb349631c6eeda">fill_cell_from_buffer</link> (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> *cell, const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buf)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * <link linkend="_fort_8c_1ab4f0992198f9be12d538e0ae6080c94d">cell_get_string_buffer</link> (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> *cell)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * <link linkend="_fort_8c_1a711b5fe08dee63887c4a430eae76b29c">create_row</link> (void)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4">destroy_row</link> (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * <link linkend="_fort_8c_1a3a01711036a669b10b641d6179f72610">copy_row</link> (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * <link linkend="_fort_8c_1a234cff841d6e8bffc9955dd06d334420">split_row</link> (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row, size_t pos)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1aeb4ff36967a8e872f3d315e60d2bc4f9">ft_row_erase_range</link> (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row, size_t left, size_t right)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * <link linkend="_fort_8c_1a727e646203a4b57b987d1da7ef5fb700">create_row_from_string</link> (const char *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * <link linkend="_fort_8c_1a6bf142ab10b212be6fb4214805b98945">create_row_from_fmt_string</link> (const struct <link linkend="_structf__string__view">f_string_view</link> *fmt, va_list *va_args)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1a3d540d4463a076f4852d2ff56a7d6012">columns_in_row</link> (const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * <link linkend="_fort_8c_1a840fa27cb400833ddeb735488e1d8947">get_cell</link> (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row, size_t col)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * <link linkend="_fort_8c_1a3f99dbb688f5c24b74ed04fea920c0de">get_cell_c</link> (const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row, size_t col)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * <link linkend="_fort_8c_1a7e7238097d84a571ae3d5189a8ec47c0">get_cell_and_create_if_not_exists</link> (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row, size_t col)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * <link linkend="_fort_8c_1a40ddd32fd7bb25bdda626db532e7412b">create_cell_in_position</link> (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row, size_t col)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1ae67f055e422299c4821b1a00d5bfeb6d">swap_row</link> (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *cur_row, <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *ins_row, size_t pos)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a651c99d3ef016298fb72557264c415bf">insert_row</link> (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *cur_row, <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *ins_row, size_t pos)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1ab36a4052c23098fca6dce54d6201d96b">group_cell_number</link> (const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row, size_t master_cell_col)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1a187174d63ce94aa162d2468933cd3cbc">get_row_cell_types</link> (const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row, enum <link linkend="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4">f_cell_type</link> *types, size_t types_sz)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a66ea4a81d6bd50cb139417df40d7aba2">row_set_cell_span</link> (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row, size_t cell_column, size_t hor_span)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1a76b7a5fc469d3f72bedcefc8f97a8e58">print_row_separator</link> (<link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> *cntx, const size_t *col_width_arr, size_t cols, const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *upper_row, const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *lower_row, enum <link linkend="_fort_8c_1a114ae9015942e72d33913dbca07d18f5">f_hor_separator_pos</link> separatorPos, const <link linkend="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13">f_separator_t</link> *sep)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int <link linkend="_fort_8c_1ac95471ef7b950b73451dc4aaf3a0e6f3">snprintf_row</link> (const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> *row, <link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> *cntx, size_t *col_width_arr, size_t col_width_arr_sz, size_t row_height)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * <link linkend="_fort_8c_1ad094494ea525a6a511399b4bf8aac45c">create_row_from_wstring</link> (const wchar_t *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13">f_separator_t</link> * <link linkend="_fort_8c_1a61340feda1ea158db1bd1da1671751ad">create_separator</link> (int enabled)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1a9a6706bef6f7dae20f91a49113fc2165">destroy_separator</link> (<link linkend="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13">f_separator_t</link> *sep)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13">f_separator_t</link> * <link linkend="_fort_8c_1af3cff45d0b6bbd125b6119cfec729ed6">copy_separator</link> (<link linkend="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13">f_separator_t</link> *sep)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a7c9835a2792ffbd846c844f28e01e557">get_table_sizes</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t *rows, size_t *cols)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * <link linkend="_fort_8c_1a409d9364981e54abbb8616d9b98b4dfe">get_row</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t row)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * <link linkend="_fort_8c_1a278381cdc233b3476f2660a5a422a1f5">get_row_c</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t row)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * <link linkend="_fort_8c_1ad4906ec40fada2d7ded7846d4dd0b2bf">get_row_and_create_if_not_exists</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t row)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * <link linkend="_fort_8c_1a6855260f3c1d1da0696e5d1e652bc4ef">get_cur_str_buffer_and_create_if_not_exists</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1ac6a1014eacf8e41589fe6e7d6ffec493">table_rows_and_cols_geometry</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t **col_width_arr_p, size_t *col_width_arr_sz, size_t **row_height_arr_p, size_t *row_height_arr_sz, enum <link linkend="_fort_8c_1af04f170451a6d8600ba71c318b2b6027">f_geometry_type</link> geom)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1a70608495ec687e0f65fec1cdad97a12f">table_geometry</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t *height, size_t *width)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> <link linkend="_fort_8c_1ae8047e766a703ad17a2dcc58645eb4df">table_internal_codepoints_geometry</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t *height, size_t *width)</para>
</listitem>
            <listitem><para><link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * <link linkend="_fort_8c_1a39066bbe359e408ad6d1bb360aa0cf55">ft_create_table</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_fort_8c_1ad8cb9ed46da7455f8b6baed42a4a1d31">ft_destroy_table</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para><link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * <link linkend="_fort_8c_1a3dc4461b763ca66b2e2699a61ee99df8">ft_copy_table</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a35af71857b08488797170d7b2a15054a">ft_ln</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para>size_t <link linkend="_fort_8c_1a71a30e02111b90af7babd37d13f3e4ee">ft_cur_row</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para>size_t <link linkend="_fort_8c_1a4f3f1b331ee3637e3c8345ecb1b4ebd6">ft_cur_col</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para>void <link linkend="_fort_8c_1a6dffc742cbce46e492cd3298de467b16">ft_set_cur_cell</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t row, size_t col)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a6791222986d387c26d905691c30e095b">ft_is_empty</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para>size_t <link linkend="_fort_8c_1aa7e5d0d485d6c519198a5fe9eb706eba">ft_row_count</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para>size_t <link linkend="_fort_8c_1acb57251e9e5499b7b983509be936c1d8">ft_col_count</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a53eb304387cf4e99f0198f780bc75dc8">ft_erase_range</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t top_left_row, size_t top_left_col, size_t bottom_right_row, size_t bottom_right_col)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1aefa78da00a14db61410597df4991ea08">FT_PRINTF</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, const char *fmt,...)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1ad2fd5883b642ce927813c728fee08f84">FT_PRINTF_LN</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, const char *fmt,...)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a93dacf69774a8a84fecee3035ad7650e">ft_wprintf</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, const wchar_t *fmt,...)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a756d50513a7dbf57d2e7144802dd23f4">ft_wprintf_ln</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, const wchar_t *fmt,...)</para>
</listitem>
            <listitem><para>void <link linkend="_fort_8c_1a08dbade99a0cfc34c549f7ee29a60fe4">ft_set_default_printf_field_separator</link> (char separator)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a69052e887e05d6dc3a0891550127619b">ft_nwrite</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t count, const char *cell_content,...)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a09342b73950f97c0e73bbed2df40b48a">ft_nwrite_ln</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t count, const char *cell_content,...)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1aac28f7840d0a323ca3c4df1e6f43bdf6">ft_nwwrite</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t n, const wchar_t *cell_content,...)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a313b73c39aa6127200cd7b7fee92d8f0">ft_nwwrite_ln</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t n, const wchar_t *cell_content,...)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a53cf32548aedb54757ca598703db688c">ft_row_write</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t cols, const char *cells[])</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a49f9c909317adb1f49c0f2af1e67afeb">ft_row_write_ln</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t cols, const char *cells[])</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a16ce443f98156fd69c251c8dab9fb7ba">ft_row_wwrite</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t cols, const wchar_t *cells[])</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1abff22c6be328391a9e72e25bf0cf4d3c">ft_row_wwrite_ln</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t cols, const wchar_t *cells[])</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1ac026a41e784483319aa4c7c89a9dfe06">ft_table_write</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t rows, size_t cols, const char *table_cells[])</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1ad9219b581d29cb079847b0bfd6911271">ft_table_write_ln</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t rows, size_t cols, const char *table_cells[])</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1adb37fd79298ef7f28d9304f3aa135f08">ft_table_wwrite</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t rows, size_t cols, const wchar_t *table_cells[])</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1ac2c4cd5246efb7d713cc0ccd5dad49cf">ft_table_wwrite_ln</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t rows, size_t cols, const wchar_t *table_cells[])</para>
</listitem>
            <listitem><para>const char * <link linkend="_fort_8c_1aa80a0ba53be3e32a69b9b98478821354">ft_to_string</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para>const wchar_t * <link linkend="_fort_8c_1a03479aafea9aefc5275a02df827cb780">ft_to_wstring</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a22fc0b6196d1a9a398785e23673eeeb0">ft_add_separator</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1addb2484d7bc2a271be60cf743ae8eaeb">ft_set_default_border_style</link> (const struct <link linkend="_structft__border__style">ft_border_style</link> *style)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1aaa966b7da0ee2e2d2a93dc6a5e1ef81b">ft_set_border_style</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, const struct <link linkend="_structft__border__style">ft_border_style</link> *style)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a10dc95b3d810a0ab2bf6c90b7b8c66a4">ft_set_cell_prop</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t row, size_t col, uint32_t property, int value)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a894497fac87518023122266da59f8da1">ft_set_default_cell_prop</link> (uint32_t property, int value)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a0ebdf7b17d363037f4b0d48ce1438a6c">ft_set_default_tbl_prop</link> (uint32_t property, int value)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1ac7ff4899d39f21d4cf8948c73bbb1595">ft_set_tbl_prop</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, uint32_t property, int value)</para>
</listitem>
            <listitem><para>void <link linkend="_fort_8c_1a3477def0e7247bbccacb0c93530aaee7">ft_set_memory_funcs</link> (void *(*f_malloc)(size_t size), void(*f_free)(void *ptr))</para>
</listitem>
            <listitem><para>const char * <link linkend="_fort_8c_1ab2d62733c846a3d64dfa5a7c45d1c91b">ft_strerror</link> (int error_code)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1ae958a4787cc8fee9abb452bbced096f8">ft_set_cell_span</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t row, size_t col, size_t hor_span)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a61aec826074239282309ce1369563f64">ft_u8nwrite</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t n, const void *cell_content,...)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1a4c378ecb73c881a0793930c76a64ff41">ft_u8nwrite_ln</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, size_t n, const void *cell_content,...)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1ab60bde884315e3378ad43a751d2beba8">ft_u8printf</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, const char *fmt,...)</para>
</listitem>
            <listitem><para>int <link linkend="_fort_8c_1aba01f77855c39b8ecdd47db944429088">ft_u8printf_ln</link> (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table, const char *fmt,...)</para>
</listitem>
            <listitem><para>const void * <link linkend="_fort_8c_1add704765805a634b690a7697857171cc">ft_to_u8string</link> (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> *table)</para>
</listitem>
            <listitem><para>void <link linkend="_fort_8c_1ac19c7bf75bde46f17a954159b27724f4">ft_set_u8strwid_func</link> (int(*u8strwid)(const void *beg, const void *end, size_t *width))</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * <link linkend="_fort_8c_1a8469d6845eaf84d1fd71031e60ebad8a">create_row_from_buffer</link> (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> *buffer)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1ae289954698a8c45f5e5b8691dfb3c158">strchr_count</link> (const char *str, char ch)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1a8ca255a1bafc7d73de3e0dcc4736f992">wstrchr_count</link> (const wchar_t *str, wchar_t ch)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void * <link linkend="_fort_8c_1a80fef8e1c3794e7c888bf8d2d7fa781d">ut8next</link> (const void *str)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t <link linkend="_fort_8c_1af2542674afdd3d9ad6961fb066dd6c4d">utf8chr_count</link> (const void *str, <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> ch)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const char * <link linkend="_fort_8c_1af08984e44d4cd70d191d78d9bcc5aebe">str_n_substring_beg</link> (const char *str, char ch_separator, size_t n)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const wchar_t * <link linkend="_fort_8c_1a0bb46889515e213588fc8684f6f2ad8f">wstr_n_substring_beg</link> (const wchar_t *str, wchar_t ch_separator, size_t n)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const void * <link linkend="_fort_8c_1a645962e09bdc5a7d0159356679c3ed51">utf8_n_substring_beg</link> (const void *str, <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> ch_separator, size_t n)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1a813d4ec1a357d5ea24ab7f3abd339dfe">str_n_substring</link> (const char *str, char ch_separator, size_t n, const char **begin, const char **end)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1abf373d518201debe18cd197815ca9ac5">wstr_n_substring</link> (const wchar_t *str, wchar_t ch_separator, size_t n, const wchar_t **begin, const wchar_t **end)</para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void <link linkend="_fort_8c_1ad9fad63df44484d04f254de1a6e25e91">utf8_n_substring</link> (const void *str, <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> ch_separator, size_t n, const void **begin, const void **end)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>char <link linkend="_fort_8c_1a75ae5722df432140a46c9ff1fe069570">g_col_separator</link> = <link linkend="_fort_8c_1a3abeff93bbe13043e19c4bd8b6dd30df">FORT_DEFAULT_COL_SEPARATOR</link></para>
</listitem>
            <listitem><para>void *(* <link linkend="_fort_8c_1a792989ae317c7b690425af8179d88466">fort_malloc</link> )(size_t size) = &amp;local_malloc</para>
</listitem>
            <listitem><para>void(* <link linkend="_fort_8c_1a2a6d016d7f881874b0a6212d08514f5b">fort_free</link> )(void *ptr) = &amp;local_free</para>
</listitem>
            <listitem><para>void *(* <link linkend="_fort_8c_1ab2604d3e25cf16a7e668feb1fc0e7b37">fort_calloc</link> )(size_t nmemb, size_t size) = &amp;local_calloc</para>
</listitem>
            <listitem><para>void *(* <link linkend="_fort_8c_1aac796d096112928799fe930648dc0da4">fort_realloc</link> )(void *ptr, size_t size) = &amp;local_realloc</para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1a1551acd214a753796743eb0272395869">FORT_BASIC_STYLE</link> = <link linkend="_fort_8c_1a25b25babc27e11fbe4cfae21995881e6">BASIC_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1a18048056d8d37f0485dfc4480266b407">FORT_BASIC2_STYLE</link> = <link linkend="_fort_8c_1a84323253628c81be9d93a0d6fadc891c">BASIC2_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1ac35b24f98659298aafaac4f782b35908">FORT_SIMPLE_STYLE</link> = <link linkend="_fort_8c_1a58a32c54547e08b469930b07ec56d9d4">SIMPLE_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1afa51b0acbd3c7ce38f236fbd8accd283">FORT_PLAIN_STYLE</link> = <link linkend="_fort_8c_1ad95c8d93533ada8f96019637c188f641">PLAIN_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1ab5cfb34391ceae55c3adc0b856e2d3d1">FORT_DOT_STYLE</link> = <link linkend="_fort_8c_1a40f9b235882059f09a69c951205869fe">DOT_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1a58948e002a53e826043f3f1fd0efa626">FORT_EMPTY_STYLE</link> = <link linkend="_fort_8c_1ad19626848a66b2a7f33ae0e16db45b7f">EMPTY_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1acd0057b56b50d3772d93a58a345f8498">FORT_EMPTY2_STYLE</link> = <link linkend="_fort_8c_1a34458dc60b60037c1df5622184763bd1">EMPTY2_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1ab60c22c456490dc1c2b2581206aade7f">FORT_SOLID_STYLE</link> = <link linkend="_fort_8c_1ac551f30a3d753dbce194e2d5c50a7950">SOLID_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1afaadc6fcd0ea52e9bea97f198623dd34">FORT_SOLID_ROUND_STYLE</link> = <link linkend="_fort_8c_1adb4ab5efdfbfd2cfb08cfdb595c4f90a">SOLID_ROUND_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1ad07ecf56923564f20f54de569baa4c31">FORT_NICE_STYLE</link> = <link linkend="_fort_8c_1ad112a91d6823b6b59b1791ceb6445a93">NICE_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1a8bea0c4f43e34eccd50a38cf7cf275d9">FORT_DOUBLE_STYLE</link> = <link linkend="_fort_8c_1a6c3842c70b6f4100cd5973e7a288c2d4">DOUBLE_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1ad7b86e58f7e8a1871d31e9d36e1afe8e">FORT_DOUBLE2_STYLE</link> = <link linkend="_fort_8c_1a2977b3d23b0acedf98ddb75cfa3714c2">DOUBLE2_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1adce884980314dc4c5f6b5d19b6c9f0ae">FORT_BOLD_STYLE</link> = <link linkend="_fort_8c_1a818cdb05e2e0ee60b8693016efdcebff">BOLD_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1a2e98d54b72c590832a3d252dd43f68e7">FORT_BOLD2_STYLE</link> = <link linkend="_fort_8c_1aa6f6720b767dd4451f95654b138af84c">BOLD2_STYLE</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structfort__border__style">fort_border_style</link> <link linkend="_fort_8c_1a1ee29f5ac5af7b2100ca44d999f65493">FORT_FRAME_STYLE</link> = <link linkend="_fort_8c_1a9307749f2660d6c9ac81a0f3ae89a0de">FRAME_STYLE</link></para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a171a2ab1349903dadd4fde07a45a6ee3">fort_entire_table_properties_t</link> <link linkend="_fort_8c_1a59d265136eda43200385d8b5f04ecd2c">g_entire_table_properties</link></para>
</listitem>
            <listitem><para><link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> <link linkend="_fort_8c_1a7e383842a355b23739ccb9bb081cf543">g_table_properties</link></para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1a4566853be8c0cdf91ba9c3f50eb426d4">FT_BASIC_STYLE</link> = &amp;built_in_external_styles[0]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1ab3ed5c4f1c4f7ca26b52b668fd4717f9">FT_BASIC2_STYLE</link> = &amp;built_in_external_styles[1]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1a7581c1fec7b7c2b88f93e3445c62424d">FT_SIMPLE_STYLE</link> = &amp;built_in_external_styles[2]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1add469a34d262e6368adaa636d1cf76b7">FT_PLAIN_STYLE</link> = &amp;built_in_external_styles[3]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1a148f3f2c872531fdeca8e4ace60eb258">FT_DOT_STYLE</link> = &amp;built_in_external_styles[4]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1aa8916e07fa9a8d1f24c1e1d1e6b68838">FT_EMPTY_STYLE</link> = &amp;built_in_external_styles[5]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1a357302cc732e53c1c7049842fc0fc3c7">FT_EMPTY2_STYLE</link> = &amp;built_in_external_styles[6]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1ae4723d497ac2e6980b43ac7732e21f2d">FT_SOLID_STYLE</link> = &amp;built_in_external_styles[7]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1aedcc877521b55c87758949920ef0ee96">FT_SOLID_ROUND_STYLE</link> = &amp;built_in_external_styles[8]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1a91de4cab0e239a201fa2a7dc961b2fdc">FT_NICE_STYLE</link> = &amp;built_in_external_styles[9]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1ad0e15260ea4a4c66f0bfa2c82b889107">FT_DOUBLE_STYLE</link> = &amp;built_in_external_styles[10]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1a23314491db1204b8654f8cd610692260">FT_DOUBLE2_STYLE</link> = &amp;built_in_external_styles[11]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1af392ad3ae759382d95921e1efb652744">FT_BOLD_STYLE</link> = &amp;built_in_external_styles[12]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1a7b82fd38c92a289fc641d3666684bcd4">FT_BOLD2_STYLE</link> = &amp;built_in_external_styles[13]</para>
</listitem>
            <listitem><para>const struct <link linkend="_structft__border__style">ft_border_style</link> *const <link linkend="_fort_8c_1aef91486de193b4dfe511a992f9b02bb9">FT_FRAME_STYLE</link> = &amp;built_in_external_styles[14]</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_fort_8c_1a84323253628c81be9d93a0d6fadc891c"/><section>
    <title>BASIC2_STYLE</title>
<indexterm><primary>BASIC2_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BASIC2_STYLE</secondary></indexterm>
<para><computeroutput>#define BASIC2_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;|&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;|&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;|&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;|&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;|&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;|&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1a25b25babc27e11fbe4cfae21995881e6"/><section>
    <title>BASIC_STYLE</title>
<indexterm><primary>BASIC_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BASIC_STYLE</secondary></indexterm>
<para><computeroutput>#define BASIC_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;|&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;|&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;|&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;|&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;|&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;|&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1aa6f6720b767dd4451f95654b138af84c"/><section>
    <title>BOLD2_STYLE</title>
<indexterm><primary>BOLD2_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BOLD2_STYLE</secondary></indexterm>
<para><computeroutput>#define BOLD2_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┏&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┯&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┓&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┃&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┃&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┠&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┼&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┨&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┗&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┷&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┛&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┴&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┏&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┯&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┓&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┃&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┃&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┿&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┫&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┗&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┷&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┛&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┯&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┷&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┿&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┫&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┯&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┷&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1a818cdb05e2e0ee60b8693016efdcebff"/><section>
    <title>BOLD_STYLE</title>
<indexterm><primary>BOLD_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BOLD_STYLE</secondary></indexterm>
<para><computeroutput>#define BOLD_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┏&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┳&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┓&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┃&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┃&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┃&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┗&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┻&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┛&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┻&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┳&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┏&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┳&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┓&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┃&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┃&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┃&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╋&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┫&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┗&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┻&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┛&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┳&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┻&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╋&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┫&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┳&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┻&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01"/><section>
    <title>BOR_CHARS</title>
<indexterm><primary>BOR_CHARS</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BOR_CHARS</secondary></indexterm>
<para><computeroutput>#define BOR_CHARS   properties-&gt;border_style.border_chars</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab179ba6d458ef3bf6a3b23232a4ae582"/><section>
    <title>BUILT_IN_STYLES_SZ</title>
<indexterm><primary>BUILT_IN_STYLES_SZ</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BUILT_IN_STYLES_SZ</secondary></indexterm>
<para><computeroutput>#define BUILT_IN_STYLES_SZ   (sizeof(built_in_styles) / sizeof(built_in_styles[0]))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a36e1292dd9af86d5b74a92b4a1bad9ba"/><section>
    <title>CELL_H</title>
<indexterm><primary>CELL_H</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>CELL_H</secondary></indexterm>
<para><computeroutput>#define CELL_H</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052"/><section>
    <title>CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</title>
<indexterm><primary>CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</secondary></indexterm>
<para><computeroutput>#define CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN( statement)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;statement;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(tmp&#32;&lt;&#32;0)&#32;{\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PRINT_DEBUG_INFO&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;goto&#32;clear;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;invisible_written&#32;+=&#32;(size_t)tmp;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0)
</programlisting></section>
<anchor xml:id="_fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1"/><section>
    <title>CHCK_RSLT_ADD_TO_WRITTEN</title>
<indexterm><primary>CHCK_RSLT_ADD_TO_WRITTEN</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>CHCK_RSLT_ADD_TO_WRITTEN</secondary></indexterm>
<para><computeroutput>#define CHCK_RSLT_ADD_TO_WRITTEN( statement)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;statement;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(tmp&#32;&lt;&#32;0)&#32;{\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PRINT_DEBUG_INFO&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;goto&#32;clear;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;written&#32;+=&#32;(size_t)tmp;&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0)
</programlisting></section>
<anchor xml:id="_fort_8c_1aab06de152ddaae54d61db939ee942b20"/><section>
    <title>CHECK_NOT_NEGATIVE</title>
<indexterm><primary>CHECK_NOT_NEGATIVE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>CHECK_NOT_NEGATIVE</secondary></indexterm>
<para><computeroutput>#define CHECK_NOT_NEGATIVE( x)       do { if ((x) &lt; 0) goto fort_fail; } while (0)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aae64a8d6a29845f7f4aa2f1bc3e095dd"/><section>
    <title>DEFAULT_STR_BUF_SIZE</title>
<indexterm><primary>DEFAULT_STR_BUF_SIZE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>DEFAULT_STR_BUF_SIZE</secondary></indexterm>
<para><computeroutput>#define DEFAULT_STR_BUF_SIZE   1024</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae79893aa9b2a96292bb66404e00eddf1"/><section>
    <title>DEFAULT_VECTOR_CAPACITY</title>
<indexterm><primary>DEFAULT_VECTOR_CAPACITY</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>DEFAULT_VECTOR_CAPACITY</secondary></indexterm>
<para><computeroutput>#define DEFAULT_VECTOR_CAPACITY   10</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a40f9b235882059f09a69c951205869fe"/><section>
    <title>DOT_STYLE</title>
<indexterm><primary>DOT_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>DOT_STYLE</secondary></indexterm>
<para><computeroutput>#define DOT_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;.&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;:&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1a2977b3d23b0acedf98ddb75cfa3714c2"/><section>
    <title>DOUBLE2_STYLE</title>
<indexterm><primary>DOUBLE2_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>DOUBLE2_STYLE</secondary></indexterm>
<para><computeroutput>#define DOUBLE2_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╔&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╤&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╗&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╟&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┼&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╢&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╚&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╧&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╝&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;├&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┤&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┴&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╔&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╤&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╗&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╠&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╪&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╣&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╚&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╧&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╝&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;├&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╤&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┤&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╧&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╠&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╪&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╣&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╤&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╧&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1a6c3842c70b6f4100cd5973e7a288c2d4"/><section>
    <title>DOUBLE_STYLE</title>
<indexterm><primary>DOUBLE_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>DOUBLE_STYLE</secondary></indexterm>
<para><computeroutput>#define DOUBLE_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╔&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╦&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╗&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╚&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╩&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╝&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┻&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┳&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╔&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╦&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╗&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╠&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╣&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╚&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╩&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╝&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╦&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╩&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╠&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╣&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╦&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╩&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1a34458dc60b60037c1df5622184763bd1"/><section>
    <title>EMPTY2_STYLE</title>
<indexterm><primary>EMPTY2_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>EMPTY2_STYLE</secondary></indexterm>
<para><computeroutput>#define EMPTY2_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1ad19626848a66b2a7f33ae0e16db45b7f"/><section>
    <title>EMPTY_STYLE</title>
<indexterm><primary>EMPTY_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>EMPTY_STYLE</secondary></indexterm>
<para><computeroutput>#define EMPTY_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1a292448526dc3d314e5573c19c45b8fa2"/><section>
    <title>F_CALLOC</title>
<indexterm><primary>F_CALLOC</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>F_CALLOC</secondary></indexterm>
<para><computeroutput>#define F_CALLOC   <link linkend="_fort_8c_1ab2604d3e25cf16a7e668feb1fc0e7b37">fort_calloc</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1aa17e5e6fd8cb7909a873af4fc842541c"/><section>
    <title>F_CREATE</title>
<indexterm><primary>F_CREATE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>F_CREATE</secondary></indexterm>
<para><computeroutput>#define F_CREATE( type)   ((type *)<link linkend="_fort_8c_1a292448526dc3d314e5573c19c45b8fa2">F_CALLOC</link>(sizeof(type), 1))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1add196043a1d5633940925baaba3bae1d"/><section>
    <title>F_FREE</title>
<indexterm><primary>F_FREE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>F_FREE</secondary></indexterm>
<para><computeroutput>#define F_FREE   <link linkend="_fort_8c_1a2a6d016d7f881874b0a6212d08514f5b">fort_free</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a62d5e3834ceef771f05d50e71ed45c95"/><section>
    <title>F_MALLOC</title>
<indexterm><primary>F_MALLOC</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>F_MALLOC</secondary></indexterm>
<para><computeroutput>#define F_MALLOC   <link linkend="_fort_8c_1a792989ae317c7b690425af8179d88466">fort_malloc</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a51798cbeb535b232ea9905516cfcdb4c"/><section>
    <title>F_REALLOC</title>
<indexterm><primary>F_REALLOC</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>F_REALLOC</secondary></indexterm>
<para><computeroutput>#define F_REALLOC   <link linkend="_fort_8c_1aac796d096112928799fe930648dc0da4">fort_realloc</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a6b396d87fd0d7c48631754638ecf17f2"/><section>
    <title>F_STRDUP</title>
<indexterm><primary>F_STRDUP</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>F_STRDUP</secondary></indexterm>
<para><computeroutput>#define F_STRDUP   <link linkend="_fort_8c_1ac8f846ccc1871712ed5d17b25dfbff5c">fort_strdup</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a273fee17f4143f522a4cb3c67a05aa1a"/><section>
    <title>F_UTF8DUP</title>
<indexterm><primary>F_UTF8DUP</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>F_UTF8DUP</secondary></indexterm>
<para><computeroutput>#define F_UTF8DUP   <link linkend="_fort_8c_1a157235d1e84617035dd6a2b6891d1190">utf8dup</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a62f4a36b4f123d858a97f079fda2834f"/><section>
    <title>F_WCSDUP</title>
<indexterm><primary>F_WCSDUP</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>F_WCSDUP</secondary></indexterm>
<para><computeroutput>#define F_WCSDUP   <link linkend="_fort_8c_1afbb101e4e75dbefa32076dc1f8a07762">fort_wcsdup</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1ac22fb60cd88090750f4536ce213d7076"/><section>
    <title>FORT_COL_SEPARATOR_LENGTH</title>
<indexterm><primary>FORT_COL_SEPARATOR_LENGTH</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_COL_SEPARATOR_LENGTH</secondary></indexterm>
<para><computeroutput>#define FORT_COL_SEPARATOR_LENGTH   1</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a3abeff93bbe13043e19c4bd8b6dd30df"/><section>
    <title>FORT_DEFAULT_COL_SEPARATOR</title>
<indexterm><primary>FORT_DEFAULT_COL_SEPARATOR</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_DEFAULT_COL_SEPARATOR</secondary></indexterm>
<para><computeroutput>#define FORT_DEFAULT_COL_SEPARATOR   &apos;|&apos;</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a782d0c6b09259c09d312e4c80d6cabf2"/><section>
    <title>FORT_IMPL_H</title>
<indexterm><primary>FORT_IMPL_H</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_IMPL_H</secondary></indexterm>
<para><computeroutput>#define FORT_IMPL_H</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a55b6b4dcb81ff007fa598b3d373ad704"/><section>
    <title>FORT_UNUSED</title>
<indexterm><primary>FORT_UNUSED</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_UNUSED</secondary></indexterm>
<para><computeroutput>#define FORT_UNUSED   __attribute__((unused))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a9307749f2660d6c9ac81a0f3ae89a0de"/><section>
    <title>FRAME_STYLE</title>
<indexterm><primary>FRAME_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FRAME_STYLE</secondary></indexterm>
<para><computeroutput>#define FRAME_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;▛&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▀&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▀&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▜&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;▌&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┃&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▐&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;▙&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▄&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▄&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▟&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;▛&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▀&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▀&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▜&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;▌&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┃&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▐&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;▌&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╋&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▐&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;▙&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▄&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▄&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▟&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;▌&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;━&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╋&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;▐&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╋&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╋&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1a77ac3a2ee8d69df58f2d239db35dd0e8"/><section>
    <title>FT_AMALGAMED_SOURCE</title>
<indexterm><primary>FT_AMALGAMED_SOURCE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_AMALGAMED_SOURCE</secondary></indexterm>
<para><computeroutput>#define FT_AMALGAMED_SOURCE   /* Macros to make internal libfort functions static */</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a784abddef87cd2430529e032c3d8213e"/><section>
    <title>FT_CHECK</title>
<indexterm><primary>FT_CHECK</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_CHECK</secondary></indexterm>
<para><computeroutput>#define FT_CHECK( statement)</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;<emphasis role="keywordflow">do</emphasis>&#32;{&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;tmp&#32;=&#32;statement;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(tmp&#32;&lt;&#32;0)&#32;{\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PRINT_DEBUG_INFO&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;goto&#32;clear;&#32;\
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;\
&#32;&#32;&#32;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0)
</programlisting></section>
<anchor xml:id="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e"/><section>
    <title>FT_INTERNAL</title>
<indexterm><primary>FT_INTERNAL</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_INTERNAL</secondary></indexterm>
<para><computeroutput>#define FT_INTERNAL   static</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a0474dfa1c9848f892832d4babf0e3cd8"/><section>
    <title>FT_NEWLINE</title>
<indexterm><primary>FT_NEWLINE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_NEWLINE</secondary></indexterm>
<para><computeroutput>#define FT_NEWLINE   &quot;\n&quot;</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a1c5df369af358a17b90f4b5022121a4c"/><section>
    <title>FT_PRINTF</title>
<indexterm><primary>FT_PRINTF</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_PRINTF</secondary></indexterm>
<para><computeroutput>#define FT_PRINTF   ft_printf_impl</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a50fa22fc7abbe64934bf11438e7c25e6"/><section>
    <title>FT_PRINTF_LN</title>
<indexterm><primary>FT_PRINTF_LN</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_PRINTF_LN</secondary></indexterm>
<para><computeroutput>#define FT_PRINTF_LN   ft_printf_ln_impl</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae70aa0f62e3542d3ed398ec21f6cbacb"/><section>
    <title>FT_RESET_COLOR</title>
<indexterm><primary>FT_RESET_COLOR</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_RESET_COLOR</secondary></indexterm>
<para><computeroutput>#define FT_RESET_COLOR   &quot;\033[0m&quot;</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748"/><section>
    <title>FT_SPACE</title>
<indexterm><primary>FT_SPACE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_SPACE</secondary></indexterm>
<para><computeroutput>#define FT_SPACE   &quot; &quot;</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab9b04e78482e306f63fff64eb3d4e19e"/><section>
    <title>FT_STR_2_CAT</title>
<indexterm><primary>FT_STR_2_CAT</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_STR_2_CAT</secondary></indexterm>
<para><computeroutput>#define FT_STR_2_CAT( arg1,  arg2)       <link linkend="_fort_8c_1a9ba61413675b31346681731eaa8d9040">FT_STR_2_CAT_</link>(arg1, arg2)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a9ba61413675b31346681731eaa8d9040"/><section>
    <title>FT_STR_2_CAT_</title>
<indexterm><primary>FT_STR_2_CAT_</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_STR_2_CAT_</secondary></indexterm>
<para><computeroutput>#define FT_STR_2_CAT_( arg1,  arg2)       arg1##arg2</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a87b95d888583f9c786462fd44b9b3ab5"/><section>
    <title>H_BOR_CHARS</title>
<indexterm><primary>H_BOR_CHARS</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>H_BOR_CHARS</secondary></indexterm>
<para><computeroutput>#define H_BOR_CHARS   properties-&gt;border_style.header_border_chars</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a55a8000149f7d5b04b4b07cc44c4dc79"/><section>
    <title>INVALID_VEC_INDEX</title>
<indexterm><primary>INVALID_VEC_INDEX</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>INVALID_VEC_INDEX</secondary></indexterm>
<para><computeroutput>#define INVALID_VEC_INDEX   ((size_t) -1)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f"/><section>
    <title>MAX</title>
<indexterm><primary>MAX</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>MAX</secondary></indexterm>
<para><computeroutput>#define MAX( a,  b)   ((a) &gt; (b) ? (a) : (b))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a3acffbd305ee72dcd4593c0d8af64a4f"/><section>
    <title>MIN</title>
<indexterm><primary>MIN</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>MIN</secondary></indexterm>
<para><computeroutput>#define MIN( a,  b)   ((a) &lt; (b) ? (a) : (b))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ad112a91d6823b6b59b1791ceb6445a93"/><section>
    <title>NICE_STYLE</title>
<indexterm><primary>NICE_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>NICE_STYLE</secondary></indexterm>
<para><computeroutput>#define NICE_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╔&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╦&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╗&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╚&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╩&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╝&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┻&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┳&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╔&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╦&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╗&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;║&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╠&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╣&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╚&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;═&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╩&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╝&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╦&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┣&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╩&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╟&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╫&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╢&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╥&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╨&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1ad95c8d93533ada8f96019637c188f641"/><section>
    <title>PLAIN_STYLE</title>
<indexterm><primary>PLAIN_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>PLAIN_STYLE</secondary></indexterm>
<para><computeroutput>#define PLAIN_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1a13b182782de774d46e704f91a526e4f6"/><section>
    <title>PRINT_DEBUG_INFO</title>
<indexterm><primary>PRINT_DEBUG_INFO</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>PRINT_DEBUG_INFO</secondary></indexterm>
<para><computeroutput>#define PRINT_DEBUG_INFO</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a89b695ac3096c15aeaa67152e30c003d"/><section>
    <title>PROP_IS_SET</title>
<indexterm><primary>PROP_IS_SET</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>PROP_IS_SET</secondary></indexterm>
<para><computeroutput>#define PROP_IS_SET( ft_props,  property)   ((ft_props) &amp; (property))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a292665f9426d532a04d9db2f47f8cc1f"/><section>
    <title>PROP_SET</title>
<indexterm><primary>PROP_SET</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>PROP_SET</secondary></indexterm>
<para><computeroutput>#define PROP_SET( ft_props,  property)   ((ft_props) |=(property))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a5c2b099178ba4f1e6df87d1ff8f05bb1"/><section>
    <title>PROP_UNSET</title>
<indexterm><primary>PROP_UNSET</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>PROP_UNSET</secondary></indexterm>
<para><computeroutput>#define PROP_UNSET( ft_props,  property)   ((ft_props) &amp;= ~((uint32_t)(property)))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae2c58bc6eb17515036e8c0037e9922a7"/><section>
    <title>PROPERTIES_H</title>
<indexterm><primary>PROPERTIES_H</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>PROPERTIES_H</secondary></indexterm>
<para><computeroutput>#define PROPERTIES_H</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a80fb826a684cf3f0d306b22aa100ddac"/><section>
    <title>RIGHT</title>
<indexterm><primary>RIGHT</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>RIGHT</secondary></indexterm>
<para><computeroutput>#define RIGHT   (padding_right + extra_right)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aff5bd921faea144bda420627350e0b5c"/><section>
    <title>ROW_H</title>
<indexterm><primary>ROW_H</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ROW_H</secondary></indexterm>
<para><computeroutput>#define ROW_H</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a71c4b4e49c32a083b3e41812e5acb5aa"/><section>
    <title>SEP_CHARS</title>
<indexterm><primary>SEP_CHARS</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>SEP_CHARS</secondary></indexterm>
<para><computeroutput>#define SEP_CHARS   properties-&gt;border_style.separator_chars</computeroutput></para></section>
<anchor xml:id="_fort_8c_1afcf11092c559c10a0fbab216b54e6aee"/><section>
    <title>SHEREDOM_UTF8_H_INCLUDED</title>
<indexterm><primary>SHEREDOM_UTF8_H_INCLUDED</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>SHEREDOM_UTF8_H_INCLUDED</secondary></indexterm>
<para><computeroutput>#define SHEREDOM_UTF8_H_INCLUDED</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a58a32c54547e08b469930b07ec56d9d4"/><section>
    <title>SIMPLE_STYLE</title>
<indexterm><primary>SIMPLE_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>SIMPLE_STYLE</secondary></indexterm>
<para><computeroutput>#define SIMPLE_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;\0&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1adb4ab5efdfbfd2cfb08cfdb595c4f90a"/><section>
    <title>SOLID_ROUND_STYLE</title>
<indexterm><primary>SOLID_ROUND_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>SOLID_ROUND_STYLE</secondary></indexterm>
<para><computeroutput>#define SOLID_ROUND_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╭&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╮&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╰&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┴&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╯&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╭&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╮&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;├&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┼&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┤&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;╰&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┴&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;╯&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┼&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┼&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┴&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;├&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┼&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┤&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┴&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1ac551f30a3d753dbce194e2d5c50a7950"/><section>
    <title>SOLID_STYLE</title>
<indexterm><primary>SOLID_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>SOLID_STYLE</secondary></indexterm>
<para><computeroutput>#define SOLID_STYLE</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered">&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┌&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┐&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;└&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┴&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┘&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;header_border_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┌&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┐&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;│&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;├&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┼&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┤&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;└&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┴&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┘&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┼&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┼&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┴&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;separator_chars&#32;*/</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;{&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;├&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;─&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┼&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┤&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;┬&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;┴&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
&#32;&#32;&#32;&#32;},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;\
}
</programlisting></section>
<anchor xml:id="_fort_8c_1a1acd15654d584ab951286e96248e5c9c"/><section>
    <title>STRCHR<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>STRCHR</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>STRCHR</secondary></indexterm>
<para><computeroutput>#define STRCHR   strchr</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a1acd15654d584ab951286e96248e5c9c"/><section>
    <title>STRCHR<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>STRCHR</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>STRCHR</secondary></indexterm>
<para><computeroutput>#define STRCHR   wcschr</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a8c50b95728a093bfac504b2dde6415e7"/><section>
    <title>STRING_BUFFER_H</title>
<indexterm><primary>STRING_BUFFER_H</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>STRING_BUFFER_H</secondary></indexterm>
<para><computeroutput>#define STRING_BUFFER_H</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab2a7e3ca6ca07a330a9fe4d74d714b66"/><section>
    <title>TABLE_H</title>
<indexterm><primary>TABLE_H</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>TABLE_H</secondary></indexterm>
<para><computeroutput>#define TABLE_H</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2"/><section>
    <title>TEXT_STYLE_TAG_MAX_SIZE</title>
<indexterm><primary>TEXT_STYLE_TAG_MAX_SIZE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>TEXT_STYLE_TAG_MAX_SIZE</secondary></indexterm>
<para><computeroutput>#define TEXT_STYLE_TAG_MAX_SIZE   (64 * 2)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab55660b1711634f2daf0089672257c2d"/><section>
    <title>TOTAL_WRITTEN</title>
<indexterm><primary>TOTAL_WRITTEN</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>TOTAL_WRITTEN</secondary></indexterm>
<para><computeroutput>#define TOTAL_WRITTEN   (written + invisible_written)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a8ca2d33aab5f2ed9b84085b0122dd175"/><section>
    <title>UNIQUE_NAME</title>
<indexterm><primary>UNIQUE_NAME</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>UNIQUE_NAME</secondary></indexterm>
<para><computeroutput>#define UNIQUE_NAME( prefix)       <link linkend="_fort_8c_1a43f37b1674d09a7d903cd745f13692af">UNIQUE_NAME_</link>(prefix)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a43f37b1674d09a7d903cd745f13692af"/><section>
    <title>UNIQUE_NAME_</title>
<indexterm><primary>UNIQUE_NAME_</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>UNIQUE_NAME_</secondary></indexterm>
<para><computeroutput>#define UNIQUE_NAME_( prefix)       <link linkend="_fort_8c_1ab9b04e78482e306f63fff64eb3d4e19e">FT_STR_2_CAT</link>(prefix,__COUNTER__)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a1dfc09e89d646bcb4852592debb5c8e5"/><section>
    <title>UNIVERSAL_RESET_TAG</title>
<indexterm><primary>UNIVERSAL_RESET_TAG</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>UNIVERSAL_RESET_TAG</secondary></indexterm>
<para><computeroutput>#define UNIVERSAL_RESET_TAG   &quot;\033[0m&quot;</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a44ee00ffddf6c842e84ca729c401a90e"/><section>
    <title>utf8_nonnull</title>
<indexterm><primary>utf8_nonnull</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8_nonnull</secondary></indexterm>
<para><computeroutput>#define utf8_nonnull</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6"/><section>
    <title>utf8_null</title>
<indexterm><primary>utf8_null</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8_null</secondary></indexterm>
<para><computeroutput>#define utf8_null   0</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a43095c668493542f53935a041bf4f30b"/><section>
    <title>utf8_pure</title>
<indexterm><primary>utf8_pure</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8_pure</secondary></indexterm>
<para><computeroutput>#define utf8_pure</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914"/><section>
    <title>utf8_restrict</title>
<indexterm><primary>utf8_restrict</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8_restrict</secondary></indexterm>
<para><computeroutput>#define utf8_restrict</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05"/><section>
    <title>utf8_weak</title>
<indexterm><primary>utf8_weak</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8_weak</secondary></indexterm>
<para><computeroutput>#define utf8_weak   inline</computeroutput></para></section>
<anchor xml:id="_fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2"/><section>
    <title>VECTOR_AT</title>
<indexterm><primary>VECTOR_AT</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>VECTOR_AT</secondary></indexterm>
<para><computeroutput>#define VECTOR_AT( vector,  pos,  data_type)       *(data_type *)<link linkend="_fort_8c_1abb033777a1a8c0b490f14541bc0332fa">vector_at</link>((vector), (pos))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a9d43ef6423e42a608c3e28e9fef6d053"/><section>
    <title>VECTOR_AT_C</title>
<indexterm><primary>VECTOR_AT_C</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>VECTOR_AT_C</secondary></indexterm>
<para><computeroutput>#define VECTOR_AT_C( vector,  pos,  const_data_type)       *(const_data_type *)<link linkend="_fort_8c_1a91644aa66c95f718abb2f0ad731c604b">vector_at_c</link>((vector), (pos))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a0e56521e7ab51dee5a9705e070406265"/><section>
    <title>VECTOR_H</title>
<indexterm><primary>VECTOR_H</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>VECTOR_H</secondary></indexterm>
<para><computeroutput>#define VECTOR_H</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a372768dcf109902d738ffaedff0faeac"/><section>
    <title>WCS_SIZE</title>
<indexterm><primary>WCS_SIZE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>WCS_SIZE</secondary></indexterm>
<para><computeroutput>#define WCS_SIZE   64</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a35d88a67057477f326a6c3d4bfa69902"/><section>
    <title>WCWIDTH_H</title>
<indexterm><primary>WCWIDTH_H</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>WCWIDTH_H</secondary></indexterm>
<para><computeroutput>#define WCWIDTH_H</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a31acf3be2a5038d72e7e9f08311e4f8a"/><section>
    <title>WRITE_CELL_STYLE_TAG</title>
<indexterm><primary>WRITE_CELL_STYLE_TAG</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>WRITE_CELL_STYLE_TAG</secondary></indexterm>
<para><computeroutput>#define WRITE_CELL_STYLE_TAG   <link linkend="_fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</link>(<link linkend="_fort_8c_1a3e1f24169bad7166d9c73022ce44461f">print_n_strings</link>(cntx, 1, cell_style_tag))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a572a6ca19b88baf9e4d32d270f04b6a8"/><section>
    <title>WRITE_CONTENT_STYLE_TAG</title>
<indexterm><primary>WRITE_CONTENT_STYLE_TAG</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>WRITE_CONTENT_STYLE_TAG</secondary></indexterm>
<para><computeroutput>#define WRITE_CONTENT_STYLE_TAG   <link linkend="_fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</link>(<link linkend="_fort_8c_1a3e1f24169bad7166d9c73022ce44461f">print_n_strings</link>(cntx, 1, content_style_tag))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1af9efa523650f6451fd7a1ed157f1511f"/><section>
    <title>WRITE_RESET_CELL_STYLE_TAG</title>
<indexterm><primary>WRITE_RESET_CELL_STYLE_TAG</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>WRITE_RESET_CELL_STYLE_TAG</secondary></indexterm>
<para><computeroutput>#define WRITE_RESET_CELL_STYLE_TAG   <link linkend="_fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</link>(<link linkend="_fort_8c_1a3e1f24169bad7166d9c73022ce44461f">print_n_strings</link>(cntx, 1, reset_cell_style_tag))</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a4dd3781a70086c75737fd2c6aafdc299"/><section>
    <title>WRITE_RESET_CONTENT_STYLE_TAG</title>
<indexterm><primary>WRITE_RESET_CONTENT_STYLE_TAG</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>WRITE_RESET_CONTENT_STYLE_TAG</secondary></indexterm>
<para><computeroutput>#define WRITE_RESET_CONTENT_STYLE_TAG   <link linkend="_fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</link>(<link linkend="_fort_8c_1a3e1f24169bad7166d9c73022ce44461f">print_n_strings</link>(cntx, 1, reset_content_style_tag))</computeroutput></para></section>
</section>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104"/><section>
    <title>f_cell_prop_container_t</title>
<indexterm><primary>f_cell_prop_container_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_cell_prop_container_t</secondary></indexterm>
<para><computeroutput>typedef <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> <link linkend="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104">f_cell_prop_container_t</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a1dd5de14b38f8ea6034cd4574d2c5122"/><section>
    <title>f_cell_props_t</title>
<indexterm><primary>f_cell_props_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_cell_props_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structf__cell__props">f_cell_props</link> <link linkend="_fort_8c_1a1dd5de14b38f8ea6034cd4574d2c5122">f_cell_props_t</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4"/><section>
    <title>f_cell_t</title>
<indexterm><primary>f_cell_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_cell_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structf__cell">f_cell</link> <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a411e98c8a879520a2ccf789f62d10e85"/><section>
    <title>f_context_t</title>
<indexterm><primary>f_context_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_context_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structf__context">f_context</link> <link linkend="_fort_8c_1a411e98c8a879520a2ccf789f62d10e85">f_context_t</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1afb581d944956bc8e61433744691e7efd"/><section>
    <title>f_conv_context_t</title>
<indexterm><primary>f_conv_context_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_conv_context_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structf__conv__context">f_conv_context</link> <link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b"/><section>
    <title>f_row_t</title>
<indexterm><primary>f_row_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_row_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structf__row">f_row</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13"/><section>
    <title>f_separator_t</title>
<indexterm><primary>f_separator_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_separator_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structf__separator">f_separator</link> <link linkend="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13">f_separator_t</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58"/><section>
    <title>f_status</title>
<indexterm><primary>f_status</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_status</secondary></indexterm>
<para><computeroutput>typedef int <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88"/><section>
    <title>f_string_buffer_t</title>
<indexterm><primary>f_string_buffer_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_string_buffer_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structf__string__buffer">f_string_buffer</link> <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a5e5d59807caf98214d772b0952b8439c"/><section>
    <title>f_string_view_t</title>
<indexterm><primary>f_string_view_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_string_view_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structf__string__view">f_string_view</link> <link linkend="_fort_8c_1a5e5d59807caf98214d772b0952b8439c">f_string_view_t</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9"/><section>
    <title>f_table_properties_t</title>
<indexterm><primary>f_table_properties_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_table_properties_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structf__table__properties">f_table_properties</link> <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0"/><section>
    <title>f_vector_t</title>
<indexterm><primary>f_vector_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_vector_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structf__vector">f_vector</link> <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a171a2ab1349903dadd4fde07a45a6ee3"/><section>
    <title>fort_entire_table_properties_t</title>
<indexterm><primary>fort_entire_table_properties_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fort_entire_table_properties_t</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structfort__entire__table__properties">fort_entire_table_properties</link> <link linkend="_fort_8c_1a171a2ab1349903dadd4fde07a45a6ee3">fort_entire_table_properties_t</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94"/><section>
    <title>utf8_int32_t</title>
<indexterm><primary>utf8_int32_t</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8_int32_t</secondary></indexterm>
<para><computeroutput>typedef int32_t <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link></computeroutput></para></section>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85"/><section>
    <title>f_bool</title>
<indexterm><primary>f_bool</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_bool</secondary></indexterm>
<para><computeroutput>enum <link linkend="_fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85">f_bool</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>F_FALSE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>F_FALSE</secondary></indexterm>
<anchor xml:id="_fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85a7d1c5eb5c19fe2c534aa6fb6605927e4"/>F_FALSE</entry><entry></entry></row><row><entry><indexterm><primary>F_TRUE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>F_TRUE</secondary></indexterm>
<anchor xml:id="_fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85a42654a58e5b0bffec1ba32aef39af469"/>F_TRUE</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29"/><section>
    <title>f_border_item_pos</title>
<indexterm><primary>f_border_item_pos</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_border_item_pos</secondary></indexterm>
<para><computeroutput>enum <link linkend="_fort_8c_1aeb26e59c445583e1b4924086f650bc29">f_border_item_pos</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>TL_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>TL_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a1ec0255840e5ab81cff847681a715b08"/>TL_bip</entry><entry></entry></row><row><entry><indexterm><primary>TT_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>TT_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a17451858f18bd17d08f1b9c9677f6fe4"/>TT_bip</entry><entry></entry></row><row><entry><indexterm><primary>TV_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>TV_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a649b973e5f4975036c8271fc94243b3b"/>TV_bip</entry><entry></entry></row><row><entry><indexterm><primary>TR_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>TR_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a22d4696994865fe8121ec409e148bfac"/>TR_bip</entry><entry></entry></row><row><entry><indexterm><primary>LL_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>LL_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a889a1c24be63ae17b128192d9dec2d3a"/>LL_bip</entry><entry></entry></row><row><entry><indexterm><primary>IV_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>IV_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29aad183d45427b545df2fd25ed9ecccc8c"/>IV_bip</entry><entry></entry></row><row><entry><indexterm><primary>RR_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>RR_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a062e9c55d54121d574a4b8f244c2d964"/>RR_bip</entry><entry></entry></row><row><entry><indexterm><primary>LH_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>LH_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a39a100939802cb577416e58d02938056"/>LH_bip</entry><entry></entry></row><row><entry><indexterm><primary>IH_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>IH_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a11e0bf08571e805873e7e8c2772e1445"/>IH_bip</entry><entry></entry></row><row><entry><indexterm><primary>II_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>II_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a1496ce55ebf0dc1c90c6f8abd60ea272"/>II_bip</entry><entry></entry></row><row><entry><indexterm><primary>RH_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>RH_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a8284e2f20ee28045694355f5c74bc1a5"/>RH_bip</entry><entry></entry></row><row><entry><indexterm><primary>BL_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BL_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29ab1ee2d1f7d29465d2d1f9c6a4c2037b6"/>BL_bip</entry><entry></entry></row><row><entry><indexterm><primary>BB_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BB_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29ae48f39d06e91b11b022fda6d6d373472"/>BB_bip</entry><entry></entry></row><row><entry><indexterm><primary>BV_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BV_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29ac101b442110364e7401b8b2d61730517"/>BV_bip</entry><entry></entry></row><row><entry><indexterm><primary>BR_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BR_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a675b8ffdf47d8160e8ab3f5493b97677"/>BR_bip</entry><entry></entry></row><row><entry><indexterm><primary>LI_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>LI_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a6e524723eac5b695737b627d74ac77fb"/>LI_bip</entry><entry></entry></row><row><entry><indexterm><primary>TI_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>TI_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a9c128d27d24141f9c2df703a42521835"/>TI_bip</entry><entry></entry></row><row><entry><indexterm><primary>RI_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>RI_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a0841d0344e52968b3d6dd1bfee6f98d2"/>RI_bip</entry><entry></entry></row><row><entry><indexterm><primary>BI_bip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BI_bip</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a46945f957ff717cbf501e5a59d0f8e1d"/>BI_bip</entry><entry></entry></row><row><entry><indexterm><primary>BORDER_ITEM_POS_SIZE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BORDER_ITEM_POS_SIZE</secondary></indexterm>
<anchor xml:id="_fort_8c_1aeb26e59c445583e1b4924086f650bc29a56d2b99637c35906282c659f4edb5652"/>BORDER_ITEM_POS_SIZE</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4"/><section>
    <title>f_cell_type</title>
<indexterm><primary>f_cell_type</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_cell_type</secondary></indexterm>
<para><computeroutput>enum <link linkend="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4">f_cell_type</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>COMMON_CELL</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>COMMON_CELL</secondary></indexterm>
<anchor xml:id="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ad051cc4f661b418b4adfd1e7ffcd67dc"/>COMMON_CELL</entry><entry></entry></row><row><entry><indexterm><primary>GROUP_MASTER_CELL</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>GROUP_MASTER_CELL</secondary></indexterm>
<anchor xml:id="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab322ed6278dd2cdc3389001b26a2c1de"/>GROUP_MASTER_CELL</entry><entry></entry></row><row><entry><indexterm><primary>GROUP_SLAVE_CELL</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>GROUP_SLAVE_CELL</secondary></indexterm>
<anchor xml:id="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab23f446b03b09980fb5bcb456f168d86"/>GROUP_SLAVE_CELL</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_fort_8c_1af04f170451a6d8600ba71c318b2b6027"/><section>
    <title>f_geometry_type</title>
<indexterm><primary>f_geometry_type</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_geometry_type</secondary></indexterm>
<para><computeroutput>enum <link linkend="_fort_8c_1af04f170451a6d8600ba71c318b2b6027">f_geometry_type</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>VISIBLE_GEOMETRY</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>VISIBLE_GEOMETRY</secondary></indexterm>
<anchor xml:id="_fort_8c_1af04f170451a6d8600ba71c318b2b6027a649c4250d469605327eeddcfb36bf296"/>VISIBLE_GEOMETRY</entry><entry></entry></row><row><entry><indexterm><primary>INTERN_REPR_GEOMETRY</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>INTERN_REPR_GEOMETRY</secondary></indexterm>
<anchor xml:id="_fort_8c_1af04f170451a6d8600ba71c318b2b6027ae4419d33092d617c9f99d6ac234e7a33"/>INTERN_REPR_GEOMETRY</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_fort_8c_1a637b893c0bf4371273b9746c62b58879"/><section>
    <title>f_get_policy</title>
<indexterm><primary>f_get_policy</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_get_policy</secondary></indexterm>
<para><computeroutput>enum <link linkend="_fort_8c_1a637b893c0bf4371273b9746c62b58879">f_get_policy</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>CREATE_ON_NULL</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>CREATE_ON_NULL</secondary></indexterm>
<anchor xml:id="_fort_8c_1a637b893c0bf4371273b9746c62b58879ae156f80eb433e523b7dc5d66da39f77a"/>CREATE_ON_NULL</entry><entry></entry></row><row><entry><indexterm><primary>DONT_CREATE_ON_NULL</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>DONT_CREATE_ON_NULL</secondary></indexterm>
<anchor xml:id="_fort_8c_1a637b893c0bf4371273b9746c62b58879a6314d3c3f6e06cf754889e1774caecfc"/>DONT_CREATE_ON_NULL</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_fort_8c_1a114ae9015942e72d33913dbca07d18f5"/><section>
    <title>f_hor_separator_pos</title>
<indexterm><primary>f_hor_separator_pos</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_hor_separator_pos</secondary></indexterm>
<para><computeroutput>enum <link linkend="_fort_8c_1a114ae9015942e72d33913dbca07d18f5">f_hor_separator_pos</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>TOP_SEPARATOR</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>TOP_SEPARATOR</secondary></indexterm>
<anchor xml:id="_fort_8c_1a114ae9015942e72d33913dbca07d18f5a20da53267127001ec3320abe91fa783e"/>TOP_SEPARATOR</entry><entry></entry></row><row><entry><indexterm><primary>INSIDE_SEPARATOR</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>INSIDE_SEPARATOR</secondary></indexterm>
<anchor xml:id="_fort_8c_1a114ae9015942e72d33913dbca07d18f5a23c6c5d09adaa5a3c4176c0b67263769"/>INSIDE_SEPARATOR</entry><entry></entry></row><row><entry><indexterm><primary>BOTTOM_SEPARATOR</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BOTTOM_SEPARATOR</secondary></indexterm>
<anchor xml:id="_fort_8c_1a114ae9015942e72d33913dbca07d18f5a84ba29422768fd8057cd7d8f3239e59c"/>BOTTOM_SEPARATOR</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35"/><section>
    <title>f_separator_item_pos</title>
<indexterm><primary>f_separator_item_pos</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_separator_item_pos</secondary></indexterm>
<para><computeroutput>enum <link linkend="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35">f_separator_item_pos</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>LH_sip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>LH_sip</secondary></indexterm>
<anchor xml:id="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35af5bdf3707d8c0c144baceb9b432b080b"/>LH_sip</entry><entry></entry></row><row><entry><indexterm><primary>IH_sip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>IH_sip</secondary></indexterm>
<anchor xml:id="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35a6edb298364e9b2705453e4fd3d764894"/>IH_sip</entry><entry></entry></row><row><entry><indexterm><primary>II_sip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>II_sip</secondary></indexterm>
<anchor xml:id="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35ae795b75c17ff1dc6b1d7a94e0db120e6"/>II_sip</entry><entry></entry></row><row><entry><indexterm><primary>RH_sip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>RH_sip</secondary></indexterm>
<anchor xml:id="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35a9ef36a4ef68f74f53f7153992ac80c2e"/>RH_sip</entry><entry></entry></row><row><entry><indexterm><primary>TI_sip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>TI_sip</secondary></indexterm>
<anchor xml:id="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35a4dd526ac15d2f95dda29b58a7969250c"/>TI_sip</entry><entry></entry></row><row><entry><indexterm><primary>BI_sip</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>BI_sip</secondary></indexterm>
<anchor xml:id="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35af5c00304dc6ed19e75613b993f3b8510"/>BI_sip</entry><entry></entry></row><row><entry><indexterm><primary>SEPARATOR_ITEM_POS_SIZE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>SEPARATOR_ITEM_POS_SIZE</secondary></indexterm>
<anchor xml:id="_fort_8c_1a50e65894fa1562b8b5c3a78899509c35a1011b2e48e304397b1f174798923779c"/>SEPARATOR_ITEM_POS_SIZE</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
<anchor xml:id="_fort_8c_1aac6eaac439cc49e9382b6c239aa310aa"/><section>
    <title>f_string_type</title>
<indexterm><primary>f_string_type</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>f_string_type</secondary></indexterm>
<para><computeroutput>enum <link linkend="_fort_8c_1aac6eaac439cc49e9382b6c239aa310aa">f_string_type</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>CHAR_BUF</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>CHAR_BUF</secondary></indexterm>
<anchor xml:id="_fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033"/>CHAR_BUF</entry><entry></entry></row><row><entry><indexterm><primary>W_CHAR_BUF</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>W_CHAR_BUF</secondary></indexterm>
<anchor xml:id="_fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810"/>W_CHAR_BUF</entry><entry></entry></row><row><entry><indexterm><primary>UTF8_BUF</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>UTF8_BUF</secondary></indexterm>
<anchor xml:id="_fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882"/>UTF8_BUF</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_fort_8c_1a3d109493b9707163dc60dbe7f413f95a"/><section>
    <title>buffer_check_align()</title>
<indexterm><primary>buffer_check_align</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>buffer_check_align</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int buffer_check_align (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1af8c64e48cffecc6fb8e5220a8feff523"/><section>
    <title>buffer_get_data()</title>
<indexterm><primary>buffer_get_data</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>buffer_get_data</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void * buffer_get_data (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a0140429a7259d97aaa5711a8b89c5860"/><section>
    <title>buffer_printf()</title>
<indexterm><primary>buffer_printf</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>buffer_printf</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int buffer_printf (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer, size_t buffer_row, <link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> * cntx, size_t cod_width, const char * content_style_tag, const char * reset_content_style_tag)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a0e13f6f3d616f84fa0bd43e23d604034"/><section>
    <title>buffer_set_u8strwid_func()</title>
<indexterm><primary>buffer_set_u8strwid_func</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>buffer_set_u8strwid_func</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void buffer_set_u8strwid_func (int(*)(const void *beg, const void *end, size_t *width) u8strwid)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a85ef6eb340328e5a1d6f4140b2dc8a6b"/><section>
    <title>buffer_text_visible_height()</title>
<indexterm><primary>buffer_text_visible_height</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>buffer_text_visible_height</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t buffer_text_visible_height (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1adee94920422c7175c9dedd31fb9e5364"/><section>
    <title>buffer_text_visible_width()</title>
<indexterm><primary>buffer_text_visible_width</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>buffer_text_visible_width</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t buffer_text_visible_width (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab4f0992198f9be12d538e0ae6080c94d"/><section>
    <title>cell_get_string_buffer()</title>
<indexterm><primary>cell_get_string_buffer</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>cell_get_string_buffer</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * cell_get_string_buffer (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * cell)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a9c241d6f1cadd55e3b1ce1f5928b9556"/><section>
    <title>cell_invis_codes_width()</title>
<indexterm><primary>cell_invis_codes_width</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>cell_invis_codes_width</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t cell_invis_codes_width (const <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * cell, const <link linkend="_fort_8c_1a411e98c8a879520a2ccf789f62d10e85">f_context_t</link> * context)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a9f85d4d29e5835229f6127609a265c02"/><section>
    <title>cell_printf()</title>
<indexterm><primary>cell_printf</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>cell_printf</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int cell_printf (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * cell, size_t row, <link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> * cntx, size_t cod_width)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a1934466a7efe261ddf2824204050b85b"/><section>
    <title>cell_vis_width()</title>
<indexterm><primary>cell_vis_width</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>cell_vis_width</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t cell_vis_width (const <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * cell, const <link linkend="_fort_8c_1a411e98c8a879520a2ccf789f62d10e85">f_context_t</link> * context)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a2ce14d6f2ae9343c8d2e4eb6d4fc0775"/><section>
    <title>cget_cell_prop()</title>
<indexterm><primary>cget_cell_prop</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>cget_cell_prop</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const <link linkend="_fort_8c_1a1dd5de14b38f8ea6034cd4574d2c5122">f_cell_props_t</link> * cget_cell_prop (const <link linkend="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104">f_cell_prop_container_t</link> * cont, size_t row, size_t col)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a3d540d4463a076f4852d2ff56a7d6012"/><section>
    <title>columns_in_row()</title>
<indexterm><primary>columns_in_row</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>columns_in_row</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t columns_in_row (const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a236a2db76f5d456475a97dc2726ca7b3"/><section>
    <title>copy_cell()</title>
<indexterm><primary>copy_cell</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>copy_cell</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * copy_cell (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * cell)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a3a01711036a669b10b641d6179f72610"/><section>
    <title>copy_row()</title>
<indexterm><primary>copy_row</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>copy_row</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * copy_row (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1af3cff45d0b6bbd125b6119cfec729ed6"/><section>
    <title>copy_separator()</title>
<indexterm><primary>copy_separator</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>copy_separator</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13">f_separator_t</link> * copy_separator (<link linkend="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13">f_separator_t</link> * sep)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a414a5ce9226b67140bda7955ff1b21e5"/><section>
    <title>copy_string_buffer()</title>
<indexterm><primary>copy_string_buffer</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>copy_string_buffer</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * copy_string_buffer (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a60b1666a1271172355ced7927d5f5eff"/><section>
    <title>copy_table_properties()</title>
<indexterm><primary>copy_table_properties</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>copy_table_properties</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> * copy_table_properties (const <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> * property)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e"/><section>
    <title>create_cell()</title>
<indexterm><primary>create_cell</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>create_cell</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * create_cell (void )</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a40ddd32fd7bb25bdda626db532e7412b"/><section>
    <title>create_cell_in_position()</title>
<indexterm><primary>create_cell_in_position</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>create_cell_in_position</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * create_cell_in_position (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row, size_t col)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab75c8f1799cd2f51d264bfc38e85971c"/><section>
    <title>create_cell_prop_container()</title>
<indexterm><primary>create_cell_prop_container</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>create_cell_prop_container</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104">f_cell_prop_container_t</link> * create_cell_prop_container (void )</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a711b5fe08dee63887c4a430eae76b29c"/><section>
    <title>create_row()</title>
<indexterm><primary>create_row</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>create_row</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * create_row (void )</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a8469d6845eaf84d1fd71031e60ebad8a"/><section>
    <title>create_row_from_buffer()</title>
<indexterm><primary>create_row_from_buffer</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>create_row_from_buffer</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * create_row_from_buffer (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a6bf142ab10b212be6fb4214805b98945"/><section>
    <title>create_row_from_fmt_string()</title>
<indexterm><primary>create_row_from_fmt_string</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>create_row_from_fmt_string</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * create_row_from_fmt_string (const struct <link linkend="_structf__string__view">f_string_view</link> * fmt, va_list * va_args)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a727e646203a4b57b987d1da7ef5fb700"/><section>
    <title>create_row_from_string()</title>
<indexterm><primary>create_row_from_string</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>create_row_from_string</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * create_row_from_string (const char * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ad094494ea525a6a511399b4bf8aac45c"/><section>
    <title>create_row_from_wstring()</title>
<indexterm><primary>create_row_from_wstring</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>create_row_from_wstring</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * create_row_from_wstring (const wchar_t * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a61340feda1ea158db1bd1da1671751ad"/><section>
    <title>create_separator()</title>
<indexterm><primary>create_separator</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>create_separator</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13">f_separator_t</link> * create_separator (int enabled)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ac940e33b846028d55c174b9f7a2164f5"/><section>
    <title>create_string_buffer()</title>
<indexterm><primary>create_string_buffer</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>create_string_buffer</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * create_string_buffer (size_t number_of_chars, enum <link linkend="_fort_8c_1aac6eaac439cc49e9382b6c239aa310aa">f_string_type</link> type)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1acd24714fffb2ff7c987d049e7485b7ff"/><section>
    <title>create_table_properties()</title>
<indexterm><primary>create_table_properties</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>create_table_properties</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> * create_table_properties (void )</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a06be2f0a19611886237dcde275f8d678"/><section>
    <title>create_vector()</title>
<indexterm><primary>create_vector</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>create_vector</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * create_vector (size_t item_size, size_t capacity)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a941e7d7921fd2ca180894fe481af986b"/><section>
    <title>destroy_cell()</title>
<indexterm><primary>destroy_cell</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>destroy_cell</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void destroy_cell (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * cell)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a2266ed2c80b2571032776541bfa14174"/><section>
    <title>destroy_cell_prop_container()</title>
<indexterm><primary>destroy_cell_prop_container</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>destroy_cell_prop_container</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void destroy_cell_prop_container (<link linkend="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104">f_cell_prop_container_t</link> * cont)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4"/><section>
    <title>destroy_row()</title>
<indexterm><primary>destroy_row</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>destroy_row</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void destroy_row (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a9a6706bef6f7dae20f91a49113fc2165"/><section>
    <title>destroy_separator()</title>
<indexterm><primary>destroy_separator</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>destroy_separator</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void destroy_separator (<link linkend="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13">f_separator_t</link> * sep)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aa2c482e66f3237521dbdfbab4211f434"/><section>
    <title>destroy_string_buffer()</title>
<indexterm><primary>destroy_string_buffer</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>destroy_string_buffer</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void destroy_string_buffer (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a375c0af4b424ea5ae6bada04698665d5"/><section>
    <title>destroy_table_properties()</title>
<indexterm><primary>destroy_table_properties</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>destroy_table_properties</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void destroy_table_properties (<link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> * properties)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76"/><section>
    <title>destroy_vector()</title>
<indexterm><primary>destroy_vector</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>destroy_vector</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void destroy_vector (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * vector)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a97269d36ab50d310bd99d9949d14489e"/><section>
    <title>fill_buffer_from_string()</title>
<indexterm><primary>fill_buffer_from_string</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fill_buffer_from_string</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> fill_buffer_from_string (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer, const char * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a026f474e0d6b4c90c792a8833dde496c"/><section>
    <title>fill_buffer_from_u8string()</title>
<indexterm><primary>fill_buffer_from_u8string</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fill_buffer_from_u8string</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> fill_buffer_from_u8string (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer, const void * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a8fc30ad88cfc706d2a96e04f1cd159e9"/><section>
    <title>fill_buffer_from_wstring()</title>
<indexterm><primary>fill_buffer_from_wstring</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fill_buffer_from_wstring</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> fill_buffer_from_wstring (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer, const wchar_t * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae2f26d50cef40dd4f5bb349631c6eeda"/><section>
    <title>fill_cell_from_buffer()</title>
<indexterm><primary>fill_cell_from_buffer</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fill_cell_from_buffer</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> fill_cell_from_buffer (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * cell, const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buf)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a3bde4232e71f4b585df25c0253128137"/><section>
    <title>fill_cell_from_string()</title>
<indexterm><primary>fill_cell_from_string</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fill_cell_from_string</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> fill_cell_from_string (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * cell, const char * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae884baeeef1f6d0aa11118c89df4ae25"/><section>
    <title>fill_cell_from_wstring()</title>
<indexterm><primary>fill_cell_from_wstring</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fill_cell_from_wstring</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> fill_cell_from_wstring (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * cell, const wchar_t * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ac8f846ccc1871712ed5d17b25dfbff5c"/><section>
    <title>fort_strdup()</title>
<indexterm><primary>fort_strdup</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fort_strdup</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> char * fort_strdup (const char * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1afbb101e4e75dbefa32076dc1f8a07762"/><section>
    <title>fort_wcsdup()</title>
<indexterm><primary>fort_wcsdup</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fort_wcsdup</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> wchar_t * fort_wcsdup (const wchar_t * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a22fc0b6196d1a9a398785e23673eeeb0"/><section>
    <title>ft_add_separator()</title>
<indexterm><primary>ft_add_separator</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_add_separator</secondary></indexterm>
<para><computeroutput>int ft_add_separator (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para>
<para>Add separator after the current row.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Formatted table. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; separator was added.</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1acb57251e9e5499b7b983509be936c1d8"/><section>
    <title>ft_col_count()</title>
<indexterm><primary>ft_col_count</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_col_count</secondary></indexterm>
<para><computeroutput>size_t ft_col_count (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para>
<para>Get number of columns in the table.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Number of columns in the table. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a3dc4461b763ca66b2e2699a61ee99df8"/><section>
    <title>ft_copy_table()</title>
<indexterm><primary>ft_copy_table</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_copy_table</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * ft_copy_table (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para>
<para>Copy formatted table.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table previousley created with ft_create_table. If table is a null pointer, the function returns null. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The pointer to the new allocated ft_table_t, on success. NULL on error. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a39066bbe359e408ad6d1bb360aa0cf55"/><section>
    <title>ft_create_table()</title>
<indexterm><primary>ft_create_table</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_create_table</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * ft_create_table (void )</computeroutput></para>
<para>Create formatted table.</para>

<para><formalpara><title>Returns</title>

<para>The pointer to the new allocated ft_table_t, on success. NULL on error. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a4f3f1b331ee3637e3c8345ecb1b4ebd6"/><section>
    <title>ft_cur_col()</title>
<indexterm><primary>ft_cur_col</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_cur_col</secondary></indexterm>
<para><computeroutput>size_t ft_cur_col (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para>
<para>Get column number of the current cell.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Column number of the current cell. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a71a30e02111b90af7babd37d13f3e4ee"/><section>
    <title>ft_cur_row()</title>
<indexterm><primary>ft_cur_row</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_cur_row</secondary></indexterm>
<para><computeroutput>size_t ft_cur_row (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para>
<para>Get row number of the current cell.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Row number of the current cell. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1ad8cb9ed46da7455f8b6baed42a4a1d31"/><section>
    <title>ft_destroy_table()</title>
<indexterm><primary>ft_destroy_table</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_destroy_table</secondary></indexterm>
<para><computeroutput>void ft_destroy_table (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para>
<para>Destroy formatted table.</para>

<para>Destroy formatted table and free all resources allocated during table creation and work with it.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table previousley created with ft_create_table. If table is a null pointer, the function does nothing. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_fort_8c_1a53eb304387cf4e99f0198f780bc75dc8"/><section>
    <title>ft_erase_range()</title>
<indexterm><primary>ft_erase_range</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_erase_range</secondary></indexterm>
<para><computeroutput>int ft_erase_range (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t top_left_row, size_t top_left_col, size_t bottom_right_row, size_t bottom_right_col)</computeroutput></para>
<para>Erase range of cells.</para>

<para>Range of cells is determined by 2 points (top-left and bottom-right) (both ends are included).</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                            <row>
<entry>top_left_row</entry><entry>
<para>Row number of the top left cell in the range. </para>
</entry>
                            </row>
                            <row>
<entry>top_left_col</entry><entry>
<para>Column number of the top left cell in the range. </para>
</entry>
                            </row>
                            <row>
<entry>bottom_right_row</entry><entry>
<para>Row number of the bottom right cell in the range. </para>
</entry>
                            </row>
                            <row>
<entry>bottom_right_col</entry><entry>
<para>Column number of the bottom right cell in the range. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0 - Operation was successfully implemented</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a6791222986d387c26d905691c30e095b"/><section>
    <title>ft_is_empty()</title>
<indexterm><primary>ft_is_empty</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_is_empty</secondary></indexterm>
<para><computeroutput>int ft_is_empty (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para>
<para>Check if table is empty.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to the table. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>1 - table is empty 0 - some data has been inserted </para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a35af71857b08488797170d7b2a15054a"/><section>
    <title>ft_ln()</title>
<indexterm><primary>ft_ln</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_ln</secondary></indexterm>
<para><computeroutput>int ft_ln (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para>
<para>Move current position to the first cell of the next line(row).</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; data were written</para>
</listitem><listitem>
<para>(&lt;0): In case of error. </para>
</listitem></itemizedlist>
</para>
</formalpara>
<note><title>Note</title>

<para>This function can fail only in case FT_STRATEGY_INSERT adding strategy was set for the table. </para>
</note>
</para>
</section>
<anchor xml:id="_fort_8c_1adc410898e7cdde87f19083209df4bb02"/><section>
    <title>ft_nprint()</title>
<indexterm><primary>ft_nprint</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_nprint</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int ft_nprint (<link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> * cntx, const char * str, size_t strlen)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a3e59820002f722488daba674c799bb97"/><section>
    <title>ft_nu8print()</title>
<indexterm><primary>ft_nu8print</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_nu8print</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int ft_nu8print (<link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> * cntx, const void * beg, const void * end)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1af86c27e4ebf239a915a36b6972d1d607"/><section>
    <title>ft_nwprint()</title>
<indexterm><primary>ft_nwprint</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_nwprint</secondary></indexterm>
<para><computeroutput>int ft_nwprint (<link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> * cntx, const wchar_t * str, size_t strlen)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a69052e887e05d6dc3a0891550127619b"/><section>
    <title>ft_nwrite()</title>
<indexterm><primary>ft_nwrite</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_nwrite</secondary></indexterm>
<para><computeroutput>int ft_nwrite (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t count, const char * cell_content,  ...)</computeroutput></para>
<para>Write specified number of strings to the table.</para>

<para>Write specified number of strings to the same number of consecutive cells in the current row.</para>

<para><note><title>Note</title>

<para>In most cases it is more preferable to use MACRO <link linkend="_fort_8h_1aeb1059360e481caef1d2dcced5d5b646">ft_write</link> instead of <link linkend="_fort_8h_1a69052e887e05d6dc3a0891550127619b">ft_nwrite</link>, which is more safe (<link linkend="_fort_8h_1aeb1059360e481caef1d2dcced5d5b646">ft_write</link> automatically counts the number of string arguments and at compile check that all passed arguments are strings).</para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                            <row>
<entry>count</entry><entry>
<para>Number of strings to write. </para>
</entry>
                            </row>
                            <row>
<entry>cell_content</entry><entry>
<para>First string to write. </para>
</entry>
                            </row>
                            <row>
<entry>...</entry><entry>
<para>Other strings to write. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; data were written</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a09342b73950f97c0e73bbed2df40b48a"/><section>
    <title>ft_nwrite_ln()</title>
<indexterm><primary>ft_nwrite_ln</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_nwrite_ln</secondary></indexterm>
<para><computeroutput>int ft_nwrite_ln (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t count, const char * cell_content,  ...)</computeroutput></para>
<para>Write specified number of strings to the table and go to the next line.</para>

<para>Write specified number of strings to the same number of consecutive cells in the current row and move current position to the first cell of the next line(row).</para>

<para><note><title>Note</title>

<para>In most cases it is more preferable to use MACRO <link linkend="_fort_8h_1aeb1059360e481caef1d2dcced5d5b646">ft_write</link> instead of <link linkend="_fort_8h_1a69052e887e05d6dc3a0891550127619b">ft_nwrite</link>, which is more safe (<link linkend="_fort_8h_1aeb1059360e481caef1d2dcced5d5b646">ft_write</link> automatically counts the number of string arguments and at compile check that all passed arguments are strings).</para>
</note>

                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                            <row>
<entry>count</entry><entry>
<para>Number of strings to write. </para>
</entry>
                            </row>
                            <row>
<entry>cell_content</entry><entry>
<para>First string to write. </para>
</entry>
                            </row>
                            <row>
<entry>...</entry><entry>
<para>Other strings to write. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; data were written</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1aac28f7840d0a323ca3c4df1e6f43bdf6"/><section>
    <title>ft_nwwrite()</title>
<indexterm><primary>ft_nwwrite</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_nwwrite</secondary></indexterm>
<para><computeroutput>int ft_nwwrite (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t n, const wchar_t * cell_content,  ...)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a313b73c39aa6127200cd7b7fee92d8f0"/><section>
    <title>ft_nwwrite_ln()</title>
<indexterm><primary>ft_nwwrite_ln</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_nwwrite_ln</secondary></indexterm>
<para><computeroutput>int ft_nwwrite_ln (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t n, const wchar_t * cell_content,  ...)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aefa78da00a14db61410597df4991ea08"/><section>
    <title>FT_PRINTF()</title>
<indexterm><primary>FT_PRINTF</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_PRINTF</secondary></indexterm>
<para><computeroutput>int FT_PRINTF (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ad2fd5883b642ce927813c728fee08f84"/><section>
    <title>FT_PRINTF_LN()</title>
<indexterm><primary>FT_PRINTF_LN</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_PRINTF_LN</secondary></indexterm>
<para><computeroutput>int FT_PRINTF_LN (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aa7e5d0d485d6c519198a5fe9eb706eba"/><section>
    <title>ft_row_count()</title>
<indexterm><primary>ft_row_count</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_row_count</secondary></indexterm>
<para><computeroutput>size_t ft_row_count (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para>
<para>Get number of rows in the table.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Number of rows in the table. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1aeb4ff36967a8e872f3d315e60d2bc4f9"/><section>
    <title>ft_row_erase_range()</title>
<indexterm><primary>ft_row_erase_range</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_row_erase_range</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int ft_row_erase_range (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row, size_t left, size_t right)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a53cf32548aedb54757ca598703db688c"/><section>
    <title>ft_row_write()</title>
<indexterm><primary>ft_row_write</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_row_write</secondary></indexterm>
<para><computeroutput>int ft_row_write (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t cols, const char * row_cells[])</computeroutput></para>
<para>Write strings from the array to the table.</para>

<para>Write specified number of strings from the array to the same number of consecutive cells in the current row.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                            <row>
<entry>cols</entry><entry>
<para>Number of elements in row_cells. </para>
</entry>
                            </row>
                            <row>
<entry>row_cells</entry><entry>
<para>Array of strings to write. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; data were written</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a49f9c909317adb1f49c0f2af1e67afeb"/><section>
    <title>ft_row_write_ln()</title>
<indexterm><primary>ft_row_write_ln</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_row_write_ln</secondary></indexterm>
<para><computeroutput>int ft_row_write_ln (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t cols, const char * row_cells[])</computeroutput></para>
<para>Write strings from the array to the table and go to the next line.</para>

<para>Write specified number of strings from the array to the same number of consecutive cells in the current row and move current position to the first cell of the next line(row).</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                            <row>
<entry>cols</entry><entry>
<para>Number of elements in row_cells. </para>
</entry>
                            </row>
                            <row>
<entry>row_cells</entry><entry>
<para>Array of strings to write. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; data were written</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a16ce443f98156fd69c251c8dab9fb7ba"/><section>
    <title>ft_row_wwrite()</title>
<indexterm><primary>ft_row_wwrite</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_row_wwrite</secondary></indexterm>
<para><computeroutput>int ft_row_wwrite (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t cols, const wchar_t * cells[])</computeroutput></para></section>
<anchor xml:id="_fort_8c_1abff22c6be328391a9e72e25bf0cf4d3c"/><section>
    <title>ft_row_wwrite_ln()</title>
<indexterm><primary>ft_row_wwrite_ln</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_row_wwrite_ln</secondary></indexterm>
<para><computeroutput>int ft_row_wwrite_ln (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t cols, const wchar_t * cells[])</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aaa966b7da0ee2e2d2a93dc6a5e1ef81b"/><section>
    <title>ft_set_border_style()</title>
<indexterm><primary>ft_set_border_style</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_set_border_style</secondary></indexterm>
<para><computeroutput>int ft_set_border_style (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, const struct <link linkend="_structft__border__style">ft_border_style</link> * style)</computeroutput></para>
<para>Set border style for the table.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>A pointer to the ft_table_t structure. </para>
</entry>
                            </row>
                            <row>
<entry>style</entry><entry>
<para>Pointer to border style. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; table border style was changed.</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a10dc95b3d810a0ab2bf6c90b7b8c66a4"/><section>
    <title>ft_set_cell_prop()</title>
<indexterm><primary>ft_set_cell_prop</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_set_cell_prop</secondary></indexterm>
<para><computeroutput>int ft_set_cell_prop (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t row, size_t col, uint32_t property, int value)</computeroutput></para>
<para>Set property for the specified cell of the table.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>A pointer to the ft_table_t structure. </para>
</entry>
                            </row>
                            <row>
<entry>row</entry><entry>
<para>Cell row. </para>
</entry>
                            </row>
                            <row>
<entry>col</entry><entry>
<para>Cell column. </para>
</entry>
                            </row>
                            <row>
<entry>property</entry><entry>
<para>Cell property identifier. </para>
</entry>
                            </row>
                            <row>
<entry>value</entry><entry>
<para>Cell property value. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; cell property was changed.</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1ae958a4787cc8fee9abb452bbced096f8"/><section>
    <title>ft_set_cell_span()</title>
<indexterm><primary>ft_set_cell_span</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_set_cell_span</secondary></indexterm>
<para><computeroutput>int ft_set_cell_span (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t row, size_t col, size_t hor_span)</computeroutput></para>
<para>Set column span for the specified cell of the table.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>A pointer to the ft_table_t structure. </para>
</entry>
                            </row>
                            <row>
<entry>row</entry><entry>
<para>Cell row. </para>
</entry>
                            </row>
                            <row>
<entry>col</entry><entry>
<para>Cell column. </para>
</entry>
                            </row>
                            <row>
<entry>hor_span</entry><entry>
<para>Column span. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; cell span was changed.</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a6dffc742cbce46e492cd3298de467b16"/><section>
    <title>ft_set_cur_cell()</title>
<indexterm><primary>ft_set_cur_cell</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_set_cur_cell</secondary></indexterm>
<para><computeroutput>void ft_set_cur_cell (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t row, size_t col)</computeroutput></para>
<para>Set current cell position.</para>

<para>Current cell - cell that will be edited with all modifiing functions (ft_printf, ft_write ...).</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                            <row>
<entry>row</entry><entry>
<para>New row number for the current cell. </para>
</entry>
                            </row>
                            <row>
<entry>col</entry><entry>
<para>New row number for the current cell. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_fort_8c_1addb2484d7bc2a271be60cf743ae8eaeb"/><section>
    <title>ft_set_default_border_style()</title>
<indexterm><primary>ft_set_default_border_style</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_set_default_border_style</secondary></indexterm>
<para><computeroutput>int ft_set_default_border_style (const struct <link linkend="_structft__border__style">ft_border_style</link> * style)</computeroutput></para>
<para>Set default border style for all new formatted tables.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>style</entry><entry>
<para>Pointer to border style. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; default border style was changed.</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a894497fac87518023122266da59f8da1"/><section>
    <title>ft_set_default_cell_prop()</title>
<indexterm><primary>ft_set_default_cell_prop</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_set_default_cell_prop</secondary></indexterm>
<para><computeroutput>int ft_set_default_cell_prop (uint32_t property, int value)</computeroutput></para>
<para>Set default cell property for all new formatted tables.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>property</entry><entry>
<para>Cell property identifier. </para>
</entry>
                            </row>
                            <row>
<entry>value</entry><entry>
<para>Cell property value. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; default cell property was changed.</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a08dbade99a0cfc34c549f7ee29a60fe4"/><section>
    <title>ft_set_default_printf_field_separator()</title>
<indexterm><primary>ft_set_default_printf_field_separator</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_set_default_printf_field_separator</secondary></indexterm>
<para><computeroutput>void ft_set_default_printf_field_separator (char separator)</computeroutput></para>
<para>Set field separator for <computeroutput><link linkend="_">ft_printf</link></computeroutput>, <computeroutput><link linkend="_">ft_printf_ln</link></computeroutput> (default separator is &apos;|&apos;).</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>separator</entry><entry>
<para>New separator. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_fort_8c_1a0ebdf7b17d363037f4b0d48ce1438a6c"/><section>
    <title>ft_set_default_tbl_prop()</title>
<indexterm><primary>ft_set_default_tbl_prop</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_set_default_tbl_prop</secondary></indexterm>
<para><computeroutput>int ft_set_default_tbl_prop (uint32_t property, int value)</computeroutput></para>
<para>Set default table property.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>property</entry><entry>
<para>Table property identifier. </para>
</entry>
                            </row>
                            <row>
<entry>value</entry><entry>
<para>Table property value. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; default table property was changed.</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1a3477def0e7247bbccacb0c93530aaee7"/><section>
    <title>ft_set_memory_funcs()</title>
<indexterm><primary>ft_set_memory_funcs</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_set_memory_funcs</secondary></indexterm>
<para><computeroutput>void ft_set_memory_funcs (void *(*)(size_t size) f_malloc, void(*)(void *ptr) f_free)</computeroutput></para>
<para>Set functions for memory allocation and deallocation to be used instead of standard ones.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>f_malloc</entry><entry>
<para>Pointer to a function for memory allocation that should be used instead of malloc. </para>
</entry>
                            </row>
                            <row>
<entry>f_free</entry><entry>
<para>Pointer to a function for memory deallocation that should be used instead of free. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>To return memory allocation/deallocation functions to their standard values set f_malloc and f_free to NULL. </para>
</note>
</para>
</section>
<anchor xml:id="_fort_8c_1ac7ff4899d39f21d4cf8948c73bbb1595"/><section>
    <title>ft_set_tbl_prop()</title>
<indexterm><primary>ft_set_tbl_prop</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_set_tbl_prop</secondary></indexterm>
<para><computeroutput>int ft_set_tbl_prop (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, uint32_t property, int value)</computeroutput></para>
<para>Set table property.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>A pointer to the ft_table_t structure. </para>
</entry>
                            </row>
                            <row>
<entry>property</entry><entry>
<para>Table property identifier. </para>
</entry>
                            </row>
                            <row>
<entry>value</entry><entry>
<para>Table property value. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; default table property was changed.</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1ac19c7bf75bde46f17a954159b27724f4"/><section>
    <title>ft_set_u8strwid_func()</title>
<indexterm><primary>ft_set_u8strwid_func</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_set_u8strwid_func</secondary></indexterm>
<para><computeroutput>void ft_set_u8strwid_func (int(*)(const void *beg, const void *end, size_t *width) u8strwid)</computeroutput></para>
<para>Set custom function to compute visible width of UTF-8 string.</para>

<para>libfort internally has a very simple logic to compute visible width of UTF-8 strings. It considers that each codepoint will occupy one position on the terminal in case of monowidth font (some east asians wide and fullwidth characters (see <link xlink:href="http://www.unicode.org/reports/tr11/tr11-33.html">http://www.unicode.org/reports/tr11/tr11-33.html</link>) will occupy 2 positions). This logic is very simple and covers wide range of cases. But obviously there a lot of cases when it is not sufficient. In such cases user should use some external libraries and provide an appropriate function to libfort.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>u8strwid</entry><entry>
<para>User provided function to evaluate width of UTF-8 string ( beg - start of UTF-8 string, end - end of UTF-8 string (not included), width - pointer to the result). If function succeed it should return 0, otherwise some non- zero value. If function returns nonzero value libfort fallbacks to default internal algorithm. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_fort_8c_1ab2d62733c846a3d64dfa5a7c45d1c91b"/><section>
    <title>ft_strerror()</title>
<indexterm><primary>ft_strerror</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_strerror</secondary></indexterm>
<para><computeroutput>const char * ft_strerror (int error_code)</computeroutput></para>
<para>Return string describing the <computeroutput>error_code</computeroutput>.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>error_code</entry><entry>
<para>Error code returned by the library. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>String describing the error. </para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1ac026a41e784483319aa4c7c89a9dfe06"/><section>
    <title>ft_table_write()</title>
<indexterm><primary>ft_table_write</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_table_write</secondary></indexterm>
<para><computeroutput>int ft_table_write (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t rows, size_t cols, const char * table_cells[])</computeroutput></para>
<para>Write strings from the 2D array to the table.</para>

<para>Write specified number of strings from the 2D array to the formatted table.</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                            <row>
<entry>rows</entry><entry>
<para>Number of rows in the 2D array. </para>
</entry>
                            </row>
                            <row>
<entry>cols</entry><entry>
<para>Number of columns in the 2D array. </para>
</entry>
                            </row>
                            <row>
<entry>table_cells</entry><entry>
<para>2D array of strings to write. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; data were written</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1ad9219b581d29cb079847b0bfd6911271"/><section>
    <title>ft_table_write_ln()</title>
<indexterm><primary>ft_table_write_ln</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_table_write_ln</secondary></indexterm>
<para><computeroutput>int ft_table_write_ln (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t rows, size_t cols, const char * table_cells[])</computeroutput></para>
<para>Write strings from the 2D array to the table and go to the next line.</para>

<para>Write specified number of strings from the 2D array to the formatted table and move current position to the first cell of the next line(row).</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Pointer to formatted table. </para>
</entry>
                            </row>
                            <row>
<entry>rows</entry><entry>
<para>Number of rows in the 2D array. </para>
</entry>
                            </row>
                            <row>
<entry>cols</entry><entry>
<para>Number of columns in the 2D array. </para>
</entry>
                            </row>
                            <row>
<entry>table_cells</entry><entry>
<para>2D array of strings to write. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>0: Success; data were written</para>
</listitem><listitem>
<para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1adb37fd79298ef7f28d9304f3aa135f08"/><section>
    <title>ft_table_wwrite()</title>
<indexterm><primary>ft_table_wwrite</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_table_wwrite</secondary></indexterm>
<para><computeroutput>int ft_table_wwrite (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t rows, size_t cols, const wchar_t * table_cells[])</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ac2c4cd5246efb7d713cc0ccd5dad49cf"/><section>
    <title>ft_table_wwrite_ln()</title>
<indexterm><primary>ft_table_wwrite_ln</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_table_wwrite_ln</secondary></indexterm>
<para><computeroutput>int ft_table_wwrite_ln (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t rows, size_t cols, const wchar_t * table_cells[])</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aa80a0ba53be3e32a69b9b98478821354"/><section>
    <title>ft_to_string()</title>
<indexterm><primary>ft_to_string</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_to_string</secondary></indexterm>
<para><computeroutput>const char * ft_to_string (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para>
<para>Convert table to string representation.</para>

<para>ft_table_t has ownership of the returned pointer. So there is no need to free it. To take ownership user should explicitly copy the returned string with strdup or similar functions.</para>

<para>Returned pointer may be later invalidated by:<itemizedlist>
<listitem>
<para>Calling ft_destroy_table;</para>
</listitem><listitem>
<para>Other invocations of ft_to_string.</para>
</listitem></itemizedlist>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>table</entry><entry>
<para>Formatted table. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><itemizedlist>
<listitem>
<para>The pointer to the string representation of formatted table, on success.</para>
</listitem><listitem>
<para>NULL on error. </para>
</listitem></itemizedlist>
</para>
</formalpara>
</para>
</section>
<anchor xml:id="_fort_8c_1add704765805a634b690a7697857171cc"/><section>
    <title>ft_to_u8string()</title>
<indexterm><primary>ft_to_u8string</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_to_u8string</secondary></indexterm>
<para><computeroutput>const void * ft_to_u8string (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a03479aafea9aefc5275a02df827cb780"/><section>
    <title>ft_to_wstring()</title>
<indexterm><primary>ft_to_wstring</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_to_wstring</secondary></indexterm>
<para><computeroutput>const wchar_t * ft_to_wstring (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a61aec826074239282309ce1369563f64"/><section>
    <title>ft_u8nwrite()</title>
<indexterm><primary>ft_u8nwrite</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_u8nwrite</secondary></indexterm>
<para><computeroutput>int ft_u8nwrite (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t n, const void * cell_content,  ...)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a4c378ecb73c881a0793930c76a64ff41"/><section>
    <title>ft_u8nwrite_ln()</title>
<indexterm><primary>ft_u8nwrite_ln</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_u8nwrite_ln</secondary></indexterm>
<para><computeroutput>int ft_u8nwrite_ln (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t n, const void * cell_content,  ...)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab60bde884315e3378ad43a751d2beba8"/><section>
    <title>ft_u8printf()</title>
<indexterm><primary>ft_u8printf</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_u8printf</secondary></indexterm>
<para><computeroutput>int ft_u8printf (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aba01f77855c39b8ecdd47db944429088"/><section>
    <title>ft_u8printf_ln()</title>
<indexterm><primary>ft_u8printf_ln</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_u8printf_ln</secondary></indexterm>
<para><computeroutput>int ft_u8printf_ln (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, const char * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a93dacf69774a8a84fecee3035ad7650e"/><section>
    <title>ft_wprintf()</title>
<indexterm><primary>ft_wprintf</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_wprintf</secondary></indexterm>
<para><computeroutput>int ft_wprintf (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, const wchar_t * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a756d50513a7dbf57d2e7144802dd23f4"/><section>
    <title>ft_wprintf_ln()</title>
<indexterm><primary>ft_wprintf_ln</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ft_wprintf_ln</secondary></indexterm>
<para><computeroutput>int ft_wprintf_ln (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, const wchar_t * fmt,  ...)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a840fa27cb400833ddeb735488e1d8947"/><section>
    <title>get_cell()</title>
<indexterm><primary>get_cell</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_cell</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * get_cell (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row, size_t col)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a7e7238097d84a571ae3d5189a8ec47c0"/><section>
    <title>get_cell_and_create_if_not_exists()</title>
<indexterm><primary>get_cell_and_create_if_not_exists</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_cell_and_create_if_not_exists</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * get_cell_and_create_if_not_exists (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row, size_t col)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a3f99dbb688f5c24b74ed04fea920c0de"/><section>
    <title>get_cell_c()</title>
<indexterm><primary>get_cell_c</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_cell_c</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * get_cell_c (const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row, size_t col)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a9cf22afc8e3f8fbc1038722b1e918f76"/><section>
    <title>get_cell_prop_and_create_if_not_exists()</title>
<indexterm><primary>get_cell_prop_and_create_if_not_exists</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_cell_prop_and_create_if_not_exists</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a1dd5de14b38f8ea6034cd4574d2c5122">f_cell_props_t</link> * get_cell_prop_and_create_if_not_exists (<link linkend="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104">f_cell_prop_container_t</link> * cont, size_t row, size_t col)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a5b037958854d02c1fe2678a9be3295f6"/><section>
    <title>get_cell_property_hierarchically()</title>
<indexterm><primary>get_cell_property_hierarchically</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_cell_property_hierarchically</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int get_cell_property_hierarchically (const <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> * properties, size_t row, size_t column, uint32_t property)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a5c97b97ec34e15affaed2187d36c94c4"/><section>
    <title>get_cell_type()</title>
<indexterm><primary>get_cell_type</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_cell_type</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> enum <link linkend="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4">f_cell_type</link> get_cell_type (const <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * cell)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a6855260f3c1d1da0696e5d1e652bc4ef"/><section>
    <title>get_cur_str_buffer_and_create_if_not_exists()</title>
<indexterm><primary>get_cur_str_buffer_and_create_if_not_exists</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_cur_str_buffer_and_create_if_not_exists</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * get_cur_str_buffer_and_create_if_not_exists (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a14b841bae5c7188b971109613ab2b12a"/><section>
    <title>get_reset_style_tag_for_cell()</title>
<indexterm><primary>get_reset_style_tag_for_cell</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_reset_style_tag_for_cell</secondary></indexterm>
<para><computeroutput>void get_reset_style_tag_for_cell (const <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> * props, size_t row, size_t col, char * style_tag, size_t sz)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab4db6996f6df6e03e566bdbdfba76da0"/><section>
    <title>get_reset_style_tag_for_content()</title>
<indexterm><primary>get_reset_style_tag_for_content</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_reset_style_tag_for_content</secondary></indexterm>
<para><computeroutput>void get_reset_style_tag_for_content (const <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> * props, size_t row, size_t col, char * style_tag, size_t sz)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a409d9364981e54abbb8616d9b98b4dfe"/><section>
    <title>get_row()</title>
<indexterm><primary>get_row</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_row</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * get_row (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t row)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ad4906ec40fada2d7ded7846d4dd0b2bf"/><section>
    <title>get_row_and_create_if_not_exists()</title>
<indexterm><primary>get_row_and_create_if_not_exists</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_row_and_create_if_not_exists</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * get_row_and_create_if_not_exists (<link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t row)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a278381cdc233b3476f2660a5a422a1f5"/><section>
    <title>get_row_c()</title>
<indexterm><primary>get_row_c</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_row_c</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * get_row_c (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t row)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a187174d63ce94aa162d2468933cd3cbc"/><section>
    <title>get_row_cell_types()</title>
<indexterm><primary>get_row_cell_types</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_row_cell_types</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int get_row_cell_types (const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row, enum <link linkend="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4">f_cell_type</link> * types, size_t types_sz)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a5eb660e527d2b076b21d88c35bef4089"/><section>
    <title>get_style_tag_for_cell()</title>
<indexterm><primary>get_style_tag_for_cell</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_style_tag_for_cell</secondary></indexterm>
<para><computeroutput>void get_style_tag_for_cell (const <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> * props, size_t row, size_t col, char * style_tag, size_t sz)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae1ca1606073ac2c174844a4633c8159d"/><section>
    <title>get_style_tag_for_content()</title>
<indexterm><primary>get_style_tag_for_content</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_style_tag_for_content</secondary></indexterm>
<para><computeroutput>void get_style_tag_for_content (const <link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> * props, size_t row, size_t col, char * style_tag, size_t sz)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a7c9835a2792ffbd846c844f28e01e557"/><section>
    <title>get_table_sizes()</title>
<indexterm><primary>get_table_sizes</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>get_table_sizes</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> get_table_sizes (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t * rows, size_t * cols)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab36a4052c23098fca6dce54d6201d96b"/><section>
    <title>group_cell_number()</title>
<indexterm><primary>group_cell_number</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>group_cell_number</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t group_cell_number (const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row, size_t master_cell_col)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a4b4f366d1272078225219727401cde90"/><section>
    <title>hint_height_cell()</title>
<indexterm><primary>hint_height_cell</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>hint_height_cell</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t hint_height_cell (const <link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * cell, const <link linkend="_fort_8c_1a411e98c8a879520a2ccf789f62d10e85">f_context_t</link> * context)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a651c99d3ef016298fb72557264c415bf"/><section>
    <title>insert_row()</title>
<indexterm><primary>insert_row</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>insert_row</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> insert_row (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * cur_row, <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * ins_row, size_t pos)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a218b12058c9822ff0ad91544aedd2a13"/><section>
    <title>max_border_elem_strlen()</title>
<indexterm><primary>max_border_elem_strlen</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>max_border_elem_strlen</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t max_border_elem_strlen (struct <link linkend="_structf__table__properties">f_table_properties</link> * properties)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a8c6234fb096b466971193e24d3f9c85b"/><section>
    <title>mk_wcswidth()</title>
<indexterm><primary>mk_wcswidth</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>mk_wcswidth</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int mk_wcswidth (const wchar_t * pwcs, size_t n)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a99b4b352713722a3c4bd74f977dcddfb"/><section>
    <title>number_of_columns_in_format_buffer()</title>
<indexterm><primary>number_of_columns_in_format_buffer</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>number_of_columns_in_format_buffer</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t number_of_columns_in_format_buffer (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * fmt)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a5140ca8ce544c7fe7fd8580b46eb7919"/><section>
    <title>number_of_columns_in_format_string()</title>
<indexterm><primary>number_of_columns_in_format_string</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>number_of_columns_in_format_string</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t number_of_columns_in_format_string (const <link linkend="_fort_8c_1a5e5d59807caf98214d772b0952b8439c">f_string_view_t</link> * fmt)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a3e1f24169bad7166d9c73022ce44461f"/><section>
    <title>print_n_strings()</title>
<indexterm><primary>print_n_strings</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>print_n_strings</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int print_n_strings (<link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> * cntx, size_t n, const char * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a76b7a5fc469d3f72bedcefc8f97a8e58"/><section>
    <title>print_row_separator()</title>
<indexterm><primary>print_row_separator</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>print_row_separator</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int print_row_separator (<link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> * cntx, const size_t * col_width_arr, size_t cols, const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * upper_row, const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * lower_row, enum <link linkend="_fort_8c_1a114ae9015942e72d33913dbca07d18f5">f_hor_separator_pos</link> separatorPos, const <link linkend="_fort_8c_1a5527210203ffec9c5b8018dd133d8e13">f_separator_t</link> * sep)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a97de898073d1711de1d55369dfc067c7"/><section>
    <title>realloc_string_buffer_without_copy()</title>
<indexterm><primary>realloc_string_buffer_without_copy</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>realloc_string_buffer_without_copy</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> realloc_string_buffer_without_copy (<link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a66ea4a81d6bd50cb139417df40d7aba2"/><section>
    <title>row_set_cell_span()</title>
<indexterm><primary>row_set_cell_span</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>row_set_cell_span</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> row_set_cell_span (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row, size_t cell_column, size_t hor_span)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a59462cfbe20a08d695d7fdea80a53c94"/><section>
    <title>set_cell_property()</title>
<indexterm><primary>set_cell_property</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>set_cell_property</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> set_cell_property (<link linkend="_fort_8c_1a44489cbfc2d77483bf104e71a9adc104">f_cell_prop_container_t</link> * cont, size_t row, size_t col, uint32_t property, int value)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aa406a5dc43875274fb9eaa3c941ce753"/><section>
    <title>set_cell_type()</title>
<indexterm><primary>set_cell_type</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>set_cell_type</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void set_cell_type (<link linkend="_fort_8c_1a07073b13d8f5c2ae343197ab233e15f4">f_cell_t</link> * cell, enum <link linkend="_fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4">f_cell_type</link> type)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a74f59c42e342ef32cba6dda001961f5d"/><section>
    <title>set_default_cell_property()</title>
<indexterm><primary>set_default_cell_property</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>set_default_cell_property</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> set_default_cell_property (uint32_t property, int value)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a6552ebc09611ccba176d04a5702458a1"/><section>
    <title>set_default_entire_table_property()</title>
<indexterm><primary>set_default_entire_table_property</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>set_default_entire_table_property</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> set_default_entire_table_property (uint32_t property, int value)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a1cde977c8162b3902a3eece0b649e451"/><section>
    <title>set_entire_table_property()</title>
<indexterm><primary>set_entire_table_property</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>set_entire_table_property</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> set_entire_table_property (<link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> * table_properties, uint32_t property, int value)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae131c0f0e6d8da7a4708c7175bf1df10"/><section>
    <title>set_memory_funcs()</title>
<indexterm><primary>set_memory_funcs</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>set_memory_funcs</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void set_memory_funcs (void *(*)(size_t size) f_malloc, void(*)(void *ptr) f_free)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ac95471ef7b950b73451dc4aaf3a0e6f3"/><section>
    <title>snprintf_row()</title>
<indexterm><primary>snprintf_row</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>snprintf_row</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int snprintf_row (const <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row, <link linkend="_fort_8c_1afb581d944956bc8e61433744691e7efd">f_conv_context_t</link> * cntx, size_t * col_width_arr, size_t col_width_arr_sz, size_t row_height)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a234cff841d6e8bffc9955dd06d334420"/><section>
    <title>split_row()</title>
<indexterm><primary>split_row</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>split_row</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * split_row (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * row, size_t pos)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a813d4ec1a357d5ea24ab7f3abd339dfe"/><section>
    <title>str_n_substring()</title>
<indexterm><primary>str_n_substring</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>str_n_substring</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void str_n_substring (const char * str, char ch_separator, size_t n, const char ** begin, const char ** end)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1af08984e44d4cd70d191d78d9bcc5aebe"/><section>
    <title>str_n_substring_beg()</title>
<indexterm><primary>str_n_substring_beg</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>str_n_substring_beg</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const char * str_n_substring_beg (const char * str, char ch_separator, size_t n)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae289954698a8c45f5e5b8691dfb3c158"/><section>
    <title>strchr_count()</title>
<indexterm><primary>strchr_count</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>strchr_count</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t strchr_count (const char * str, char ch)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1acc99fa5ecb3035540808fb06ad4fa4e8"/><section>
    <title>string_buffer_cod_width_capacity()</title>
<indexterm><primary>string_buffer_cod_width_capacity</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>string_buffer_cod_width_capacity</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t string_buffer_cod_width_capacity (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a66f99ddf13fdabb67f73a0a763307afb"/><section>
    <title>string_buffer_raw_capacity()</title>
<indexterm><primary>string_buffer_raw_capacity</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>string_buffer_raw_capacity</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t string_buffer_raw_capacity (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a398a13f3db5a43bca6fecdc119f38a88"/><section>
    <title>string_buffer_width_capacity()</title>
<indexterm><primary>string_buffer_width_capacity</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>string_buffer_width_capacity</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t string_buffer_width_capacity (const <link linkend="_fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88">f_string_buffer_t</link> * buffer)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae67f055e422299c4821b1a00d5bfeb6d"/><section>
    <title>swap_row()</title>
<indexterm><primary>swap_row</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>swap_row</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> swap_row (<link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * cur_row, <link linkend="_fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b">f_row_t</link> * ins_row, size_t pos)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a70608495ec687e0f65fec1cdad97a12f"/><section>
    <title>table_geometry()</title>
<indexterm><primary>table_geometry</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>table_geometry</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> table_geometry (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t * height, size_t * width)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae8047e766a703ad17a2dcc58645eb4df"/><section>
    <title>table_internal_codepoints_geometry()</title>
<indexterm><primary>table_internal_codepoints_geometry</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>table_internal_codepoints_geometry</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> table_internal_codepoints_geometry (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t * height, size_t * width)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ac6a1014eacf8e41589fe6e7d6ffec493"/><section>
    <title>table_rows_and_cols_geometry()</title>
<indexterm><primary>table_rows_and_cols_geometry</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>table_rows_and_cols_geometry</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> table_rows_and_cols_geometry (const <link linkend="_fort_8h_1a6307d2840e0e96880c4d0f04b12a2187">ft_table_t</link> * table, size_t ** col_width_arr_p, size_t * col_width_arr_sz, size_t ** row_height_arr_p, size_t * row_height_arr_sz, enum <link linkend="_fort_8c_1af04f170451a6d8600ba71c318b2b6027">f_geometry_type</link> geom)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a80fef8e1c3794e7c888bf8d2d7fa781d"/><section>
    <title>ut8next()</title>
<indexterm><primary>ut8next</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>ut8next</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void * ut8next (const void * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ad9fad63df44484d04f254de1a6e25e91"/><section>
    <title>utf8_n_substring()</title>
<indexterm><primary>utf8_n_substring</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8_n_substring</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void utf8_n_substring (const void * str, <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> ch_separator, size_t n, const void ** begin, const void ** end)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a645962e09bdc5a7d0159356679c3ed51"/><section>
    <title>utf8_n_substring_beg()</title>
<indexterm><primary>utf8_n_substring_beg</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8_n_substring_beg</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const void * utf8_n_substring_beg (const void * str, <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> ch_separator, size_t n)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a7349d4800cf8b7db916cdbe2fdacdb0b"/><section>
    <title>utf8casecmp()</title>
<indexterm><primary>utf8casecmp</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8casecmp</secondary></indexterm>
<para><computeroutput>int utf8casecmp (const void * src1, const void * src2)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a00197aa7445ef50af8eb7de80904cc55"/><section>
    <title>utf8casestr()</title>
<indexterm><primary>utf8casestr</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8casestr</secondary></indexterm>
<para><computeroutput>void * utf8casestr (const void * haystack, const void * needle)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a26b01cd15111c67880a523b603002188"/><section>
    <title>utf8cat()</title>
<indexterm><primary>utf8cat</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8cat</secondary></indexterm>
<para><computeroutput>void * utf8cat (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> dst, const void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> src)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a7faf7f12202a186786dea223abbd2486"/><section>
    <title>utf8catcodepoint()</title>
<indexterm><primary>utf8catcodepoint</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8catcodepoint</secondary></indexterm>
<para><computeroutput>void * utf8catcodepoint (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> str, <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> chr, size_t n)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a26d8cb716ec6b80b8e1ecc0d242de961"/><section>
    <title>utf8chr()</title>
<indexterm><primary>utf8chr</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8chr</secondary></indexterm>
<para><computeroutput>void * utf8chr (const void * src, <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> chr)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1af2542674afdd3d9ad6961fb066dd6c4d"/><section>
    <title>utf8chr_count()</title>
<indexterm><primary>utf8chr_count</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8chr_count</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t utf8chr_count (const void * str, <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> ch)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a260642d22e26c99dbbaf65e98eadc88a"/><section>
    <title>utf8cmp()</title>
<indexterm><primary>utf8cmp</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8cmp</secondary></indexterm>
<para><computeroutput>int utf8cmp (const void * src1, const void * src2)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e"/><section>
    <title>utf8codepoint()</title>
<indexterm><primary>utf8codepoint</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8codepoint</secondary></indexterm>
<para><computeroutput>void * utf8codepoint (const void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> str, <link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> out_codepoint)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a5485ff272fc1530f21b35d32f9ab7a88"/><section>
    <title>utf8codepointsize()</title>
<indexterm><primary>utf8codepointsize</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8codepointsize</secondary></indexterm>
<para><computeroutput>size_t utf8codepointsize (<link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> chr)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a1568eafa1ce27f57d1a239ee8d3804f9"/><section>
    <title>utf8coll()</title>
<indexterm><primary>utf8coll</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8coll</secondary></indexterm>
<para><computeroutput>int utf8coll (const void * src1, const void * src2)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a7659546b0f93f4e58ecea8ccc303851f"/><section>
    <title>utf8cpy()</title>
<indexterm><primary>utf8cpy</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8cpy</secondary></indexterm>
<para><computeroutput>void * utf8cpy (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> dst, const void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> src)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aaa64987dd6510395216898ed8117f290"/><section>
    <title>utf8cspn()</title>
<indexterm><primary>utf8cspn</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8cspn</secondary></indexterm>
<para><computeroutput>size_t utf8cspn (const void * src, const void * reject)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a72273b72cf22e087384fade5accece3e"/><section>
    <title>utf8cwidth()</title>
<indexterm><primary>utf8cwidth</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8cwidth</secondary></indexterm>
<para><computeroutput>int utf8cwidth (<link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> c)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a157235d1e84617035dd6a2b6891d1190"/><section>
    <title>utf8dup()</title>
<indexterm><primary>utf8dup</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8dup</secondary></indexterm>
<para><computeroutput>void * utf8dup (const void * src)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a3d2efa24ea68275533011b2bd862d8f2"/><section>
    <title>utf8fry()</title>
<indexterm><primary>utf8fry</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8fry</secondary></indexterm>
<para><computeroutput>void * utf8fry (const void * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aa3502e1c380c7a4b0f7a02ffc2c3c358"/><section>
    <title>utf8islower()</title>
<indexterm><primary>utf8islower</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8islower</secondary></indexterm>
<para><computeroutput>int utf8islower (<link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> chr)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a0b1efc85ea0182178c2e61603c21ef6c"/><section>
    <title>utf8isupper()</title>
<indexterm><primary>utf8isupper</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8isupper</secondary></indexterm>
<para><computeroutput>int utf8isupper (<link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> chr)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1acf9a71744695b4e13bd8fe284f6493f5"/><section>
    <title>utf8len()</title>
<indexterm><primary>utf8len</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8len</secondary></indexterm>
<para><computeroutput>size_t utf8len (const void * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1af7329f330e93a5944837500cd4eb70ac"/><section>
    <title>utf8lwr()</title>
<indexterm><primary>utf8lwr</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8lwr</secondary></indexterm>
<para><computeroutput>void utf8lwr (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a2204af282a8d53880eceeb503d043319"/><section>
    <title>utf8lwrcodepoint()</title>
<indexterm><primary>utf8lwrcodepoint</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8lwrcodepoint</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> utf8lwrcodepoint (<link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> cp)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a76ca27590e83a0d94f85e5a58d3dbfac"/><section>
    <title>utf8ncasecmp()</title>
<indexterm><primary>utf8ncasecmp</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8ncasecmp</secondary></indexterm>
<para><computeroutput>int utf8ncasecmp (const void * src1, const void * src2, size_t n)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a11ed5b03517ab8ce1f811995695068c1"/><section>
    <title>utf8ncat()</title>
<indexterm><primary>utf8ncat</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8ncat</secondary></indexterm>
<para><computeroutput>void * utf8ncat (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> dst, const void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> src, size_t n)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aee64c8755c33e9b410d3d911095b8573"/><section>
    <title>utf8ncmp()</title>
<indexterm><primary>utf8ncmp</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8ncmp</secondary></indexterm>
<para><computeroutput>int utf8ncmp (const void * src1, const void * src2, size_t n)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aabf0105a5dbba289e35565281e3e4e4a"/><section>
    <title>utf8ncpy()</title>
<indexterm><primary>utf8ncpy</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8ncpy</secondary></indexterm>
<para><computeroutput>void * utf8ncpy (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> dst, const void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> src, size_t n)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a141320e9eb2d70f541c09ef36e1230bf"/><section>
    <title>utf8ndup()</title>
<indexterm><primary>utf8ndup</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8ndup</secondary></indexterm>
<para><computeroutput>void * utf8ndup (const void * src, size_t n)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ac0044439ba5de366174a070337d46b00"/><section>
    <title>utf8pbrk()</title>
<indexterm><primary>utf8pbrk</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8pbrk</secondary></indexterm>
<para><computeroutput>void * utf8pbrk (const void * str, const void * accept)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a8d291c79b99c32f07241854c6f8ce61d"/><section>
    <title>utf8rchr()</title>
<indexterm><primary>utf8rchr</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8rchr</secondary></indexterm>
<para><computeroutput>void * utf8rchr (const void * src, int chr)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a1ef3ed7cdde8e5b378fad2edc26366d9"/><section>
    <title>utf8size()</title>
<indexterm><primary>utf8size</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8size</secondary></indexterm>
<para><computeroutput>size_t utf8size (const void * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a2751e31b4afa3d09d21b2d3dada3b8fa"/><section>
    <title>utf8spn()</title>
<indexterm><primary>utf8spn</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8spn</secondary></indexterm>
<para><computeroutput>size_t utf8spn (const void * src, const void * accept)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a90a2d154aa14ee7e5ee755d094328cae"/><section>
    <title>utf8str()</title>
<indexterm><primary>utf8str</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8str</secondary></indexterm>
<para><computeroutput>void * utf8str (const void * haystack, const void * needle)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae033fd7896504dcd1b9dfc6d6cf97584"/><section>
    <title>utf8upr()</title>
<indexterm><primary>utf8upr</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8upr</secondary></indexterm>
<para><computeroutput>void utf8upr (void *<link linkend="_fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914">utf8_restrict</link> str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1afc7b7f0e41515bc7d694f22ec6fccd92"/><section>
    <title>utf8uprcodepoint()</title>
<indexterm><primary>utf8uprcodepoint</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8uprcodepoint</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> utf8uprcodepoint (<link linkend="_fort_8c_1a3da3a66d7d414df5608bad52de75cc94">utf8_int32_t</link> cp)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aedad8b40a6836b75f6268a6a66b53f76"/><section>
    <title>utf8valid()</title>
<indexterm><primary>utf8valid</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8valid</secondary></indexterm>
<para><computeroutput>void * utf8valid (const void * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ac93b14073da51fe7722162b16b117d34"/><section>
    <title>utf8width()</title>
<indexterm><primary>utf8width</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>utf8width</secondary></indexterm>
<para><computeroutput>size_t utf8width (const void * str)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1abb033777a1a8c0b490f14541bc0332fa"/><section>
    <title>vector_at()</title>
<indexterm><primary>vector_at</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>vector_at</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void * vector_at (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * vector, size_t index)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a91644aa66c95f718abb2f0ad731c604b"/><section>
    <title>vector_at_c()</title>
<indexterm><primary>vector_at_c</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>vector_at_c</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const void * vector_at_c (const <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * vector, size_t index)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a81f0b5b62d8a431c44be2bac0f6f8465"/><section>
    <title>vector_capacity()</title>
<indexterm><primary>vector_capacity</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>vector_capacity</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t vector_capacity (const <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * vector)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aeed5528bb1a8124b530766b5cdd607f4"/><section>
    <title>vector_clear()</title>
<indexterm><primary>vector_clear</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>vector_clear</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void vector_clear (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * vector)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae1d70435626d59e4d41971e22fa90fec"/><section>
    <title>vector_erase()</title>
<indexterm><primary>vector_erase</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>vector_erase</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int vector_erase (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * vector, size_t index)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a5ca29d2ab42c28eff3a8fc5fae7b9829"/><section>
    <title>vector_insert()</title>
<indexterm><primary>vector_insert</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>vector_insert</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int vector_insert (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * vector, const void * item, size_t pos)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a48a4c572a9523b30ea430a9aefde654d"/><section>
    <title>vector_push()</title>
<indexterm><primary>vector_push</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>vector_push</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> int vector_push (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * vector, const void * item)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b"/><section>
    <title>vector_size()</title>
<indexterm><primary>vector_size</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>vector_size</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t vector_size (const <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * vector)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1acb4f5f3823ce6b50e51c8223c5fb9c2a"/><section>
    <title>vector_split()</title>
<indexterm><primary>vector_split</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>vector_split</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * vector_split (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * vector, size_t pos)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a844f2a888602cd950e5a2d7c332c3b07"/><section>
    <title>vector_swap()</title>
<indexterm><primary>vector_swap</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>vector_swap</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> <link linkend="_fort_8c_1af2b63f358e58e9800b9303ee84d0dc58">f_status</link> vector_swap (<link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * cur_vec, <link linkend="_fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0">f_vector_t</link> * mv_vec, size_t pos)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1abf373d518201debe18cd197815ca9ac5"/><section>
    <title>wstr_n_substring()</title>
<indexterm><primary>wstr_n_substring</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>wstr_n_substring</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> void wstr_n_substring (const wchar_t * str, wchar_t ch_separator, size_t n, const wchar_t ** begin, const wchar_t ** end)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a0bb46889515e213588fc8684f6f2ad8f"/><section>
    <title>wstr_n_substring_beg()</title>
<indexterm><primary>wstr_n_substring_beg</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>wstr_n_substring_beg</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> const wchar_t * wstr_n_substring_beg (const wchar_t * str, wchar_t ch_separator, size_t n)</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a8ca255a1bafc7d73de3e0dcc4736f992"/><section>
    <title>wstrchr_count()</title>
<indexterm><primary>wstrchr_count</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>wstrchr_count</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1af0c41e082800b552ff6a3f4b7783893e">FT_INTERNAL</link> size_t wstrchr_count (const wchar_t * str, wchar_t ch)</computeroutput></para></section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_fort_8c_1a18048056d8d37f0485dfc4480266b407"/><section>
    <title>FORT_BASIC2_STYLE</title>
<indexterm><primary>FORT_BASIC2_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_BASIC2_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_BASIC2_STYLE = <link linkend="_fort_8c_1a84323253628c81be9d93a0d6fadc891c">BASIC2_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a1551acd214a753796743eb0272395869"/><section>
    <title>FORT_BASIC_STYLE</title>
<indexterm><primary>FORT_BASIC_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_BASIC_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_BASIC_STYLE = <link linkend="_fort_8c_1a25b25babc27e11fbe4cfae21995881e6">BASIC_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a2e98d54b72c590832a3d252dd43f68e7"/><section>
    <title>FORT_BOLD2_STYLE</title>
<indexterm><primary>FORT_BOLD2_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_BOLD2_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_BOLD2_STYLE = <link linkend="_fort_8c_1aa6f6720b767dd4451f95654b138af84c">BOLD2_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1adce884980314dc4c5f6b5d19b6c9f0ae"/><section>
    <title>FORT_BOLD_STYLE</title>
<indexterm><primary>FORT_BOLD_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_BOLD_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_BOLD_STYLE = <link linkend="_fort_8c_1a818cdb05e2e0ee60b8693016efdcebff">BOLD_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab2604d3e25cf16a7e668feb1fc0e7b37"/><section>
    <title>fort_calloc</title>
<indexterm><primary>fort_calloc</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fort_calloc</secondary></indexterm>
<para><computeroutput>void *(* fort_calloc)(size_t nmemb, size_t size) (size_t nmemb, size_t size) = &amp;local_calloc</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab5cfb34391ceae55c3adc0b856e2d3d1"/><section>
    <title>FORT_DOT_STYLE</title>
<indexterm><primary>FORT_DOT_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_DOT_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_DOT_STYLE = <link linkend="_fort_8c_1a40f9b235882059f09a69c951205869fe">DOT_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1ad7b86e58f7e8a1871d31e9d36e1afe8e"/><section>
    <title>FORT_DOUBLE2_STYLE</title>
<indexterm><primary>FORT_DOUBLE2_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_DOUBLE2_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_DOUBLE2_STYLE = <link linkend="_fort_8c_1a2977b3d23b0acedf98ddb75cfa3714c2">DOUBLE2_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a8bea0c4f43e34eccd50a38cf7cf275d9"/><section>
    <title>FORT_DOUBLE_STYLE</title>
<indexterm><primary>FORT_DOUBLE_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_DOUBLE_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_DOUBLE_STYLE = <link linkend="_fort_8c_1a6c3842c70b6f4100cd5973e7a288c2d4">DOUBLE_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1acd0057b56b50d3772d93a58a345f8498"/><section>
    <title>FORT_EMPTY2_STYLE</title>
<indexterm><primary>FORT_EMPTY2_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_EMPTY2_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_EMPTY2_STYLE = <link linkend="_fort_8c_1a34458dc60b60037c1df5622184763bd1">EMPTY2_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a58948e002a53e826043f3f1fd0efa626"/><section>
    <title>FORT_EMPTY_STYLE</title>
<indexterm><primary>FORT_EMPTY_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_EMPTY_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_EMPTY_STYLE = <link linkend="_fort_8c_1ad19626848a66b2a7f33ae0e16db45b7f">EMPTY_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a1ee29f5ac5af7b2100ca44d999f65493"/><section>
    <title>FORT_FRAME_STYLE</title>
<indexterm><primary>FORT_FRAME_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_FRAME_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_FRAME_STYLE = <link linkend="_fort_8c_1a9307749f2660d6c9ac81a0f3ae89a0de">FRAME_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a2a6d016d7f881874b0a6212d08514f5b"/><section>
    <title>fort_free</title>
<indexterm><primary>fort_free</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fort_free</secondary></indexterm>
<para><computeroutput>void(* fort_free)(void *ptr) (void * ptr) = &amp;local_free</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a792989ae317c7b690425af8179d88466"/><section>
    <title>fort_malloc</title>
<indexterm><primary>fort_malloc</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fort_malloc</secondary></indexterm>
<para><computeroutput>void *(* fort_malloc)(size_t size) (size_t size) = &amp;local_malloc</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ad07ecf56923564f20f54de569baa4c31"/><section>
    <title>FORT_NICE_STYLE</title>
<indexterm><primary>FORT_NICE_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_NICE_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_NICE_STYLE = <link linkend="_fort_8c_1ad112a91d6823b6b59b1791ceb6445a93">NICE_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1afa51b0acbd3c7ce38f236fbd8accd283"/><section>
    <title>FORT_PLAIN_STYLE</title>
<indexterm><primary>FORT_PLAIN_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_PLAIN_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_PLAIN_STYLE = <link linkend="_fort_8c_1ad95c8d93533ada8f96019637c188f641">PLAIN_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1aac796d096112928799fe930648dc0da4"/><section>
    <title>fort_realloc</title>
<indexterm><primary>fort_realloc</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>fort_realloc</secondary></indexterm>
<para><computeroutput>void *(* fort_realloc)(void *ptr, size_t size) (void * ptr, size_t size) = &amp;local_realloc</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ac35b24f98659298aafaac4f782b35908"/><section>
    <title>FORT_SIMPLE_STYLE</title>
<indexterm><primary>FORT_SIMPLE_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_SIMPLE_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_SIMPLE_STYLE = <link linkend="_fort_8c_1a58a32c54547e08b469930b07ec56d9d4">SIMPLE_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1afaadc6fcd0ea52e9bea97f198623dd34"/><section>
    <title>FORT_SOLID_ROUND_STYLE</title>
<indexterm><primary>FORT_SOLID_ROUND_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_SOLID_ROUND_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_SOLID_ROUND_STYLE = <link linkend="_fort_8c_1adb4ab5efdfbfd2cfb08cfdb595c4f90a">SOLID_ROUND_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab60c22c456490dc1c2b2581206aade7f"/><section>
    <title>FORT_SOLID_STYLE</title>
<indexterm><primary>FORT_SOLID_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FORT_SOLID_STYLE</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structfort__border__style">fort_border_style</link> FORT_SOLID_STYLE = <link linkend="_fort_8c_1ac551f30a3d753dbce194e2d5c50a7950">SOLID_STYLE</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1ab3ed5c4f1c4f7ca26b52b668fd4717f9"/><section>
    <title>FT_BASIC2_STYLE</title>
<indexterm><primary>FT_BASIC2_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_BASIC2_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_BASIC2_STYLE = &amp;built_in_external_styles[1]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a4566853be8c0cdf91ba9c3f50eb426d4"/><section>
    <title>FT_BASIC_STYLE</title>
<indexterm><primary>FT_BASIC_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_BASIC_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_BASIC_STYLE = &amp;built_in_external_styles[0]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a7b82fd38c92a289fc641d3666684bcd4"/><section>
    <title>FT_BOLD2_STYLE</title>
<indexterm><primary>FT_BOLD2_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_BOLD2_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_BOLD2_STYLE = &amp;built_in_external_styles[13]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1af392ad3ae759382d95921e1efb652744"/><section>
    <title>FT_BOLD_STYLE</title>
<indexterm><primary>FT_BOLD_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_BOLD_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_BOLD_STYLE = &amp;built_in_external_styles[12]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a148f3f2c872531fdeca8e4ace60eb258"/><section>
    <title>FT_DOT_STYLE</title>
<indexterm><primary>FT_DOT_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_DOT_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_DOT_STYLE = &amp;built_in_external_styles[4]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a23314491db1204b8654f8cd610692260"/><section>
    <title>FT_DOUBLE2_STYLE</title>
<indexterm><primary>FT_DOUBLE2_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_DOUBLE2_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_DOUBLE2_STYLE = &amp;built_in_external_styles[11]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ad0e15260ea4a4c66f0bfa2c82b889107"/><section>
    <title>FT_DOUBLE_STYLE</title>
<indexterm><primary>FT_DOUBLE_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_DOUBLE_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_DOUBLE_STYLE = &amp;built_in_external_styles[10]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a357302cc732e53c1c7049842fc0fc3c7"/><section>
    <title>FT_EMPTY2_STYLE</title>
<indexterm><primary>FT_EMPTY2_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_EMPTY2_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_EMPTY2_STYLE = &amp;built_in_external_styles[6]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aa8916e07fa9a8d1f24c1e1d1e6b68838"/><section>
    <title>FT_EMPTY_STYLE</title>
<indexterm><primary>FT_EMPTY_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_EMPTY_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_EMPTY_STYLE = &amp;built_in_external_styles[5]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aef91486de193b4dfe511a992f9b02bb9"/><section>
    <title>FT_FRAME_STYLE</title>
<indexterm><primary>FT_FRAME_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_FRAME_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_FRAME_STYLE = &amp;built_in_external_styles[14]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a91de4cab0e239a201fa2a7dc961b2fdc"/><section>
    <title>FT_NICE_STYLE</title>
<indexterm><primary>FT_NICE_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_NICE_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_NICE_STYLE = &amp;built_in_external_styles[9]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1add469a34d262e6368adaa636d1cf76b7"/><section>
    <title>FT_PLAIN_STYLE</title>
<indexterm><primary>FT_PLAIN_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_PLAIN_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_PLAIN_STYLE = &amp;built_in_external_styles[3]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a7581c1fec7b7c2b88f93e3445c62424d"/><section>
    <title>FT_SIMPLE_STYLE</title>
<indexterm><primary>FT_SIMPLE_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_SIMPLE_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_SIMPLE_STYLE = &amp;built_in_external_styles[2]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1aedcc877521b55c87758949920ef0ee96"/><section>
    <title>FT_SOLID_ROUND_STYLE</title>
<indexterm><primary>FT_SOLID_ROUND_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_SOLID_ROUND_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_SOLID_ROUND_STYLE = &amp;built_in_external_styles[8]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1ae4723d497ac2e6980b43ac7732e21f2d"/><section>
    <title>FT_SOLID_STYLE</title>
<indexterm><primary>FT_SOLID_STYLE</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>FT_SOLID_STYLE</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structft__border__style">ft_border_style</link>* const FT_SOLID_STYLE = &amp;built_in_external_styles[7]</computeroutput></para></section>
<anchor xml:id="_fort_8c_1a75ae5722df432140a46c9ff1fe069570"/><section>
    <title>g_col_separator</title>
<indexterm><primary>g_col_separator</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>g_col_separator</secondary></indexterm>
<para><computeroutput>char g_col_separator = <link linkend="_fort_8c_1a3abeff93bbe13043e19c4bd8b6dd30df">FORT_DEFAULT_COL_SEPARATOR</link></computeroutput></para></section>
<anchor xml:id="_fort_8c_1a59d265136eda43200385d8b5f04ecd2c"/><section>
    <title>g_entire_table_properties</title>
<indexterm><primary>g_entire_table_properties</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>g_entire_table_properties</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1a171a2ab1349903dadd4fde07a45a6ee3">fort_entire_table_properties_t</link> g_entire_table_properties</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;{
&#32;&#32;&#32;&#32;0,&#32;
&#32;&#32;&#32;&#32;0,&#32;
&#32;&#32;&#32;&#32;0,&#32;
&#32;&#32;&#32;&#32;0,&#32;
&#32;&#32;&#32;&#32;<link linkend="_fort_8h_1aeed2958a1823084ca6e71883b075baa5aa620d123a0ac00710153d28a6ab65842">FT_STRATEGY_REPLACE</link>,&#32;
}
</programlisting></section>
<anchor xml:id="_fort_8c_1a7e383842a355b23739ccb9bb081cf543"/><section>
    <title>g_table_properties</title>
<indexterm><primary>g_table_properties</primary><secondary>fort.c</secondary></indexterm>
<indexterm><primary>fort.c</primary><secondary>g_table_properties</secondary></indexterm>
<para><computeroutput><link linkend="_fort_8c_1a735cace167a88d782d8e3200cb4aedf9">f_table_properties_t</link> g_table_properties</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting linenumbering="unnumbered">=&#32;{
&#32;&#32;&#32;&#32;
&#32;&#32;&#32;&#32;<link linkend="_fort_8c_1a25b25babc27e11fbe4cfae21995881e6">BASIC_STYLE</link>,
&#32;&#32;&#32;&#32;NULL,&#32;&#32;&#32;&#32;&#32;
&#32;&#32;&#32;&#32;
&#32;&#32;&#32;&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,&#32;&#32;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_fort_8h_1aeed2958a1823084ca6e71883b075baa5aa620d123a0ac00710153d28a6ab65842">FT_STRATEGY_REPLACE</link>,&#32;
&#32;&#32;&#32;&#32;}
}
</programlisting></section>
</section>
</section>
